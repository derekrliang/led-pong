
project5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00006386  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00800060  00006386  0000641a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000001d2  00800076  00800076  00006430  2**0
                  ALLOC
  3 .stab         00000d74  00000000  00000000  00006430  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000268  00000000  00000000  000071a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      0000002f  00000000  00000000  0000740c  2**0
                  CONTENTS, READONLY
  6 .debug_aranges 00000968  00000000  00000000  0000743b  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   0000c946  00000000  00000000  00007da3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 00003780  00000000  00000000  000146e9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   00007468  00000000  00000000  00017e69  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  00001b74  00000000  00000000  0001f2d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000d10a  00000000  00000000  00020e48  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    000096ea  00000000  00000000  0002df52  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000708  00000000  00000000  0003763c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_macro  000043b5  00000000  00000000  00037d44  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 ee 1a 	jmp	0x35dc	; 0x35dc <__ctors_end>
       4:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
       8:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
       c:	0c 94 7e 20 	jmp	0x40fc	; 0x40fc <__vector_3>
      10:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      14:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      18:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      1c:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      20:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      24:	0c 94 2a 2b 	jmp	0x5654	; 0x5654 <__vector_9>
      28:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      2c:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      30:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      34:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      38:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      3c:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      40:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      44:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      48:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      4c:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>
      50:	0c 94 0b 1b 	jmp	0x3616	; 0x3616 <__bad_interrupt>

00000054 <font>:
      54:	00 00 00 00 00 3e 5b 4f 5b 3e 3e 6b 4f 6b 3e 1c     .....>[O[>>kOk>.
      64:	3e 7c 3e 1c 18 3c 7e 3c 18 1c 57 7d 57 1c 1c 5e     >|>..<~<..W}W..^
      74:	7f 5e 1c 00 18 3c 18 00 ff e7 c3 e7 ff 00 18 24     .^...<.........$
      84:	18 00 ff e7 db e7 ff 30 48 3a 06 0e 26 29 79 29     .......0H:..&)y)
      94:	26 40 7f 05 05 07 40 7f 05 25 3f 5a 3c e7 3c 5a     &@....@..%?Z<.<Z
      a4:	7f 3e 1c 1c 08 08 1c 1c 3e 7f 14 22 7f 22 14 5f     .>......>.."."._
      b4:	5f 00 5f 5f 06 09 7f 01 7f 00 66 89 95 6a 60 60     _.__......f..j``
      c4:	60 60 60 94 a2 ff a2 94 08 04 7e 04 08 10 20 7e     ```.......~... ~
      d4:	20 10 08 08 2a 1c 08 08 1c 2a 08 08 1e 10 10 10      ...*....*......
      e4:	10 0c 1e 0c 1e 0c 30 38 3e 38 30 06 0e 3e 0e 06     ......08>80..>..
      f4:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     104:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     114:	56 20 50 00 08 07 03 00 00 1c 22 41 00 00 41 22     V P......."A..A"
     124:	1c 00 2a 1c 7f 1c 2a 08 08 3e 08 08 00 80 70 30     ..*...*..>....p0
     134:	00 08 08 08 08 08 00 00 60 60 00 20 10 08 04 02     ........``. ....
     144:	3e 51 49 45 3e 00 42 7f 40 00 72 49 49 49 46 21     >QIE>.B.@.rIIIF!
     154:	41 49 4d 33 18 14 12 7f 10 27 45 45 45 39 3c 4a     AIM3.....'EEE9<J
     164:	49 49 31 41 21 11 09 07 36 49 49 49 36 46 49 49     II1A!...6III6FII
     174:	29 1e 00 00 14 00 00 00 40 34 00 00 00 08 14 22     ).......@4....."
     184:	41 14 14 14 14 14 00 41 22 14 08 02 01 59 09 06     A......A"....Y..
     194:	3e 41 5d 59 4e 7c 12 11 12 7c 7f 49 49 49 36 3e     >A]YN|...|.III6>
     1a4:	41 41 41 22 7f 41 41 41 3e 7f 49 49 49 41 7f 09     AAA".AAA>.IIIA..
     1b4:	09 09 01 3e 41 41 51 73 7f 08 08 08 7f 00 41 7f     ...>AAQs......A.
     1c4:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     1d4:	40 7f 02 1c 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     1e4:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 26     .....>AQ!^...)F&
     1f4:	49 49 49 32 03 01 7f 01 03 3f 40 40 40 3f 1f 20     III2.....?@@@?. 
     204:	40 20 1f 3f 40 38 40 3f 63 14 08 14 63 03 04 78     @ .?@8@?c...c..x
     214:	04 03 61 59 49 4d 43 00 7f 41 41 41 02 04 08 10     ..aYIMC..AAA....
     224:	20 00 41 41 41 7f 04 02 01 02 04 40 40 40 40 40      .AAA......@@@@@
     234:	00 03 07 08 00 20 54 54 78 40 7f 28 44 44 38 38     ..... TTx@.(DD88
     244:	44 44 44 28 38 44 44 28 7f 38 54 54 54 18 00 08     DDD(8DD(.8TTT...
     254:	7e 09 02 18 a4 a4 9c 78 7f 08 04 04 78 00 44 7d     ~......x....x.D}
     264:	40 00 20 40 40 3d 00 7f 10 28 44 00 00 41 7f 40     @. @@=...(D..A.@
     274:	00 7c 04 78 04 78 7c 08 04 04 78 38 44 44 44 38     .|.x.x|...x8DDD8
     284:	fc 18 24 24 18 18 24 24 18 fc 7c 08 04 04 08 48     ..$$..$$..|....H
     294:	54 54 54 24 04 04 3f 44 24 3c 40 40 20 7c 1c 20     TTT$..?D$<@@ |. 
     2a4:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 4c 90 90     @ .<@0@<D(.(DL..
     2b4:	90 7c 44 64 54 4c 44 00 08 36 41 00 00 00 77 00     .|DdTLD..6A...w.
     2c4:	00 00 41 36 08 00 02 01 02 04 02 3c 26 23 26 3c     ..A6.......<&#&<
     2d4:	1e a1 a1 61 12 3a 40 40 20 7a 38 54 54 55 59 21     ...a.:@@ z8TTUY!
     2e4:	55 55 79 41 21 54 54 78 41 21 55 54 78 40 20 54     UUyA!TTxA!UTx@ T
     2f4:	55 79 40 0c 1e 52 72 12 39 55 55 55 59 39 54 54     Uy@..Rr.9UUUY9TT
     304:	54 59 39 55 54 54 58 00 00 45 7c 41 00 02 45 7d     TY9UTTX..E|A..E}
     314:	42 00 01 45 7c 40 f0 29 24 29 f0 f0 28 25 28 f0     B..E|@.)$)..(%(.
     324:	7c 54 55 45 00 20 54 54 7c 54 7c 0a 09 7f 49 32     |TUE. TT|T|...I2
     334:	49 49 49 32 32 48 48 48 32 32 4a 48 48 30 3a 41     III22HHH22JHH0:A
     344:	41 21 7a 3a 42 40 20 78 00 9d a0 a0 7d 39 44 44     A!z:B@ x....}9DD
     354:	44 39 3d 40 40 40 3d 3c 24 ff 24 24 48 7e 49 43     D9=@@@=<$.$$H~IC
     364:	66 2b 2f fc 2f 2b ff 09 29 f6 20 c0 88 7e 09 03     f+/./+..). ..~..
     374:	20 54 54 79 41 00 00 44 7d 41 30 48 48 4a 32 38      TTyA..D}A0HHJ28
     384:	40 40 22 7a 00 7a 0a 0a 72 7d 0d 19 31 7d 26 29     @@"z.z..r}..1}&)
     394:	29 2f 28 26 29 29 29 26 30 48 4d 40 20 38 08 08     )/(&)))&0HM@ 8..
     3a4:	08 08 08 08 08 08 38 2f 10 c8 ac ba 2f 10 28 34     ......8/..../.(4
     3b4:	fa 00 00 7b 00 00 08 14 2a 14 22 22 14 2a 14 08     ...{....*."".*..
     3c4:	aa 00 55 00 aa aa 55 aa 55 aa 00 00 00 ff 00 10     ..U...U.U.......
     3d4:	10 10 ff 00 14 14 14 ff 00 10 10 ff 00 ff 10 10     ................
     3e4:	f0 10 f0 14 14 14 fc 00 14 14 f7 00 ff 00 00 ff     ................
     3f4:	00 ff 14 14 f4 04 fc 14 14 17 10 1f 10 10 1f 10     ................
     404:	1f 14 14 14 1f 00 10 10 10 f0 00 00 00 00 1f 10     ................
     414:	10 10 10 1f 10 10 10 10 f0 10 00 00 00 ff 10 10     ................
     424:	10 10 10 10 10 10 10 ff 10 00 00 00 ff 14 00 00     ................
     434:	ff 00 ff 00 00 1f 10 17 00 00 fc 04 f4 14 14 17     ................
     444:	10 17 14 14 f4 04 f4 00 00 ff 00 f7 14 14 14 14     ................
     454:	14 14 14 f7 00 f7 14 14 14 17 14 10 10 1f 10 1f     ................
     464:	14 14 14 f4 14 10 10 f0 10 f0 00 00 1f 10 1f 00     ................
     474:	00 00 1f 14 00 00 00 fc 14 00 00 f0 10 f0 10 10     ................
     484:	ff 10 ff 14 14 14 ff 14 10 10 10 1f 00 00 00 00     ................
     494:	f0 10 ff ff ff ff ff f0 f0 f0 f0 f0 ff ff ff 00     ................
     4a4:	00 00 00 00 ff ff 0f 0f 0f 0f 0f 38 44 44 38 44     ...........8DD8D
     4b4:	7c 2a 2a 3e 14 7e 02 02 06 06 02 7e 02 7e 02 63     |**>.~.....~.~.c
     4c4:	55 49 41 63 38 44 44 3c 04 40 7e 20 1e 20 06 02     UIAc8DD<.@~ . ..
     4d4:	7e 02 02 99 a5 e7 a5 99 1c 2a 49 2a 1c 4c 72 01     ~........*I*.Lr.
     4e4:	72 4c 30 4a 4d 4d 30 30 48 78 48 30 bc 62 5a 46     rL0JMM00HxH0.bZF
     4f4:	3d 3e 49 49 49 00 7e 01 01 01 7e 2a 2a 2a 2a 2a     =>III.~...~*****
     504:	44 44 5f 44 44 40 51 4a 44 40 40 44 4a 51 40 00     DD_DD@QJD@@DJQ@.
     514:	00 ff 01 03 e0 80 ff 00 00 08 08 6b 6b 08 36 12     ...........kk.6.
     524:	36 24 36 06 0f 09 0f 06 00 00 18 18 00 00 00 10     6$6.............
     534:	10 00 30 40 ff 01 01 00 1f 01 01 1e 00 19 1d 17     ..0@............
     544:	12 00 3c 3c 3c 3c 00 00 00 00 00                    ..<<<<.....

0000054f <image_titleScreen>:
     54f:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
     567:	ff 00 c0 00 00 00 00 00 00 00 00 00 00 00 00 ff     ................
     577:	00 c0 ff 00 c0 ff 00 c0 ff 00 c0 00 00 00 00 00     ................
     587:	00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0     ................
     597:	00 00 00 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff     ................
     5a7:	00 c0 ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00     ................
	...
     5bf:	00 00 ff 00 c0 ff 00 c0 ff 00 c0 00 00 00 00 00     ................
	...
     5df:	ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
     5ef:	00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 00 00     ................
     5ff:	00 00 00 00 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
	...
     61b:	00 00 00 ff 00 c0 ff 00 c0 00 00 00 ff 00 c0 00     ................
	...
     633:	00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff     ................
     643:	00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00     ................
     653:	c0 ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00     ................
     663:	ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
	...
     687:	ff 00 c0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     69f:	00 00 00 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
     6af:	00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 00 00     ................
     6bf:	00 ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00     ................
	...
     6e7:	ff 00 c0 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     6ff:	ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
     70f:	00 00 ff 00 c0 ff 00 c0 00 00 00 00 00 00 ff 00     ................
     71f:	c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     73f:	00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff 00     ................
     74f:	c0 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
     75f:	ff 00 c0 00 00 00 00 00 00 ff 00 c0 ff 00 c0 ff     ................
     76f:	00 c0 ff 00 c0 00 00 00 00 00 00 ff 00 c0 ff 00     ................
     77f:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     79b:	00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 00     .....*..*..*..*.
	...
     7b3:	84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84     ..*..*..*..*..*.
     7c3:	ff 2a 00 00 00 00 00 00 00 00 00 84 ff 2a 84 ff     .*...........*..
     7d3:	2a 84 ff 2a 00 00 00 00 00 00 84 ff 2a 84 ff 2a     *..*........*..*
     7e3:	00 00 00 00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 00     ........*..*..*.
	...
     7fb:	84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84     ..*..*..*..*..*.
     80b:	ff 2a 00 00 00 00 00 00 84 ff 2a 84 ff 2a 84 ff     .*........*..*..
     81b:	2a 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 00 00 00     *..*..*..*......
     82b:	00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 00     .....*..*..*....
     83b:	00 00 84 ff 2a 84 ff 2a 00 00 00 00 00 00 84 ff     ....*..*........
     84b:	2a 84 ff 2a 00 00 00 00 00 00 00 00 00 00 00 00     *..*............
     85b:	84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84     ..*..*..*.....*.
     86b:	ff 2a 00 00 00 00 00 00 84 ff 2a 84 ff 2a 84 ff     .*........*..*..
     87b:	2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00     *..*..*..*..*...
     88b:	00 00 00 84 ff 2a 00 00 00 84 ff 2a 00 00 00 00     .....*.....*....
     89b:	00 00 84 ff 2a 00 00 00 00 00 00 84 ff 2a 84 ff     ....*........*..
     8ab:	2a 00 00 00 00 00 00 00 00 00 00 00 00 84 ff 2a     *..............*
     8bb:	84 ff 2a 00 00 00 00 00 00 00 00 00 00 00 00 84     ..*.............
     8cb:	ff 2a 00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 00 00     .*.....*..*..*..
     8db:	00 00 00 00 00 00 00 84 ff 2a 84 ff 2a 00 00 00     .........*..*...
     8eb:	00 00 00 84 ff 2a 00 00 00 84 ff 2a 84 ff 2a 00     .....*.....*..*.
     8fb:	00 00 84 ff 2a 00 00 00 00 00 00 84 ff 2a 00 00     ....*........*..
	...
     917:	00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 00 00 00     ...*..*..*......
     927:	84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84 ff 2a 00     ..*..*.....*..*.
	...
     93f:	00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 84     .....*..*..*....
     94f:	ff 2a 00 00 00 84 ff 2a 84 ff 2a 00 00 00 84 ff     .*.....*..*.....
     95f:	2a 00 00 00 84 ff 2a 84 ff 2a 00 00 00 84 ff 2a     *.....*..*.....*
     96f:	84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84 ff 2a 84     ..*..*.....*..*.
     97f:	ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 00 00     .*..*..*..*..*..
     98f:	00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 00 00 00     ...*..*..*......
     99f:	00 00 00 84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84     .....*..*.....*.
     9af:	ff 2a 00 00 00 00 00 00 84 ff 2a 00 00 00 84 ff     .*........*.....
     9bf:	2a 00 00 00 84 ff 2a 00 00 00 00 00 00 00 00 00     *.....*.........
     9cf:	84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84 ff 2a 84     ..*..*.....*..*.
     9df:	ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 00 00     .*..*..*..*..*..
     9ef:	00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 00 00 00     ...*..*..*......
     9ff:	00 00 00 84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 00     .....*..*.....*.
	...
     a17:	84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 00     ..*..*..*.....*.
	...
     a2f:	84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84 ff 2a 84     ..*..*.....*..*.
     a3f:	ff 2a 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .*..............
     a4f:	00 00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a     ......*..*..*..*
     a5f:	84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 84 ff 2a 84     ..*..*..*.....*.
     a6f:	ff 2a 00 00 00 00 00 00 84 ff 2a 84 ff 2a 84 ff     .*........*..*..
     a7f:	2a 00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a     *.....*..*..*..*
     a8f:	84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 00     ..*..*..*..*..*.
	...
     ab3:	84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84     ..*..*..*..*..*.
     ac3:	ff 2a 00 00 00 00 00 00 00 00 00 84 ff 2a 00 00     .*...........*..
     ad3:	00 00 00 00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00     ......*..*..*...
     ae3:	84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84 ff 2a 84     ..*..*..*..*..*.
     af3:	ff 2a 84 ff 2a 84 ff 2a 00 00 00 00 00 00 00 00     .*..*..*........
	...
     b17:	00 00 84 ff 2a 84 ff 2a 84 ff 2a 00 00 00 00 00     ....*..*..*.....
	...

00000b56 <image_derek>:
     b56:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
     bc6:	00 00 78 00 ff 78 00 ff 00 00 00 00 00 00 00 00     ..x..x..........
     bd6:	00 78 00 ff 78 00 ff 78 00 ff 00 00 00 78 00 ff     .x..x..x.....x..
     be6:	78 00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff 78     x..x........x..x
     bf6:	00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
     c06:	00 00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00     ....x...........
	...
     c26:	00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 00 00     ..x.....x.......
     c36:	00 78 00 ff 00 00 00 00 00 00 00 00 00 78 00 ff     .x...........x..
     c46:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00     ...x........x...
	...
     c5e:	00 00 00 78 00 ff 00 00 00 78 00 ff 78 00 ff 00     ...x.....x..x...
	...
     c86:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
     c96:	00 78 00 ff 78 00 ff 78 00 ff 00 00 00 78 00 ff     .x..x..x.....x..
     ca6:	78 00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff 78     x..x........x..x
     cb6:	00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff 78 00     ..x........x..x.
     cc6:	ff 78 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     .x..............
	...
     ce6:	00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 00 00     ..x.....x.......
     cf6:	00 78 00 ff 00 00 00 00 00 00 00 00 00 78 00 ff     .x...........x..
     d06:	00 00 00 00 00 00 78 00 ff 00 00 00 78 00 ff 00     ......x.....x...
	...
     d1e:	00 00 00 78 00 ff 00 00 00 78 00 ff 78 00 ff 00     ...x.....x..x...
	...
     d46:	00 00 78 00 ff 78 00 ff 00 00 00 00 00 00 00 00     ..x..x..........
     d56:	00 78 00 ff 78 00 ff 78 00 ff 00 00 00 78 00 ff     .x..x..x.....x..
     d66:	00 00 00 00 00 00 78 00 ff 00 00 00 78 00 ff 78     ......x.....x..x
     d76:	00 ff 78 00 ff 78 00 ff 00 00 00 78 00 ff 00 00     ..x..x.....x....
     d86:	00 00 00 00 78 00 ff 78 00 ff 00 00 00 00 00 00     ....x..x........
	...
     e62:	00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00     ...x............
     e72:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 78 00     ..x........x..x.
     e82:	ff 78 00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff     .x..x........x..
	...
     e9a:	00 78 00 ff 00 00 00 78 00 ff 78 00 ff 78 00 ff     .x.....x..x..x..
     eaa:	78 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00     x...............
	...
     ec2:	00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00     ...x............
     ed2:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
     ee2:	00 00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff     ....x........x..
     ef2:	78 00 ff 00 00 00 00 00 00 78 00 ff 00 00 00 78     x........x.....x
     f02:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     f22:	00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00     ...x............
     f32:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
     f42:	00 00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff     ....x........x..
     f52:	00 00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 78     ...x.....x.....x
     f62:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
     f82:	00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00     ...x............
     f92:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 78 00     ..x........x..x.
     fa2:	ff 78 00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff     .x..x........x..
     fb2:	00 00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 78     ...x.....x.....x
     fc2:	00 ff 00 00 00 78 00 ff 78 00 ff 78 00 ff 00 00     .....x..x..x....
	...
     fe2:	00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00     ...x............
     ff2:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
    1002:	00 00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff     ....x........x..
    1012:	00 00 00 00 00 00 78 00 ff 78 00 ff 00 00 00 78     ......x..x.....x
    1022:	00 ff 00 00 00 00 00 00 00 00 00 78 00 ff 00 00     ...........x....
	...
    1042:	00 00 00 78 00 ff 78 00 ff 78 00 ff 78 00 ff 00     ...x..x..x..x...
    1052:	00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 00 00     ..x.....x.......
    1062:	00 00 00 00 00 00 00 78 00 ff 00 00 00 78 00 ff     .......x.....x..
    1072:	00 00 00 00 00 00 78 00 ff 78 00 ff 00 00 00 78     ......x..x.....x
    1082:	00 ff 78 00 ff 78 00 ff 78 00 ff 78 00 ff 00 00     ..x..x..x..x....
	...
    10ea:	00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00     ...x............
	...

0000115d <image_orson>:
    115d:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
    11c9:	78 00 ff 78 00 ff 78 00 ff 78 00 ff 00 00 00 78     x..x..x..x.....x
    11d9:	00 ff 78 00 ff 78 00 ff 00 00 00 00 00 00 78 00     ..x..x........x.
    11e9:	ff 78 00 ff 78 00 ff 00 00 00 78 00 ff 78 00 ff     .x..x.....x..x..
    11f9:	78 00 ff 78 00 ff 00 00 00 78 00 ff 00 00 00 00     x..x.....x......
    1209:	00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00 00     ..x.............
	...
    1229:	78 00 ff 00 00 00 00 00 00 78 00 ff 00 00 00 78     x........x.....x
    1239:	00 ff 00 00 00 78 00 ff 00 00 00 00 00 00 78 00     .....x........x.
    1249:	ff 00 00 00 00 00 00 00 00 00 78 00 ff 00 00 00     ..........x.....
    1259:	00 00 00 78 00 ff 00 00 00 78 00 ff 78 00 ff 00     ...x.....x..x...
    1269:	00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00 00     ..x.............
	...
    1289:	78 00 ff 00 00 00 00 00 00 78 00 ff 00 00 00 78     x........x.....x
    1299:	00 ff 78 00 ff 78 00 ff 00 00 00 00 00 00 78 00     ..x..x........x.
    12a9:	ff 78 00 ff 78 00 ff 00 00 00 78 00 ff 00 00 00     .x..x.....x.....
    12b9:	00 00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 78     ...x.....x.....x
    12c9:	00 ff 78 00 ff 00 00 00 00 00 00 00 00 00 00 00     ..x.............
	...
    12e9:	78 00 ff 78 00 ff 78 00 ff 78 00 ff 00 00 00 78     x..x..x..x.....x
    12f9:	00 ff 00 00 00 00 00 00 78 00 ff 00 00 00 00 00     ........x.......
    1309:	00 00 00 00 78 00 ff 00 00 00 78 00 ff 78 00 ff     ....x.....x..x..
    1319:	78 00 ff 78 00 ff 00 00 00 78 00 ff 00 00 00 00     x..x.....x......
    1329:	00 00 78 00 ff 00 00 00 00 00 00 00 00 00 00 00     ..x.............
	...
    1355:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00     ...x........x...
    1365:	00 00 78 00 ff 78 00 ff 78 00 ff 00 00 00 00 00     ..x..x..x.......
	...
    13b5:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00     ...x........x...
	...
    1469:	78 00 ff 78 00 ff 78 00 ff 00 00 00 78 00 ff 78     x..x..x.....x..x
    1479:	00 ff 78 00 ff 00 00 00 78 00 ff 78 00 ff 78 00     ..x.....x..x..x.
    1489:	ff 00 00 00 78 00 ff 78 00 ff 00 00 00 00 00 00     ....x..x........
    1499:	00 00 00 78 00 ff 78 00 ff 78 00 ff 00 00 00 78     ...x..x..x.....x
    14a9:	00 ff 78 00 ff 00 00 00 00 00 00 00 00 00 78 00     ..x...........x.
    14b9:	ff 78 00 ff 78 00 ff 00 00 00 00 00 00 00 00 00     .x..x...........
    14c9:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00     ...x........x...
	...
    14e1:	78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff 78     x.....x.....x..x
    14f1:	00 ff 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
    1501:	00 78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff     .x.....x.....x..
    1511:	00 00 00 00 00 00 78 00 ff 00 00 00 78 00 ff 00     ......x.....x...
	...
    1529:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00     ...x........x...
	...
    1541:	78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff 00     x.....x.....x...
    1551:	00 00 78 00 ff 78 00 ff 00 00 00 78 00 ff 00 00     ..x..x.....x....
    1561:	00 78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff     .x.....x.....x..
    1571:	78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff 00     x.....x.....x...
	...
    1589:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 78     ...x........x..x
    1599:	00 ff 00 00 00 00 00 00 78 00 ff 00 00 00 78 00     ........x.....x.
    15a9:	ff 00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff     ....x........x..
    15b9:	00 00 00 78 00 ff 00 00 00 78 00 ff 00 00 00 78     ...x.....x.....x
    15c9:	00 ff 78 00 ff 00 00 00 00 00 00 00 00 00 78 00     ..x...........x.
    15d9:	ff 00 00 00 78 00 ff 00 00 00 00 00 00 00 00 00     ....x...........
    15e9:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00     ...x........x...
	...
    1601:	78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff 00     x.....x.....x...
    1611:	00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 00 00     ..x........x....
    1621:	00 78 00 ff 00 00 00 78 00 ff 00 00 00 78 00 ff     .x.....x.....x..
    1631:	00 00 00 00 00 00 78 00 ff 00 00 00 78 00 ff 00     ......x.....x...
	...
    1649:	00 00 00 78 00 ff 00 00 00 00 00 00 78 00 ff 78     ...x........x..x
    1659:	00 ff 78 00 ff 00 00 00 78 00 ff 78 00 ff 78 00     ..x.....x..x..x.
    1669:	ff 00 00 00 78 00 ff 78 00 ff 00 00 00 00 00 00     ....x..x........
    1679:	00 00 00 78 00 ff 78 00 ff 78 00 ff 00 00 00 78     ...x..x..x.....x
    1689:	00 ff 00 00 00 00 00 00 78 00 ff 00 00 00 78 00     ........x.....x.
    1699:	ff 78 00 ff 78 00 ff 00 00 00 00 00 00 00 00 00     .x..x...........
	...

00001764 <image_credits>:
    1764:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
    194c:	00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff f0 00 ff     ................
    195c:	00 00 00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff 00     ................
    196c:	00 00 00 00 00 f0 00 ff f0 00 ff f0 00 ff 00 00     ................
    197c:	00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    198c:	f0 00 ff 00 00 00 f0 00 ff f0 00 ff f0 00 ff 00     ................
    199c:	00 00 f0 00 ff f0 00 ff f0 00 ff 00 00 00 00 00     ................
    19ac:	00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    19bc:	00 00 00 f0 00 ff 00 00 00 00 00 00 f0 00 ff 00     ................
    19cc:	00 00 00 00 00 f0 00 ff 00 00 00 00 00 00 00 00     ................
    19dc:	00 f0 00 ff f0 00 ff 00 00 00 00 00 00 00 00 00     ................
    19ec:	f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00 00     ................
    19fc:	00 00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    1a0c:	00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a1c:	00 00 00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff 00     ................
    1a2c:	00 00 00 00 00 f0 00 ff f0 00 ff f0 00 ff 00 00     ................
    1a3c:	00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00     ................
    1a4c:	f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00 f0     ................
    1a5c:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a6c:	00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1a7c:	00 00 00 f0 00 ff 00 00 00 00 00 00 f0 00 ff f0     ................
    1a8c:	00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00 00 00     ................
    1a9c:	00 f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00     ................
    1aac:	f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00 f0     ................
    1abc:	00 ff f0 00 ff f0 00 ff 00 00 00 00 00 00 00 00     ................
    1acc:	00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00 00     ................
    1adc:	00 00 00 f0 00 ff 00 00 00 00 00 00 00 00 00 f0     ................
    1aec:	00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00 00 00     ................
    1afc:	00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00     ................
    1b0c:	f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00 00     ................
	...
    1b24:	f0 00 ff 00 00 00 00 00 00 f0 00 ff f0 00 ff f0     ................
    1b34:	00 ff f0 00 ff f0 00 ff 00 00 00 f0 00 ff 00 00     ................
    1b44:	00 00 00 00 00 00 00 f0 00 ff 00 00 00 f0 00 ff     ................
    1b54:	f0 00 ff f0 00 ff 00 00 00 f0 00 ff f0 00 ff 00     ................
	...
    1b6c:	f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00 f0     ................
    1b7c:	00 ff f0 00 ff f0 00 ff f0 00 ff 00 00 00 00 00     ................
	...

00001d6b <image_winPlayer2>:
    1d6b:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
    1deb:	00 ff ea 00 ff ea 00 ff ea 00 00 00 00 00 00 00     ................
	...
    1e07:	ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 00     ................
	...
    1e47:	00 00 ff ea 00 00 00 00 53 53 00 ff ea 00 ff ea     ........SS......
    1e57:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    1e67:	ff ea 00 ff ea 00 53 53 00 00 00 00 ff ea 00 ff     ......SS........
    1e77:	ea 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1ea7:	00 00 ff ea 00 00 00 00 53 53 00 ff ea 00 ff ea     ........SS......
    1eb7:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    1ec7:	ff ea 00 ff ea 00 53 53 00 00 00 00 ff ea 00 ff     ......SS........
    1ed7:	ea 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1f07:	00 00 ff ea 00 00 00 00 53 53 00 53 53 00 ff ea     ........SS.SS...
    1f17:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    1f27:	ff ea 00 53 53 00 00 00 00 00 00 00 ff ea 00 ff     ...SS...........
    1f37:	ea 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    1f67:	00 00 ff ea 00 00 00 00 00 00 00 53 53 00 ff ea     ...........SS...
    1f77:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    1f87:	ff ea 00 ff ea 00 ff ea 00 00 00 00 ff ea 00 00     ................
	...
    1fc7:	00 00 ff ea 00 ff ea 00 00 00 00 ff ea 00 ff ea     ................
    1fd7:	00 53 53 00 ff ea 00 ff ea 00 ff ea 00 53 53 00     .SS..........SS.
    1fe7:	ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 00     ................
	...
    202b:	00 ff ea 00 ff ea 00 ff ea 00 53 53 00 53 53 00     ..........SS.SS.
    203b:	ff ea 00 ff ea 00 ff ea 00 53 53 00 53 53 00 00     .........SS.SS..
    204b:	00 00 ff ea 00 ff ea 00 00 00 00 00 00 00 00 00     ................
	...
    2093:	00 00 53 53 00 53 53 00 53 53 00 ff ea 00 53 53     ..SS.SS.SS....SS
    20a3:	00 53 53 00 53 53 00 00 00 00 00 00 00 00 00 00     .SS.SS..........
	...
    20f7:	00 53 53 00 53 53 00 ff ea 00 53 53 00 53 53 00     .SS.SS....SS.SS.
	...
    215b:	53 53 00 ff ea 00 53 53 00 00 00 00 00 00 00 00     SS....SS........
	...
    2197:	00 00 00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff 00     ................
	...
    21af:	00 00 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff     ................
    21bf:	ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 00 00     ................
	...
    2203:	f0 00 ff f0 00 ff 00 00 00 00 00 00 00 00 00 f0     ................
    2213:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2223:	00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 f0 00 ff     ................
    2233:	00 00 00 00 00 00 f0 00 ff 00 00 00 f0 00 ff f0     ................
    2243:	00 ff f0 00 ff f0 00 ff 00 00 00 00 00 00 00 00     ................
	...
    225b:	00 00 f0 00 ff f0 00 ff f0 00 ff 00 00 00 00 00     ................
    226b:	00 00 00 00 00 00 00 f0 00 ff 00 00 00 00 00 00     ................
	...
    2283:	00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 f0 00 ff     ................
    2293:	f0 00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00 00     ................
    22a3:	00 00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
    22b3:	00 00 00 00 00 00 00 f0 00 ff f0 00 ff 00 00 00     ................
	...
    22cf:	00 00 00 f0 00 ff f0 00 ff 00 00 00 f0 00 ff 00     ................
    22df:	00 00 f0 00 ff f0 00 ff 00 00 00 f0 00 ff 00 00     ................
    22ef:	00 f0 00 ff 00 00 00 f0 00 ff f0 00 ff 00 00 00     ................
    22ff:	00 00 00 f0 00 ff 00 00 00 00 00 00 00 00 00 00     ................
	...
    2317:	00 00 00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff f0     ................
    2327:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 f0 00     ................
    2337:	ff f0 00 ff 00 00 00 f0 00 ff f0 00 ff 00 00 00     ................
    2347:	00 00 00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 00     ................
    2357:	00 00 f0 00 ff 00 00 00 f0 00 ff f0 00 ff f0 00     ................
    2367:	ff f0 00 ff 00 00 00 00 00 00 00                    ...........

00002372 <image_winPlayer1>:
    2372:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
    23f2:	00 ff ea 00 ff ea 00 ff ea 00 00 00 00 00 00 00     ................
	...
    240e:	ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 00     ................
	...
    244e:	00 00 ff ea 00 00 00 00 53 53 00 ff ea 00 ff ea     ........SS......
    245e:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    246e:	ff ea 00 ff ea 00 53 53 00 00 00 00 ff ea 00 ff     ......SS........
    247e:	ea 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    24ae:	00 00 ff ea 00 00 00 00 53 53 00 ff ea 00 ff ea     ........SS......
    24be:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    24ce:	ff ea 00 ff ea 00 53 53 00 00 00 00 ff ea 00 ff     ......SS........
    24de:	ea 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    250e:	00 00 ff ea 00 00 00 00 53 53 00 53 53 00 ff ea     ........SS.SS...
    251e:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    252e:	ff ea 00 53 53 00 00 00 00 00 00 00 ff ea 00 ff     ...SS...........
    253e:	ea 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    256e:	00 00 ff ea 00 00 00 00 00 00 00 53 53 00 ff ea     ...........SS...
    257e:	00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00     ................
    258e:	ff ea 00 ff ea 00 ff ea 00 00 00 00 ff ea 00 00     ................
	...
    25ce:	00 00 ff ea 00 ff ea 00 00 00 00 ff ea 00 ff ea     ................
    25de:	00 53 53 00 ff ea 00 ff ea 00 ff ea 00 53 53 00     .SS..........SS.
    25ee:	ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 00     ................
	...
    2632:	00 ff ea 00 ff ea 00 ff ea 00 53 53 00 53 53 00     ..........SS.SS.
    2642:	ff ea 00 ff ea 00 ff ea 00 53 53 00 53 53 00 00     .........SS.SS..
    2652:	00 00 ff ea 00 ff ea 00 00 00 00 00 00 00 00 00     ................
	...
    269a:	00 00 53 53 00 53 53 00 53 53 00 ff ea 00 53 53     ..SS.SS.SS....SS
    26aa:	00 53 53 00 53 53 00 00 00 00 00 00 00 00 00 00     .SS.SS..........
	...
    26fe:	00 53 53 00 53 53 00 ff ea 00 53 53 00 53 53 00     .SS.SS....SS.SS.
	...
    2762:	53 53 00 ff ea 00 53 53 00 00 00 00 00 00 00 00     SS....SS........
	...
    27b6:	00 00 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 ff     ................
    27c6:	ea 00 ff ea 00 ff ea 00 ff ea 00 ff ea 00 00 00     ................
	...
    2806:	00 f0 00 ff f0 00 ff 00 00 00 00 00 00 00 00 00     ................
    2816:	00 00 00 f0 00 ff 00 00 00 00 00 00 00 00 00 00     ................
    2826:	00 00 00 00 00 f0 00 ff 00 00 00 f0 00 ff 00 00     ................
    2836:	00 f0 00 ff 00 00 00 00 00 00 f0 00 ff 00 00 00     ................
    2846:	f0 00 ff f0 00 ff f0 00 ff f0 00 ff 00 00 00 00     ................
	...
    2862:	00 00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 00 00     ................
    2872:	00 00 00 00 00 00 00 f0 00 ff 00 00 00 00 00 00     ................
	...
    288a:	00 f0 00 ff 00 00 00 f0 00 ff 00 00 00 f0 00 ff     ................
    289a:	f0 00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00 00     ................
    28aa:	00 00 f0 00 ff 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    28ca:	f0 00 ff 00 00 00 00 00 00 00 00 00 00 00 00 f0     ................
    28da:	00 ff f0 00 ff 00 00 00 f0 00 ff 00 00 00 f0 00     ................
    28ea:	ff f0 00 ff 00 00 00 f0 00 ff 00 00 00 f0 00 ff     ................
    28fa:	00 00 00 f0 00 ff f0 00 ff 00 00 00 00 00 00 f0     ................
    290a:	00 ff 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2922:	00 00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff f0 00     ................
    2932:	ff 00 00 00 00 00 00 00 00 00 f0 00 ff f0 00 ff     ................
    2942:	00 00 00 f0 00 ff f0 00 ff 00 00 00 00 00 00 f0     ................
    2952:	00 ff 00 00 00 f0 00 ff 00 00 00 00 00 00 f0 00     ................
    2962:	ff 00 00 00 f0 00 ff f0 00 ff f0 00 ff f0 00 ff     ................
    2972:	00 00 00 00 00 00 00                                .......

00002979 <image_insertCoin>:
    2979:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
    29e5:	ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 00 00 00 00     ................
    29f5:	00 00 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00     ................
    2a05:	c0 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
    2a15:	ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff     ................
    2a25:	00 c0 00 00 00 00 00 00 ff 00 c0 ff 00 c0 ff 00     ................
    2a35:	c0 ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00     ................
    2a45:	ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 00     ................
    2a55:	00 00 ff 00 c0 00 00 00 ff 00 c0 00 00 00 00 00     ................
    2a65:	00 00 00 00 00 00 00 ff 00 c0 00 00 00 00 00 00     ................
    2a75:	00 00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 ff     ................
    2a85:	00 c0 00 00 00 00 00 00 00 00 00 00 00 00 ff 00     ................
    2a95:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2aa5:	ff 00 c0 00 00 00 ff 00 c0 00 00 00 ff 00 c0 00     ................
    2ab5:	00 00 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00     ................
    2ac5:	c0 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
    2ad5:	00 00 00 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff     ................
    2ae5:	00 c0 00 00 00 00 00 00 00 00 00 00 00 00 ff 00     ................
    2af5:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2b05:	ff 00 c0 00 00 00 ff 00 c0 00 00 00 ff 00 c0 ff     ................
    2b15:	00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00 00     ................
    2b25:	00 ff 00 c0 00 00 00 ff 00 c0 00 00 00 00 00 00     ................
    2b35:	00 00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 ff     ................
    2b45:	00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 ff 00     ................
    2b55:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
    2b65:	ff 00 c0 00 00 00 ff 00 c0 00 00 00 00 00 00 ff     ................
    2b75:	00 c0 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00     ................
    2b85:	c0 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
    2b95:	ff 00 c0 00 00 00 ff 00 c0 00 00 00 00 00 00 00     ................
    2ba5:	00 00 ff 00 c0 00 00 00 00 00 00 00 00 00 ff 00     ................
    2bb5:	c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2c35:	00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 00 00     ................
    2c45:	00 00 00 00 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
    2c55:	ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
    2c65:	00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 00 00     ................
	...
    2c95:	00 00 ff 00 c0 00 00 00 00 00 00 ff 00 c0 ff 00     ................
    2ca5:	c0 00 00 00 00 00 00 ff 00 c0 00 00 00 00 00 00     ................
	...
    2cc9:	00 ff 00 c0 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2d01:	00 00 ff 00 c0 00 00 00 00 00 00 ff 00 c0 00 00     ................
	...
    2d21:	00 00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff     ................
    2d31:	00 c0 00 00 00 00 00 00 00 00 00 00 00 00 00 00     ................
	...
    2d5d:	00 00 00 ff 00 c0 ff 00 c0 00 00 00 00 00 00 ff     ................
    2d6d:	00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 00 00     ................
    2d7d:	00 00 00 00 00 00 00 ff 00 c0 00 00 00 ff 00 c0     ................
	...
    2dbd:	ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
	...
    2dd5:	00 00 00 ff 00 c0 00 00 00 00 00 00 00 00 00 ff     ................
    2de5:	00 c0 00 00 00 ff 00 c0 00 00 00 00 00 00 00 00     ................
	...
    2e19:	00 ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00     ................
	...
    2e35:	00 00 00 ff 00 c0 00 00 00 00 00 00 00 00 00 ff     ................
    2e45:	00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 00 00     ................
	...
    2e75:	00 00 ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00     ................
	...
    2e95:	00 00 00 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
    2ea5:	00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 00 00     ................
	...
    2ed5:	00 00 ff 00 c0 ff 00 c0 ff 00 c0 ff 00 c0 ff 00     ................
    2ee5:	c0 ff 00 c0 00 00 00 ff 00 c0 ff 00 c0 ff 00 c0     ................
    2ef5:	ff 00 c0 ff 00 c0 00 00 00 00 00 00 00 00 00 00     ................
    2f05:	00 00 00 00 00 ff 00 c0 00 00 00 00 00 00 00 00     ................
	...

00002f80 <image_peterAnteater>:
    2f80:	20 00 10 00 03 00 00 00 00 00 00 00 00 00 00 00      ...............
	...
    2fa0:	00 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 00     ...+..+..+..+...
	...
    2fd8:	00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00     .+..+..+..+..+..
	...
    2ff8:	00 00 2b 00 00 2b 00 00 2b 00 00 2b 53 53 00 53     ..+..+..+..+SS.S
    3008:	53 00 00 00 2b 00 00 00 00 00 00 00 00 00 00 00     S...+...........
	...
    3038:	00 2b 53 53 00 53 53 00 53 53 00 00 00 2b 00 00     .+SS.SS.SS...+..
	...
    3058:	00 00 2b 53 53 00 53 53 00 00 00 2b 00 00 2b 53     ..+SS.SS...+..+S
    3068:	53 00 00 00 2b 00 00 00 00 00 00 00 00 00 00 00     S...+...........
	...
    3098:	00 2b 53 53 00 53 53 00 53 53 00 00 00 2b 00 00     .+SS.SS.SS...+..
	...
    30b8:	00 00 2b 00 00 2b 00 00 2b 53 53 00 00 00 2b 53     ..+..+..+SS...+S
    30c8:	53 00 00 00 2b 00 00 00 00 00 2b 00 00 2b 00 00     S...+.....+..+..
    30d8:	2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b     +..+..+..+..+..+
    30e8:	00 00 2b 00 00 2b 00 00 00 00 00 00 00 00 00 00     ..+..+..........
    30f8:	00 2b 53 53 00 53 53 00 53 53 00 00 00 2b 00 00     .+SS.SS.SS...+..
	...
    3120:	2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b     +..+..+..+..+..+
    3130:	00 00 2b 53 53 00 00 00 2b 00 00 2b 00 00 2b 00     ..+SS...+..+..+.
    3140:	00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00     .+..+..+..+..+..
    3150:	2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 53 53 00     +..+..+..+..+SS.
    3160:	53 53 00 00 00 2b 00 00 00 00 00 00 00 00 00 00     SS...+..........
	...
    317c:	00 2b 00 00 2b 53 53 00 53 53 00 53 53 00 53 53     .+..+SS.SS.SS.SS
    318c:	00 53 53 00 00 00 2b 53 53 00 00 00 2b 00 00 2b     .SS...+SS...+..+
    319c:	00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00     ..+..+..+..+..+.
    31ac:	00 2b 00 00 2b 00 00 2b 00 00 2b 53 53 00 53 53     .+..+..+..+SS.SS
    31bc:	00 53 53 00 53 53 00 00 00 2b 00 00 00 00 00 00     .SS.SS...+......
	...
    31d8:	00 00 2b 00 00 2b 53 53 00 00 00 2b 00 00 2b 53     ..+..+SS...+..+S
    31e8:	53 00 53 53 00 53 53 00 53 53 00 53 53 00 00 00     S.SS.SS.SS.SS...
    31f8:	2b 00 00 00 00 00 2b 00 00 00 00 00 2b 00 00 00     +.....+.....+...
    3208:	00 00 00 00 00 2b 00 00 00 00 00 2b 53 53 00 53     .....+.....+SS.S
    3218:	53 00 53 53 00 53 53 00 53 53 00 00 00 2b 00 00     S.SS.SS.SS...+..
	...
    3238:	00 00 2b 53 53 00 00 00 2b 00 00 2b 53 53 00 53     ..+SS...+..+SS.S
    3248:	53 00 53 53 00 53 53 00 53 53 00 00 00 2b 00 00     S.SS.SS.SS...+..
    3258:	2b 00 00 00 00 00 2b 00 00 00 00 00 2b 00 00 00     +.....+.....+...
    3268:	00 00 2b 00 00 2b 00 00 00 00 00 2b 53 53 00 53     ..+..+.....+SS.S
    3278:	53 00 53 53 00 53 53 00 00 00 2b 00 00 2b 00 00     S.SS.SS...+..+..
	...
    3294:	2b 00 00 2b 00 00 2b 53 53 00 53 53 00 53 53 00     +..+..+SS.SS.SS.
    32a4:	53 53 00 53 53 00 53 53 00 00 00 2b 00 00 2b 00     SS.SS.SS...+..+.
    32b4:	00 2b 00 00 2b 00 00 00 00 00 2b 00 00 00 00 00     .+..+.....+.....
    32c4:	2b 00 00 00 00 00 2b 00 00 2b 00 00 00 00 00 2b     +.....+..+.....+
    32d4:	53 53 00 53 53 00 00 00 2b 00 00 2b 00 00 2b 00     SS.SS...+..+..+.
	...
    32ec:	00 00 2b 00 00 2b 00 00 2b 53 53 00 53 53 00 53     ..+..+..+SS.SS.S
    32fc:	53 00 53 53 00 00 00 2b 00 00 2b 00 00 2b 00 00     S.SS...+..+..+..
    330c:	2b 00 00 2b 00 00 2b 53 53 00 00 00 2b 00 00 00     +..+..+SS...+...
	...
    3324:	2b 00 00 00 00 00 00 00 00 2b 00 00 00 00 00 2b     +........+.....+
    3334:	53 53 00 53 53 00 53 53 00 00 00 2b 00 00 2b 00     SS.SS.SS...+..+.
	...
    334c:	00 00 2b 53 53 00 53 53 00 53 53 00 53 53 00 00     ..+SS.SS.SS.SS..
    335c:	00 2b 00 00 2b 00 00 2b 00 00 00 00 00 2b 53 53     .+..+..+.....+SS
    336c:	00 53 53 00 00 00 2b 53 53 00 00 00 2b 00 00 2b     .SS...+SS...+..+
    337c:	00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00     ..+..+..+..+..+.
    338c:	00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 53 53     .+..+..+..+..+SS
    339c:	00 53 53 00 00 00 2b 00 00 2b 00 00 00 00 00 2b     .SS...+..+.....+
    33ac:	00 00 2b 53 53 00 53 53 00 00 00 2b 00 00 2b 00     ..+SS.SS...+..+.
    33bc:	00 2b 00 00 00 00 00 00 00 00 2b 00 00 2b 53 53     .+........+..+SS
    33cc:	00 00 00 2b 00 00 2b 00 00 2b 53 53 00 53 53 00     ...+..+..+SS.SS.
    33dc:	00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00     ..+..+..+..+..+.
    33ec:	00 2b 00 00 2b 53 53 00 53 53 00 00 00 2b 53 53     .+..+SS.SS...+SS
    33fc:	00 53 53 00 53 53 00 00 00 2b 00 00 00 00 00 2b     .SS.SS...+.....+
    340c:	00 00 2b 00 00 2b 00 00 2b 00 00 00 00 00 00 00     ..+..+..+.......
	...
    3424:	00 00 2b 53 53 00 00 00 2b 00 00 2b 00 00 2b 53     ..+SS...+..+..+S
    3434:	53 00 53 53 00 53 53 00 00 00 2b 00 00 2b 00 00     S.SS.SS...+..+..
    3444:	2b 00 00 2b 00 00 2b 00 00 2b 53 53 00 53 53 00     +..+..+..+SS.SS.
    3454:	00 00 2b 00 00 2b 53 53 00 53 53 00 53 53 00 00     ..+..+SS.SS.SS..
    3464:	00 2b 00 00 00 00 00 00 00 00 00 00 00 00 00 00     .+..............
	...
    3480:	00 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 00     ...+..+..+..+...
    3490:	00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 00 00     ..+..+..+..+....
	...
    34a8:	00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00     ..+..+..+..+..+.
    34b8:	00 2b 53 53 00 53 53 00 53 53 00 00 00 2b 00 00     .+SS.SS.SS...+..
	...
    34e0:	00 00 00 2b 00 00 2b 00 00 2b 00 00 00 00 00 2b     ...+..+..+.....+
    34f0:	00 00 2b 00 00 2b 00 00 00 00 00 00 00 00 00 00     ..+..+..........
	...
    3510:	2b 53 53 00 53 53 00 53 53 00 53 53 00 53 53 00     +SS.SS.SS.SS.SS.
    3520:	53 53 00 00 00 2b 00 00 00 00 00 00 00 00 00 00     SS...+..........
	...
    3570:	2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b 00 00 2b     +..+..+..+..+..+
    3580:	00 00 2b 00 00 2b 00                                ..+..+.

00003587 <port_to_output_PGM>:
    3587:	00 00 3b 00 38 00 35 00 32 00                       ..;.8.5.2.

00003591 <port_to_mode_PGM>:
    3591:	00 00 3a 00 37 00 34 00 31 00                       ..:.7.4.1.

0000359b <digital_pin_to_bit_mask_PGM>:
    359b:	01 02 04 08 10 20 40 80 01 02 04 08 10 20 40 80     ..... @...... @.
    35ab:	01 02 04 08 10 20 40 80 80 40 20 10 08 04 02 01     ..... @..@ .....

000035bb <digital_pin_to_port_PGM>:
    35bb:	02 02 02 02 02 02 02 02 04 04 04 04 04 04 04 04     ................
    35cb:	03 03 03 03 03 03 03 03 01 01 01 01 01 01 01 01     ................
	...

000035dc <__ctors_end>:
    35dc:	11 24       	eor	r1, r1
    35de:	1f be       	out	0x3f, r1	; 63
    35e0:	cf e5       	ldi	r28, 0x5F	; 95
    35e2:	d8 e0       	ldi	r29, 0x08	; 8
    35e4:	de bf       	out	0x3e, r29	; 62
    35e6:	cd bf       	out	0x3d, r28	; 61

000035e8 <__do_copy_data>:
    35e8:	10 e0       	ldi	r17, 0x00	; 0
    35ea:	a0 e6       	ldi	r26, 0x60	; 96
    35ec:	b0 e0       	ldi	r27, 0x00	; 0
    35ee:	e6 e8       	ldi	r30, 0x86	; 134
    35f0:	f3 e6       	ldi	r31, 0x63	; 99
    35f2:	02 c0       	rjmp	.+4      	; 0x35f8 <__do_copy_data+0x10>
    35f4:	05 90       	lpm	r0, Z+
    35f6:	0d 92       	st	X+, r0
    35f8:	a6 37       	cpi	r26, 0x76	; 118
    35fa:	b1 07       	cpc	r27, r17
    35fc:	d9 f7       	brne	.-10     	; 0x35f4 <__do_copy_data+0xc>

000035fe <__do_clear_bss>:
    35fe:	22 e0       	ldi	r18, 0x02	; 2
    3600:	a6 e7       	ldi	r26, 0x76	; 118
    3602:	b0 e0       	ldi	r27, 0x00	; 0
    3604:	01 c0       	rjmp	.+2      	; 0x3608 <.do_clear_bss_start>

00003606 <.do_clear_bss_loop>:
    3606:	1d 92       	st	X+, r1

00003608 <.do_clear_bss_start>:
    3608:	a8 34       	cpi	r26, 0x48	; 72
    360a:	b2 07       	cpc	r27, r18
    360c:	e1 f7       	brne	.-8      	; 0x3606 <.do_clear_bss_loop>
    360e:	0e 94 14 23 	call	0x4628	; 0x4628 <main>
    3612:	0c 94 c1 31 	jmp	0x6382	; 0x6382 <_exit>

00003616 <__bad_interrupt>:
    3616:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000361a <Adafruit_GFX_drawLine>:
  agfx->_cursor_y = y;
}


void Adafruit_GFX_setTextSize(Adafruit_GFX *agfx, uint8_t s) {
  agfx->_textsize = (s > 0) ? s : 1;
    361a:	2f 92       	push	r2
    361c:	3f 92       	push	r3
    361e:	4f 92       	push	r4
    3620:	5f 92       	push	r5
    3622:	6f 92       	push	r6
    3624:	7f 92       	push	r7
    3626:	8f 92       	push	r8
    3628:	9f 92       	push	r9
    362a:	af 92       	push	r10
    362c:	bf 92       	push	r11
    362e:	cf 92       	push	r12
    3630:	df 92       	push	r13
    3632:	ef 92       	push	r14
    3634:	ff 92       	push	r15
    3636:	0f 93       	push	r16
    3638:	1f 93       	push	r17
    363a:	cf 93       	push	r28
    363c:	df 93       	push	r29
    363e:	00 d0       	rcall	.+0      	; 0x3640 <Adafruit_GFX_drawLine+0x26>
    3640:	00 d0       	rcall	.+0      	; 0x3642 <Adafruit_GFX_drawLine+0x28>
    3642:	cd b7       	in	r28, 0x3d	; 61
    3644:	de b7       	in	r29, 0x3e	; 62
    3646:	4c 01       	movw	r8, r24
    3648:	7c 83       	std	Y+4, r23	; 0x04
    364a:	6b 83       	std	Y+3, r22	; 0x03
    364c:	5a 01       	movw	r10, r20
    364e:	39 01       	movw	r6, r18
    3650:	c8 01       	movw	r24, r16
    3652:	a8 01       	movw	r20, r16
    3654:	4a 19       	sub	r20, r10
    3656:	5b 09       	sbc	r21, r11
    3658:	1a f4       	brpl	.+6      	; 0x3660 <Adafruit_GFX_drawLine+0x46>
    365a:	51 95       	neg	r21
    365c:	41 95       	neg	r20
    365e:	51 09       	sbc	r21, r1
    3660:	93 01       	movw	r18, r6
    3662:	6b 81       	ldd	r22, Y+3	; 0x03
    3664:	7c 81       	ldd	r23, Y+4	; 0x04
    3666:	26 1b       	sub	r18, r22
    3668:	37 0b       	sbc	r19, r23
    366a:	1a f4       	brpl	.+6      	; 0x3672 <Adafruit_GFX_drawLine+0x58>
    366c:	31 95       	neg	r19
    366e:	21 95       	neg	r18
    3670:	31 09       	sbc	r19, r1
    3672:	61 e0       	ldi	r22, 0x01	; 1
    3674:	70 e0       	ldi	r23, 0x00	; 0
    3676:	24 17       	cp	r18, r20
    3678:	35 07       	cpc	r19, r21
    367a:	14 f0       	brlt	.+4      	; 0x3680 <Adafruit_GFX_drawLine+0x66>
    367c:	60 e0       	ldi	r22, 0x00	; 0
    367e:	70 e0       	ldi	r23, 0x00	; 0
    3680:	2b 01       	movw	r4, r22
    3682:	61 15       	cp	r22, r1
    3684:	71 05       	cpc	r23, r1
    3686:	59 f0       	breq	.+22     	; 0x369e <Adafruit_GFX_drawLine+0x84>
    3688:	36 2d       	mov	r19, r6
    368a:	27 2d       	mov	r18, r7
    368c:	3c 01       	movw	r6, r24
    368e:	83 2f       	mov	r24, r19
    3690:	92 2f       	mov	r25, r18
    3692:	3b 81       	ldd	r19, Y+3	; 0x03
    3694:	2c 81       	ldd	r18, Y+4	; 0x04
    3696:	bc 82       	std	Y+4, r11	; 0x04
    3698:	ab 82       	std	Y+3, r10	; 0x03
    369a:	a3 2e       	mov	r10, r19
    369c:	b2 2e       	mov	r11, r18
    369e:	ab 81       	ldd	r26, Y+3	; 0x03
    36a0:	bc 81       	ldd	r27, Y+4	; 0x04
    36a2:	6a 16       	cp	r6, r26
    36a4:	7b 06       	cpc	r7, r27
    36a6:	5c f4       	brge	.+22     	; 0x36be <Adafruit_GFX_drawLine+0xa4>
    36a8:	3a 2d       	mov	r19, r10
    36aa:	2b 2d       	mov	r18, r11
    36ac:	5c 01       	movw	r10, r24
    36ae:	83 2f       	mov	r24, r19
    36b0:	92 2f       	mov	r25, r18
    36b2:	3b 81       	ldd	r19, Y+3	; 0x03
    36b4:	2c 81       	ldd	r18, Y+4	; 0x04
    36b6:	7c 82       	std	Y+4, r7	; 0x04
    36b8:	6b 82       	std	Y+3, r6	; 0x03
    36ba:	63 2e       	mov	r6, r19
    36bc:	72 2e       	mov	r7, r18
    36be:	83 01       	movw	r16, r6
    36c0:	eb 81       	ldd	r30, Y+3	; 0x03
    36c2:	fc 81       	ldd	r31, Y+4	; 0x04
    36c4:	0e 1b       	sub	r16, r30
    36c6:	1f 0b       	sbc	r17, r31
    36c8:	1c 01       	movw	r2, r24
    36ca:	2a 18       	sub	r2, r10
    36cc:	3b 08       	sbc	r3, r11
    36ce:	1a f4       	brpl	.+6      	; 0x36d6 <Adafruit_GFX_drawLine+0xbc>
    36d0:	31 94       	neg	r3
    36d2:	21 94       	neg	r2
    36d4:	31 08       	sbc	r3, r1
    36d6:	68 01       	movw	r12, r16
    36d8:	11 23       	and	r17, r17
    36da:	1c f4       	brge	.+6      	; 0x36e2 <Adafruit_GFX_drawLine+0xc8>
    36dc:	ff ef       	ldi	r31, 0xFF	; 255
    36de:	cf 1a       	sub	r12, r31
    36e0:	df 0a       	sbc	r13, r31
    36e2:	d5 94       	asr	r13
    36e4:	c7 94       	ror	r12
    36e6:	a8 16       	cp	r10, r24
    36e8:	b9 06       	cpc	r11, r25
    36ea:	2c f4       	brge	.+10     	; 0x36f6 <Adafruit_GFX_drawLine+0xdc>
    36ec:	21 e0       	ldi	r18, 0x01	; 1
    36ee:	30 e0       	ldi	r19, 0x00	; 0
    36f0:	3a 83       	std	Y+2, r19	; 0x02
    36f2:	29 83       	std	Y+1, r18	; 0x01
    36f4:	04 c0       	rjmp	.+8      	; 0x36fe <Adafruit_GFX_drawLine+0xe4>
    36f6:	6f ef       	ldi	r22, 0xFF	; 255
    36f8:	7f ef       	ldi	r23, 0xFF	; 255
    36fa:	7a 83       	std	Y+2, r23	; 0x02
    36fc:	69 83       	std	Y+1, r22	; 0x01
    36fe:	8b 81       	ldd	r24, Y+3	; 0x03
    3700:	9c 81       	ldd	r25, Y+4	; 0x04
    3702:	68 16       	cp	r6, r24
    3704:	79 06       	cpc	r7, r25
    3706:	64 f1       	brlt	.+88     	; 0x3760 <Adafruit_GFX_drawLine+0x146>
    3708:	41 14       	cp	r4, r1
    370a:	51 04       	cpc	r5, r1
    370c:	61 f0       	breq	.+24     	; 0x3726 <Adafruit_GFX_drawLine+0x10c>
    370e:	d4 01       	movw	r26, r8
    3710:	59 96       	adiw	r26, 0x19	; 25
    3712:	ed 91       	ld	r30, X+
    3714:	fc 91       	ld	r31, X
    3716:	5a 97       	sbiw	r26, 0x1a	; 26
    3718:	97 01       	movw	r18, r14
    371a:	4b 81       	ldd	r20, Y+3	; 0x03
    371c:	5c 81       	ldd	r21, Y+4	; 0x04
    371e:	b5 01       	movw	r22, r10
    3720:	c4 01       	movw	r24, r8
    3722:	09 95       	icall
    3724:	0b c0       	rjmp	.+22     	; 0x373c <Adafruit_GFX_drawLine+0x122>
    3726:	d4 01       	movw	r26, r8
    3728:	59 96       	adiw	r26, 0x19	; 25
    372a:	ed 91       	ld	r30, X+
    372c:	fc 91       	ld	r31, X
    372e:	5a 97       	sbiw	r26, 0x1a	; 26
    3730:	97 01       	movw	r18, r14
    3732:	a5 01       	movw	r20, r10
    3734:	6b 81       	ldd	r22, Y+3	; 0x03
    3736:	7c 81       	ldd	r23, Y+4	; 0x04
    3738:	c4 01       	movw	r24, r8
    373a:	09 95       	icall
    373c:	c2 18       	sub	r12, r2
    373e:	d3 08       	sbc	r13, r3
    3740:	32 f4       	brpl	.+12     	; 0x374e <Adafruit_GFX_drawLine+0x134>
    3742:	e9 81       	ldd	r30, Y+1	; 0x01
    3744:	fa 81       	ldd	r31, Y+2	; 0x02
    3746:	ae 0e       	add	r10, r30
    3748:	bf 1e       	adc	r11, r31
    374a:	c0 0e       	add	r12, r16
    374c:	d1 1e       	adc	r13, r17
    374e:	2b 81       	ldd	r18, Y+3	; 0x03
    3750:	3c 81       	ldd	r19, Y+4	; 0x04
    3752:	2f 5f       	subi	r18, 0xFF	; 255
    3754:	3f 4f       	sbci	r19, 0xFF	; 255
    3756:	3c 83       	std	Y+4, r19	; 0x04
    3758:	2b 83       	std	Y+3, r18	; 0x03
    375a:	62 16       	cp	r6, r18
    375c:	73 06       	cpc	r7, r19
    375e:	a4 f6       	brge	.-88     	; 0x3708 <Adafruit_GFX_drawLine+0xee>
    3760:	0f 90       	pop	r0
    3762:	0f 90       	pop	r0
    3764:	0f 90       	pop	r0
    3766:	0f 90       	pop	r0
    3768:	df 91       	pop	r29
    376a:	cf 91       	pop	r28
    376c:	1f 91       	pop	r17
    376e:	0f 91       	pop	r16
    3770:	ff 90       	pop	r15
    3772:	ef 90       	pop	r14
    3774:	df 90       	pop	r13
    3776:	cf 90       	pop	r12
    3778:	bf 90       	pop	r11
    377a:	af 90       	pop	r10
    377c:	9f 90       	pop	r9
    377e:	8f 90       	pop	r8
    3780:	7f 90       	pop	r7
    3782:	6f 90       	pop	r6
    3784:	5f 90       	pop	r5
    3786:	4f 90       	pop	r4
    3788:	3f 90       	pop	r3
    378a:	2f 90       	pop	r2
    378c:	08 95       	ret

0000378e <Adafruit_GFX_drawRect>:
    378e:	6f 92       	push	r6
    3790:	7f 92       	push	r7
    3792:	8f 92       	push	r8
    3794:	9f 92       	push	r9
    3796:	af 92       	push	r10
    3798:	bf 92       	push	r11
    379a:	cf 92       	push	r12
    379c:	df 92       	push	r13
    379e:	ef 92       	push	r14
    37a0:	ff 92       	push	r15
    37a2:	0f 93       	push	r16
    37a4:	1f 93       	push	r17
    37a6:	cf 93       	push	r28
    37a8:	df 93       	push	r29
    37aa:	ec 01       	movw	r28, r24
    37ac:	5b 01       	movw	r10, r22
    37ae:	6a 01       	movw	r12, r20
    37b0:	39 01       	movw	r6, r18
    37b2:	48 01       	movw	r8, r16
    37b4:	e9 a1       	ldd	r30, Y+33	; 0x21
    37b6:	fa a1       	ldd	r31, Y+34	; 0x22
    37b8:	87 01       	movw	r16, r14
    37ba:	09 95       	icall
    37bc:	a6 01       	movw	r20, r12
    37be:	48 0d       	add	r20, r8
    37c0:	59 1d       	adc	r21, r9
    37c2:	41 50       	subi	r20, 0x01	; 1
    37c4:	51 09       	sbc	r21, r1
    37c6:	e9 a1       	ldd	r30, Y+33	; 0x21
    37c8:	fa a1       	ldd	r31, Y+34	; 0x22
    37ca:	93 01       	movw	r18, r6
    37cc:	b5 01       	movw	r22, r10
    37ce:	ce 01       	movw	r24, r28
    37d0:	09 95       	icall
    37d2:	ef 8d       	ldd	r30, Y+31	; 0x1f
    37d4:	f8 a1       	ldd	r31, Y+32	; 0x20
    37d6:	94 01       	movw	r18, r8
    37d8:	a6 01       	movw	r20, r12
    37da:	b5 01       	movw	r22, r10
    37dc:	ce 01       	movw	r24, r28
    37de:	09 95       	icall
    37e0:	a6 0c       	add	r10, r6
    37e2:	b7 1c       	adc	r11, r7
    37e4:	b5 01       	movw	r22, r10
    37e6:	61 50       	subi	r22, 0x01	; 1
    37e8:	71 09       	sbc	r23, r1
    37ea:	ef 8d       	ldd	r30, Y+31	; 0x1f
    37ec:	f8 a1       	ldd	r31, Y+32	; 0x20
    37ee:	94 01       	movw	r18, r8
    37f0:	a6 01       	movw	r20, r12
    37f2:	ce 01       	movw	r24, r28
    37f4:	09 95       	icall
    37f6:	df 91       	pop	r29
    37f8:	cf 91       	pop	r28
    37fa:	1f 91       	pop	r17
    37fc:	0f 91       	pop	r16
    37fe:	ff 90       	pop	r15
    3800:	ef 90       	pop	r14
    3802:	df 90       	pop	r13
    3804:	cf 90       	pop	r12
    3806:	bf 90       	pop	r11
    3808:	af 90       	pop	r10
    380a:	9f 90       	pop	r9
    380c:	8f 90       	pop	r8
    380e:	7f 90       	pop	r7
    3810:	6f 90       	pop	r6
    3812:	08 95       	ret

00003814 <Adafruit_GFX_drawFastVLine>:
    3814:	ef 92       	push	r14
    3816:	ff 92       	push	r15
    3818:	0f 93       	push	r16
    381a:	1f 93       	push	r17
    381c:	24 0f       	add	r18, r20
    381e:	35 1f       	adc	r19, r21
    3820:	21 50       	subi	r18, 0x01	; 1
    3822:	31 09       	sbc	r19, r1
    3824:	dc 01       	movw	r26, r24
    3826:	5d 96       	adiw	r26, 0x1d	; 29
    3828:	ed 91       	ld	r30, X+
    382a:	fc 91       	ld	r31, X
    382c:	5e 97       	sbiw	r26, 0x1e	; 30
    382e:	78 01       	movw	r14, r16
    3830:	89 01       	movw	r16, r18
    3832:	9b 01       	movw	r18, r22
    3834:	09 95       	icall
    3836:	1f 91       	pop	r17
    3838:	0f 91       	pop	r16
    383a:	ff 90       	pop	r15
    383c:	ef 90       	pop	r14
    383e:	08 95       	ret

00003840 <Adafruit_GFX_drawFastHLine>:
    3840:	ef 92       	push	r14
    3842:	ff 92       	push	r15
    3844:	0f 93       	push	r16
    3846:	1f 93       	push	r17
    3848:	26 0f       	add	r18, r22
    384a:	37 1f       	adc	r19, r23
    384c:	21 50       	subi	r18, 0x01	; 1
    384e:	31 09       	sbc	r19, r1
    3850:	dc 01       	movw	r26, r24
    3852:	5d 96       	adiw	r26, 0x1d	; 29
    3854:	ed 91       	ld	r30, X+
    3856:	fc 91       	ld	r31, X
    3858:	5e 97       	sbiw	r26, 0x1e	; 30
    385a:	78 01       	movw	r14, r16
    385c:	8a 01       	movw	r16, r20
    385e:	09 95       	icall
    3860:	1f 91       	pop	r17
    3862:	0f 91       	pop	r16
    3864:	ff 90       	pop	r15
    3866:	ef 90       	pop	r14
    3868:	08 95       	ret

0000386a <Adafruit_GFX_fillRect>:
    386a:	6f 92       	push	r6
    386c:	7f 92       	push	r7
    386e:	8f 92       	push	r8
    3870:	9f 92       	push	r9
    3872:	af 92       	push	r10
    3874:	bf 92       	push	r11
    3876:	cf 92       	push	r12
    3878:	df 92       	push	r13
    387a:	ef 92       	push	r14
    387c:	ff 92       	push	r15
    387e:	0f 93       	push	r16
    3880:	1f 93       	push	r17
    3882:	cf 93       	push	r28
    3884:	df 93       	push	r29
    3886:	6c 01       	movw	r12, r24
    3888:	4a 01       	movw	r8, r20
    388a:	38 01       	movw	r6, r16
    388c:	5b 01       	movw	r10, r22
    388e:	a2 0e       	add	r10, r18
    3890:	b3 1e       	adc	r11, r19
    3892:	6a 15       	cp	r22, r10
    3894:	7b 05       	cpc	r23, r11
    3896:	84 f4       	brge	.+32     	; 0x38b8 <Adafruit_GFX_fillRect+0x4e>
    3898:	eb 01       	movw	r28, r22
    389a:	d6 01       	movw	r26, r12
    389c:	5f 96       	adiw	r26, 0x1f	; 31
    389e:	ed 91       	ld	r30, X+
    38a0:	fc 91       	ld	r31, X
    38a2:	90 97       	sbiw	r26, 0x20	; 32
    38a4:	87 01       	movw	r16, r14
    38a6:	93 01       	movw	r18, r6
    38a8:	a4 01       	movw	r20, r8
    38aa:	be 01       	movw	r22, r28
    38ac:	c6 01       	movw	r24, r12
    38ae:	09 95       	icall
    38b0:	21 96       	adiw	r28, 0x01	; 1
    38b2:	ca 15       	cp	r28, r10
    38b4:	db 05       	cpc	r29, r11
    38b6:	8c f3       	brlt	.-30     	; 0x389a <Adafruit_GFX_fillRect+0x30>
    38b8:	df 91       	pop	r29
    38ba:	cf 91       	pop	r28
    38bc:	1f 91       	pop	r17
    38be:	0f 91       	pop	r16
    38c0:	ff 90       	pop	r15
    38c2:	ef 90       	pop	r14
    38c4:	df 90       	pop	r13
    38c6:	cf 90       	pop	r12
    38c8:	bf 90       	pop	r11
    38ca:	af 90       	pop	r10
    38cc:	9f 90       	pop	r9
    38ce:	8f 90       	pop	r8
    38d0:	7f 90       	pop	r7
    38d2:	6f 90       	pop	r6
    38d4:	08 95       	ret

000038d6 <Adafruit_GFX_fillScreen>:
    38d6:	ef 92       	push	r14
    38d8:	ff 92       	push	r15
    38da:	0f 93       	push	r16
    38dc:	1f 93       	push	r17
    38de:	dc 01       	movw	r26, r24
    38e0:	1c 96       	adiw	r26, 0x0c	; 12
    38e2:	0d 91       	ld	r16, X+
    38e4:	1c 91       	ld	r17, X
    38e6:	1d 97       	sbiw	r26, 0x0d	; 13
    38e8:	1a 96       	adiw	r26, 0x0a	; 10
    38ea:	2d 91       	ld	r18, X+
    38ec:	3c 91       	ld	r19, X
    38ee:	1b 97       	sbiw	r26, 0x0b	; 11
    38f0:	95 96       	adiw	r26, 0x25	; 37
    38f2:	ed 91       	ld	r30, X+
    38f4:	fc 91       	ld	r31, X
    38f6:	96 97       	sbiw	r26, 0x26	; 38
    38f8:	7b 01       	movw	r14, r22
    38fa:	40 e0       	ldi	r20, 0x00	; 0
    38fc:	50 e0       	ldi	r21, 0x00	; 0
    38fe:	60 e0       	ldi	r22, 0x00	; 0
    3900:	70 e0       	ldi	r23, 0x00	; 0
    3902:	09 95       	icall
    3904:	1f 91       	pop	r17
    3906:	0f 91       	pop	r16
    3908:	ff 90       	pop	r15
    390a:	ef 90       	pop	r14
    390c:	08 95       	ret

0000390e <Adafruit_GFX_constructor>:
    390e:	ef 92       	push	r14
    3910:	ff 92       	push	r15
    3912:	0f 93       	push	r16
    3914:	1f 93       	push	r17
    3916:	cf 93       	push	r28
    3918:	df 93       	push	r29
    391a:	ec 01       	movw	r28, r24
    391c:	7b 01       	movw	r14, r22
    391e:	8a 01       	movw	r16, r20
    3920:	cb d1       	rcall	.+918    	; 0x3cb8 <Print_constructor>
    3922:	ff 82       	std	Y+7, r15	; 0x07
    3924:	ee 82       	std	Y+6, r14	; 0x06
    3926:	fb 86       	std	Y+11, r15	; 0x0b
    3928:	ea 86       	std	Y+10, r14	; 0x0a
    392a:	19 87       	std	Y+9, r17	; 0x09
    392c:	08 87       	std	Y+8, r16	; 0x08
    392e:	1d 87       	std	Y+13, r17	; 0x0d
    3930:	0c 87       	std	Y+12, r16	; 0x0c
    3932:	1f 8a       	std	Y+23, r1	; 0x17
    3934:	1f 86       	std	Y+15, r1	; 0x0f
    3936:	1e 86       	std	Y+14, r1	; 0x0e
    3938:	19 8a       	std	Y+17, r1	; 0x11
    393a:	18 8a       	std	Y+16, r1	; 0x10
    393c:	21 e0       	ldi	r18, 0x01	; 1
    393e:	2e 8b       	std	Y+22, r18	; 0x16
    3940:	8f ef       	ldi	r24, 0xFF	; 255
    3942:	9f ef       	ldi	r25, 0xFF	; 255
    3944:	9d 8b       	std	Y+21, r25	; 0x15
    3946:	8c 8b       	std	Y+20, r24	; 0x14
    3948:	9b 8b       	std	Y+19, r25	; 0x13
    394a:	8a 8b       	std	Y+18, r24	; 0x12
    394c:	28 8f       	std	Y+24, r18	; 0x18
    394e:	1a 8e       	std	Y+26, r1	; 0x1a
    3950:	19 8e       	std	Y+25, r1	; 0x19
    3952:	1c 8e       	std	Y+28, r1	; 0x1c
    3954:	1b 8e       	std	Y+27, r1	; 0x1b
    3956:	8d e0       	ldi	r24, 0x0D	; 13
    3958:	9b e1       	ldi	r25, 0x1B	; 27
    395a:	9e 8f       	std	Y+30, r25	; 0x1e
    395c:	8d 8f       	std	Y+29, r24	; 0x1d
    395e:	8a e0       	ldi	r24, 0x0A	; 10
    3960:	9c e1       	ldi	r25, 0x1C	; 28
    3962:	98 a3       	std	Y+32, r25	; 0x20
    3964:	8f 8f       	std	Y+31, r24	; 0x1f
    3966:	80 e2       	ldi	r24, 0x20	; 32
    3968:	9c e1       	ldi	r25, 0x1C	; 28
    396a:	9a a3       	std	Y+34, r25	; 0x22
    396c:	89 a3       	std	Y+33, r24	; 0x21
    396e:	87 ec       	ldi	r24, 0xC7	; 199
    3970:	9b e1       	ldi	r25, 0x1B	; 27
    3972:	9c a3       	std	Y+36, r25	; 0x24
    3974:	8b a3       	std	Y+35, r24	; 0x23
    3976:	85 e3       	ldi	r24, 0x35	; 53
    3978:	9c e1       	ldi	r25, 0x1C	; 28
    397a:	9e a3       	std	Y+38, r25	; 0x26
    397c:	8d a3       	std	Y+37, r24	; 0x25
    397e:	8b e6       	ldi	r24, 0x6B	; 107
    3980:	9c e1       	ldi	r25, 0x1C	; 28
    3982:	98 a7       	std	Y+40, r25	; 0x28
    3984:	8f a3       	std	Y+39, r24	; 0x27
    3986:	8a ec       	ldi	r24, 0xCA	; 202
    3988:	9d e1       	ldi	r25, 0x1D	; 29
    398a:	9a a7       	std	Y+42, r25	; 0x2a
    398c:	89 a7       	std	Y+41, r24	; 0x29
    398e:	df 91       	pop	r29
    3990:	cf 91       	pop	r28
    3992:	1f 91       	pop	r17
    3994:	0f 91       	pop	r16
    3996:	ff 90       	pop	r15
    3998:	ef 90       	pop	r14
    399a:	08 95       	ret

0000399c <Adafruit_GFX_drawChar>:
    399c:	2f 92       	push	r2
    399e:	3f 92       	push	r3
    39a0:	4f 92       	push	r4
    39a2:	5f 92       	push	r5
    39a4:	6f 92       	push	r6
    39a6:	7f 92       	push	r7
    39a8:	8f 92       	push	r8
    39aa:	9f 92       	push	r9
    39ac:	af 92       	push	r10
    39ae:	bf 92       	push	r11
    39b0:	cf 92       	push	r12
    39b2:	df 92       	push	r13
    39b4:	ef 92       	push	r14
    39b6:	ff 92       	push	r15
    39b8:	0f 93       	push	r16
    39ba:	1f 93       	push	r17
    39bc:	cf 93       	push	r28
    39be:	df 93       	push	r29
    39c0:	cd b7       	in	r28, 0x3d	; 61
    39c2:	de b7       	in	r29, 0x3e	; 62
    39c4:	60 97       	sbiw	r28, 0x10	; 16
    39c6:	0f b6       	in	r0, 0x3f	; 63
    39c8:	f8 94       	cli
    39ca:	de bf       	out	0x3e, r29	; 62
    39cc:	0f be       	out	0x3f, r0	; 63
    39ce:	cd bf       	out	0x3d, r28	; 61
    39d0:	4c 01       	movw	r8, r24
    39d2:	1a 83       	std	Y+2, r17	; 0x02
    39d4:	09 83       	std	Y+1, r16	; 0x01
    39d6:	fd 82       	std	Y+5, r15	; 0x05
    39d8:	ec 82       	std	Y+4, r14	; 0x04
    39da:	cb 82       	std	Y+3, r12	; 0x03
    39dc:	dc 01       	movw	r26, r24
    39de:	1a 96       	adiw	r26, 0x0a	; 10
    39e0:	8d 91       	ld	r24, X+
    39e2:	9c 91       	ld	r25, X
    39e4:	1b 97       	sbiw	r26, 0x0b	; 11
    39e6:	68 17       	cp	r22, r24
    39e8:	79 07       	cpc	r23, r25
    39ea:	0c f0       	brlt	.+2      	; 0x39ee <Adafruit_GFX_drawChar+0x52>
    39ec:	ba c0       	rjmp	.+372    	; 0x3b62 <Adafruit_GFX_drawChar+0x1c6>
    39ee:	1c 96       	adiw	r26, 0x0c	; 12
    39f0:	8d 91       	ld	r24, X+
    39f2:	9c 91       	ld	r25, X
    39f4:	1d 97       	sbiw	r26, 0x0d	; 13
    39f6:	48 17       	cp	r20, r24
    39f8:	59 07       	cpc	r21, r25
    39fa:	0c f0       	brlt	.+2      	; 0x39fe <Adafruit_GFX_drawChar+0x62>
    39fc:	b2 c0       	rjmp	.+356    	; 0x3b62 <Adafruit_GFX_drawChar+0x1c6>
    39fe:	6c 2c       	mov	r6, r12
    3a00:	71 2c       	mov	r7, r1
    3a02:	c3 01       	movw	r24, r6
    3a04:	88 0f       	add	r24, r24
    3a06:	99 1f       	adc	r25, r25
    3a08:	88 0f       	add	r24, r24
    3a0a:	99 1f       	adc	r25, r25
    3a0c:	86 0d       	add	r24, r6
    3a0e:	97 1d       	adc	r25, r7
    3a10:	86 0f       	add	r24, r22
    3a12:	97 1f       	adc	r25, r23
    3a14:	01 97       	sbiw	r24, 0x01	; 1
    3a16:	0a f4       	brpl	.+2      	; 0x3a1a <Adafruit_GFX_drawChar+0x7e>
    3a18:	a4 c0       	rjmp	.+328    	; 0x3b62 <Adafruit_GFX_drawChar+0x1c6>
    3a1a:	c3 01       	movw	r24, r6
    3a1c:	88 0f       	add	r24, r24
    3a1e:	99 1f       	adc	r25, r25
    3a20:	88 0f       	add	r24, r24
    3a22:	99 1f       	adc	r25, r25
    3a24:	88 0f       	add	r24, r24
    3a26:	99 1f       	adc	r25, r25
    3a28:	84 0f       	add	r24, r20
    3a2a:	95 1f       	adc	r25, r21
    3a2c:	01 97       	sbiw	r24, 0x01	; 1
    3a2e:	0a f4       	brpl	.+2      	; 0x3a32 <Adafruit_GFX_drawChar+0x96>
    3a30:	98 c0       	rjmp	.+304    	; 0x3b62 <Adafruit_GFX_drawChar+0x1c6>
    3a32:	30 e0       	ldi	r19, 0x00	; 0
    3a34:	c9 01       	movw	r24, r18
    3a36:	88 0f       	add	r24, r24
    3a38:	99 1f       	adc	r25, r25
    3a3a:	88 0f       	add	r24, r24
    3a3c:	99 1f       	adc	r25, r25
    3a3e:	28 0f       	add	r18, r24
    3a40:	39 1f       	adc	r19, r25
    3a42:	13 01       	movw	r2, r6
    3a44:	7f 83       	std	Y+7, r23	; 0x07
    3a46:	6e 83       	std	Y+6, r22	; 0x06
    3a48:	79 87       	std	Y+9, r23	; 0x09
    3a4a:	68 87       	std	Y+8, r22	; 0x08
    3a4c:	1a 86       	std	Y+10, r1	; 0x0a
    3a4e:	26 1b       	sub	r18, r22
    3a50:	37 0b       	sbc	r19, r23
    3a52:	f9 01       	movw	r30, r18
    3a54:	ec 5a       	subi	r30, 0xAC	; 172
    3a56:	ff 4f       	sbci	r31, 0xFF	; 255
    3a58:	fe 87       	std	Y+14, r31	; 0x0e
    3a5a:	ed 87       	std	Y+13, r30	; 0x0d
    3a5c:	4b 87       	std	Y+11, r20	; 0x0b
    3a5e:	5c 87       	std	Y+12, r21	; 0x0c
    3a60:	fa 85       	ldd	r31, Y+10	; 0x0a
    3a62:	f5 30       	cpi	r31, 0x05	; 5
    3a64:	09 f4       	brne	.+2      	; 0x3a68 <Adafruit_GFX_drawChar+0xcc>
    3a66:	6f c0       	rjmp	.+222    	; 0x3b46 <Adafruit_GFX_drawChar+0x1aa>
    3a68:	ed 85       	ldd	r30, Y+13	; 0x0d
    3a6a:	fe 85       	ldd	r31, Y+14	; 0x0e
    3a6c:	2e 81       	ldd	r18, Y+6	; 0x06
    3a6e:	3f 81       	ldd	r19, Y+7	; 0x07
    3a70:	e2 0f       	add	r30, r18
    3a72:	f3 1f       	adc	r31, r19
    3a74:	54 90       	lpm	r5, Z
    3a76:	68 c0       	rjmp	.+208    	; 0x3b48 <Adafruit_GFX_drawChar+0x1ac>
    3a78:	50 fe       	sbrs	r5, 0
    3a7a:	21 c0       	rjmp	.+66     	; 0x3abe <Adafruit_GFX_drawChar+0x122>
    3a7c:	3b 81       	ldd	r19, Y+3	; 0x03
    3a7e:	31 30       	cpi	r19, 0x01	; 1
    3a80:	71 f4       	brne	.+28     	; 0x3a9e <Adafruit_GFX_drawChar+0x102>
    3a82:	af 85       	ldd	r26, Y+15	; 0x0f
    3a84:	b8 89       	ldd	r27, Y+16	; 0x10
    3a86:	59 96       	adiw	r26, 0x19	; 25
    3a88:	ed 91       	ld	r30, X+
    3a8a:	fc 91       	ld	r31, X
    3a8c:	5a 97       	sbiw	r26, 0x1a	; 26
    3a8e:	29 81       	ldd	r18, Y+1	; 0x01
    3a90:	3a 81       	ldd	r19, Y+2	; 0x02
    3a92:	a5 01       	movw	r20, r10
    3a94:	6e 81       	ldd	r22, Y+6	; 0x06
    3a96:	7f 81       	ldd	r23, Y+7	; 0x07
    3a98:	cd 01       	movw	r24, r26
    3a9a:	09 95       	icall
    3a9c:	37 c0       	rjmp	.+110    	; 0x3b0c <Adafruit_GFX_drawChar+0x170>
    3a9e:	af 85       	ldd	r26, Y+15	; 0x0f
    3aa0:	b8 89       	ldd	r27, Y+16	; 0x10
    3aa2:	95 96       	adiw	r26, 0x25	; 37
    3aa4:	ed 91       	ld	r30, X+
    3aa6:	fc 91       	ld	r31, X
    3aa8:	96 97       	sbiw	r26, 0x26	; 38
    3aaa:	e9 80       	ldd	r14, Y+1	; 0x01
    3aac:	fa 80       	ldd	r15, Y+2	; 0x02
    3aae:	83 01       	movw	r16, r6
    3ab0:	93 01       	movw	r18, r6
    3ab2:	a6 01       	movw	r20, r12
    3ab4:	68 2d       	mov	r22, r8
    3ab6:	74 2d       	mov	r23, r4
    3ab8:	cd 01       	movw	r24, r26
    3aba:	09 95       	icall
    3abc:	27 c0       	rjmp	.+78     	; 0x3b0c <Adafruit_GFX_drawChar+0x170>
    3abe:	ec 81       	ldd	r30, Y+4	; 0x04
    3ac0:	fd 81       	ldd	r31, Y+5	; 0x05
    3ac2:	29 81       	ldd	r18, Y+1	; 0x01
    3ac4:	3a 81       	ldd	r19, Y+2	; 0x02
    3ac6:	e2 17       	cp	r30, r18
    3ac8:	f3 07       	cpc	r31, r19
    3aca:	01 f1       	breq	.+64     	; 0x3b0c <Adafruit_GFX_drawChar+0x170>
    3acc:	3b 81       	ldd	r19, Y+3	; 0x03
    3ace:	31 30       	cpi	r19, 0x01	; 1
    3ad0:	71 f4       	brne	.+28     	; 0x3aee <Adafruit_GFX_drawChar+0x152>
    3ad2:	af 85       	ldd	r26, Y+15	; 0x0f
    3ad4:	b8 89       	ldd	r27, Y+16	; 0x10
    3ad6:	59 96       	adiw	r26, 0x19	; 25
    3ad8:	ed 91       	ld	r30, X+
    3ada:	fc 91       	ld	r31, X
    3adc:	5a 97       	sbiw	r26, 0x1a	; 26
    3ade:	2c 81       	ldd	r18, Y+4	; 0x04
    3ae0:	3d 81       	ldd	r19, Y+5	; 0x05
    3ae2:	a5 01       	movw	r20, r10
    3ae4:	6e 81       	ldd	r22, Y+6	; 0x06
    3ae6:	7f 81       	ldd	r23, Y+7	; 0x07
    3ae8:	cd 01       	movw	r24, r26
    3aea:	09 95       	icall
    3aec:	0f c0       	rjmp	.+30     	; 0x3b0c <Adafruit_GFX_drawChar+0x170>
    3aee:	af 85       	ldd	r26, Y+15	; 0x0f
    3af0:	b8 89       	ldd	r27, Y+16	; 0x10
    3af2:	95 96       	adiw	r26, 0x25	; 37
    3af4:	ed 91       	ld	r30, X+
    3af6:	fc 91       	ld	r31, X
    3af8:	96 97       	sbiw	r26, 0x26	; 38
    3afa:	ec 80       	ldd	r14, Y+4	; 0x04
    3afc:	fd 80       	ldd	r15, Y+5	; 0x05
    3afe:	83 01       	movw	r16, r6
    3b00:	93 01       	movw	r18, r6
    3b02:	a6 01       	movw	r20, r12
    3b04:	68 2d       	mov	r22, r8
    3b06:	74 2d       	mov	r23, r4
    3b08:	cd 01       	movw	r24, r26
    3b0a:	09 95       	icall
    3b0c:	56 94       	lsr	r5
    3b0e:	9a 94       	dec	r9
    3b10:	c2 0c       	add	r12, r2
    3b12:	d3 1c       	adc	r13, r3
    3b14:	bf ef       	ldi	r27, 0xFF	; 255
    3b16:	ab 1a       	sub	r10, r27
    3b18:	bb 0a       	sbc	r11, r27
    3b1a:	91 10       	cpse	r9, r1
    3b1c:	ad cf       	rjmp	.-166    	; 0x3a78 <Adafruit_GFX_drawChar+0xdc>
    3b1e:	8f 84       	ldd	r8, Y+15	; 0x0f
    3b20:	98 88       	ldd	r9, Y+16	; 0x10
    3b22:	ea 85       	ldd	r30, Y+10	; 0x0a
    3b24:	ef 5f       	subi	r30, 0xFF	; 255
    3b26:	ea 87       	std	Y+10, r30	; 0x0a
    3b28:	28 85       	ldd	r18, Y+8	; 0x08
    3b2a:	39 85       	ldd	r19, Y+9	; 0x09
    3b2c:	22 0d       	add	r18, r2
    3b2e:	33 1d       	adc	r19, r3
    3b30:	39 87       	std	Y+9, r19	; 0x09
    3b32:	28 87       	std	Y+8, r18	; 0x08
    3b34:	8e 81       	ldd	r24, Y+6	; 0x06
    3b36:	9f 81       	ldd	r25, Y+7	; 0x07
    3b38:	01 96       	adiw	r24, 0x01	; 1
    3b3a:	9f 83       	std	Y+7, r25	; 0x07
    3b3c:	8e 83       	std	Y+6, r24	; 0x06
    3b3e:	e6 30       	cpi	r30, 0x06	; 6
    3b40:	09 f0       	breq	.+2      	; 0x3b44 <Adafruit_GFX_drawChar+0x1a8>
    3b42:	8e cf       	rjmp	.-228    	; 0x3a60 <Adafruit_GFX_drawChar+0xc4>
    3b44:	0e c0       	rjmp	.+28     	; 0x3b62 <Adafruit_GFX_drawChar+0x1c6>
    3b46:	51 2c       	mov	r5, r1
    3b48:	18 85       	ldd	r17, Y+8	; 0x08
    3b4a:	49 84       	ldd	r4, Y+9	; 0x09
    3b4c:	cb 84       	ldd	r12, Y+11	; 0x0b
    3b4e:	dc 84       	ldd	r13, Y+12	; 0x0c
    3b50:	ac 2c       	mov	r10, r12
    3b52:	bd 2c       	mov	r11, r13
    3b54:	08 e0       	ldi	r16, 0x08	; 8
    3b56:	c4 01       	movw	r24, r8
    3b58:	90 2e       	mov	r9, r16
    3b5a:	81 2e       	mov	r8, r17
    3b5c:	98 8b       	std	Y+16, r25	; 0x10
    3b5e:	8f 87       	std	Y+15, r24	; 0x0f
    3b60:	8b cf       	rjmp	.-234    	; 0x3a78 <Adafruit_GFX_drawChar+0xdc>
    3b62:	60 96       	adiw	r28, 0x10	; 16
    3b64:	0f b6       	in	r0, 0x3f	; 63
    3b66:	f8 94       	cli
    3b68:	de bf       	out	0x3e, r29	; 62
    3b6a:	0f be       	out	0x3f, r0	; 63
    3b6c:	cd bf       	out	0x3d, r28	; 61
    3b6e:	df 91       	pop	r29
    3b70:	cf 91       	pop	r28
    3b72:	1f 91       	pop	r17
    3b74:	0f 91       	pop	r16
    3b76:	ff 90       	pop	r15
    3b78:	ef 90       	pop	r14
    3b7a:	df 90       	pop	r13
    3b7c:	cf 90       	pop	r12
    3b7e:	bf 90       	pop	r11
    3b80:	af 90       	pop	r10
    3b82:	9f 90       	pop	r9
    3b84:	8f 90       	pop	r8
    3b86:	7f 90       	pop	r7
    3b88:	6f 90       	pop	r6
    3b8a:	5f 90       	pop	r5
    3b8c:	4f 90       	pop	r4
    3b8e:	3f 90       	pop	r3
    3b90:	2f 90       	pop	r2
    3b92:	08 95       	ret

00003b94 <Adafruit_GFX_write>:
    3b94:	cf 92       	push	r12
    3b96:	ef 92       	push	r14
    3b98:	ff 92       	push	r15
    3b9a:	0f 93       	push	r16
    3b9c:	1f 93       	push	r17
    3b9e:	cf 93       	push	r28
    3ba0:	df 93       	push	r29
    3ba2:	ec 01       	movw	r28, r24
    3ba4:	6a 30       	cpi	r22, 0x0A	; 10
    3ba6:	69 f4       	brne	.+26     	; 0x3bc2 <Adafruit_GFX_write+0x2e>
    3ba8:	2e 89       	ldd	r18, Y+22	; 0x16
    3baa:	88 89       	ldd	r24, Y+16	; 0x10
    3bac:	99 89       	ldd	r25, Y+17	; 0x11
    3bae:	38 e0       	ldi	r19, 0x08	; 8
    3bb0:	23 9f       	mul	r18, r19
    3bb2:	80 0d       	add	r24, r0
    3bb4:	91 1d       	adc	r25, r1
    3bb6:	11 24       	eor	r1, r1
    3bb8:	99 8b       	std	Y+17, r25	; 0x11
    3bba:	88 8b       	std	Y+16, r24	; 0x10
    3bbc:	1f 86       	std	Y+15, r1	; 0x0f
    3bbe:	1e 86       	std	Y+14, r1	; 0x0e
    3bc0:	3c c0       	rjmp	.+120    	; 0x3c3a <Adafruit_GFX_write+0xa6>
    3bc2:	6d 30       	cpi	r22, 0x0D	; 13
    3bc4:	d1 f1       	breq	.+116    	; 0x3c3a <Adafruit_GFX_write+0xa6>
    3bc6:	ec 88       	ldd	r14, Y+20	; 0x14
    3bc8:	fd 88       	ldd	r15, Y+21	; 0x15
    3bca:	0a 89       	ldd	r16, Y+18	; 0x12
    3bcc:	1b 89       	ldd	r17, Y+19	; 0x13
    3bce:	48 89       	ldd	r20, Y+16	; 0x10
    3bd0:	59 89       	ldd	r21, Y+17	; 0x11
    3bd2:	8e 85       	ldd	r24, Y+14	; 0x0e
    3bd4:	9f 85       	ldd	r25, Y+15	; 0x0f
    3bd6:	ce 88       	ldd	r12, Y+22	; 0x16
    3bd8:	26 2f       	mov	r18, r22
    3bda:	bc 01       	movw	r22, r24
    3bdc:	ce 01       	movw	r24, r28
    3bde:	de de       	rcall	.-580    	; 0x399c <Adafruit_GFX_drawChar>
    3be0:	2e 89       	ldd	r18, Y+22	; 0x16
    3be2:	30 e0       	ldi	r19, 0x00	; 0
    3be4:	c9 01       	movw	r24, r18
    3be6:	88 0f       	add	r24, r24
    3be8:	99 1f       	adc	r25, r25
    3bea:	82 0f       	add	r24, r18
    3bec:	93 1f       	adc	r25, r19
    3bee:	88 0f       	add	r24, r24
    3bf0:	99 1f       	adc	r25, r25
    3bf2:	4e 85       	ldd	r20, Y+14	; 0x0e
    3bf4:	5f 85       	ldd	r21, Y+15	; 0x0f
    3bf6:	84 0f       	add	r24, r20
    3bf8:	95 1f       	adc	r25, r21
    3bfa:	9f 87       	std	Y+15, r25	; 0x0f
    3bfc:	8e 87       	std	Y+14, r24	; 0x0e
    3bfe:	48 8d       	ldd	r20, Y+24	; 0x18
    3c00:	44 23       	and	r20, r20
    3c02:	d9 f0       	breq	.+54     	; 0x3c3a <Adafruit_GFX_write+0xa6>
    3c04:	4a ef       	ldi	r20, 0xFA	; 250
    3c06:	42 03       	mulsu	r20, r18
    3c08:	b0 01       	movw	r22, r0
    3c0a:	43 9f       	mul	r20, r19
    3c0c:	70 0d       	add	r23, r0
    3c0e:	11 24       	eor	r1, r1
    3c10:	4a 85       	ldd	r20, Y+10	; 0x0a
    3c12:	5b 85       	ldd	r21, Y+11	; 0x0b
    3c14:	46 0f       	add	r20, r22
    3c16:	57 1f       	adc	r21, r23
    3c18:	48 17       	cp	r20, r24
    3c1a:	59 07       	cpc	r21, r25
    3c1c:	74 f4       	brge	.+28     	; 0x3c3a <Adafruit_GFX_write+0xa6>
    3c1e:	22 0f       	add	r18, r18
    3c20:	33 1f       	adc	r19, r19
    3c22:	22 0f       	add	r18, r18
    3c24:	33 1f       	adc	r19, r19
    3c26:	22 0f       	add	r18, r18
    3c28:	33 1f       	adc	r19, r19
    3c2a:	88 89       	ldd	r24, Y+16	; 0x10
    3c2c:	99 89       	ldd	r25, Y+17	; 0x11
    3c2e:	28 0f       	add	r18, r24
    3c30:	39 1f       	adc	r19, r25
    3c32:	39 8b       	std	Y+17, r19	; 0x11
    3c34:	28 8b       	std	Y+16, r18	; 0x10
    3c36:	1f 86       	std	Y+15, r1	; 0x0f
    3c38:	1e 86       	std	Y+14, r1	; 0x0e
    3c3a:	df 91       	pop	r29
    3c3c:	cf 91       	pop	r28
    3c3e:	1f 91       	pop	r17
    3c40:	0f 91       	pop	r16
    3c42:	ff 90       	pop	r15
    3c44:	ef 90       	pop	r14
    3c46:	cf 90       	pop	r12
    3c48:	08 95       	ret

00003c4a <Adafruit_GFX_setCursor>:
    3c4a:	fc 01       	movw	r30, r24
    3c4c:	77 87       	std	Z+15, r23	; 0x0f
    3c4e:	66 87       	std	Z+14, r22	; 0x0e
    3c50:	51 8b       	std	Z+17, r21	; 0x11
    3c52:	40 8b       	std	Z+16, r20	; 0x10
    3c54:	08 95       	ret

00003c56 <Adafruit_GFX_setTextColor>:
}


void Adafruit_GFX_setTextColor(Adafruit_GFX *agfx, uint16_t c) {
  agfx->_textcolor = c;
    3c56:	fc 01       	movw	r30, r24
    3c58:	73 8b       	std	Z+19, r23	; 0x13
    3c5a:	62 8b       	std	Z+18, r22	; 0x12
  agfx->_textbgcolor = c; 
    3c5c:	75 8b       	std	Z+21, r23	; 0x15
    3c5e:	64 8b       	std	Z+20, r22	; 0x14
    3c60:	08 95       	ret

00003c62 <Print_writeEx>:
	if (str == NULL) return 0;
	return Print_writeEx(print, (const uint8_t *)str, strlen(str));
}

size_t Print_writeEx(Print *print, const uint8_t *buffer, size_t size)
{
    3c62:	cf 92       	push	r12
    3c64:	df 92       	push	r13
    3c66:	ef 92       	push	r14
    3c68:	ff 92       	push	r15
    3c6a:	0f 93       	push	r16
    3c6c:	1f 93       	push	r17
    3c6e:	cf 93       	push	r28
    3c70:	df 93       	push	r29
    3c72:	7c 01       	movw	r14, r24
    3c74:	6b 01       	movw	r12, r22
    3c76:	ea 01       	movw	r28, r20
  size_t n = 0;
  while (size--) {
    3c78:	20 97       	sbiw	r28, 0x00	; 0
    3c7a:	89 f0       	breq	.+34     	; 0x3c9e <Print_writeEx+0x3c>
	return Print_writeEx(print, (const uint8_t *)str, strlen(str));
}

size_t Print_writeEx(Print *print, const uint8_t *buffer, size_t size)
{
  size_t n = 0;
    3c7c:	00 e0       	ldi	r16, 0x00	; 0
    3c7e:	10 e0       	ldi	r17, 0x00	; 0
  while (size--) {
    n += print->write(print, *buffer++);
    3c80:	d6 01       	movw	r26, r12
    3c82:	6d 91       	ld	r22, X+
    3c84:	6d 01       	movw	r12, r26
    3c86:	d7 01       	movw	r26, r14
    3c88:	12 96       	adiw	r26, 0x02	; 2
    3c8a:	ed 91       	ld	r30, X+
    3c8c:	fc 91       	ld	r31, X
    3c8e:	13 97       	sbiw	r26, 0x03	; 3
    3c90:	c7 01       	movw	r24, r14
    3c92:	09 95       	icall
    3c94:	08 0f       	add	r16, r24
    3c96:	19 1f       	adc	r17, r25
    3c98:	21 97       	sbiw	r28, 0x01	; 1
}

size_t Print_writeEx(Print *print, const uint8_t *buffer, size_t size)
{
  size_t n = 0;
  while (size--) {
    3c9a:	91 f7       	brne	.-28     	; 0x3c80 <Print_writeEx+0x1e>
    3c9c:	02 c0       	rjmp	.+4      	; 0x3ca2 <Print_writeEx+0x40>
	return Print_writeEx(print, (const uint8_t *)str, strlen(str));
}

size_t Print_writeEx(Print *print, const uint8_t *buffer, size_t size)
{
  size_t n = 0;
    3c9e:	00 e0       	ldi	r16, 0x00	; 0
    3ca0:	10 e0       	ldi	r17, 0x00	; 0
  while (size--) {
    n += print->write(print, *buffer++);
  }
  return n;
}
    3ca2:	80 2f       	mov	r24, r16
    3ca4:	91 2f       	mov	r25, r17
    3ca6:	df 91       	pop	r29
    3ca8:	cf 91       	pop	r28
    3caa:	1f 91       	pop	r17
    3cac:	0f 91       	pop	r16
    3cae:	ff 90       	pop	r15
    3cb0:	ef 90       	pop	r14
    3cb2:	df 90       	pop	r13
    3cb4:	cf 90       	pop	r12
    3cb6:	08 95       	ret

00003cb8 <Print_constructor>:
#include "Print.h"

// Public Methods //////////////////////////////////////////////////////////////

void Print_constructor(Print *print) //must call
{
    3cb8:	fc 01       	movw	r30, r24
	print->write = 0;
    3cba:	13 82       	std	Z+3, r1	; 0x03
    3cbc:	12 82       	std	Z+2, r1	; 0x02
	print->writeEx = &Print_writeEx;
    3cbe:	81 e3       	ldi	r24, 0x31	; 49
    3cc0:	9e e1       	ldi	r25, 0x1E	; 30
    3cc2:	95 83       	std	Z+5, r25	; 0x05
    3cc4:	84 83       	std	Z+4, r24	; 0x04
	print->write_error = 0;
    3cc6:	11 82       	std	Z+1, r1	; 0x01
    3cc8:	10 82       	st	Z, r1
    3cca:	08 95       	ret

00003ccc <wait_avr_ms>:
//http://maxembedded.com/2011/06/22/introduction-to-avr-timers/

void
wait_avr_ms(unsigned short msec) //millisecond granularity
{
	TCCR0 = 3; //CLKio/64 = 125000Hz 
    3ccc:	23 e0       	ldi	r18, 0x03	; 3
    3cce:	23 bf       	out	0x33, r18	; 51
	//0.008ms per tick
	//125000 ticks 1 second
	while (msec--) {
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001); //125 ticks left //1ms per loop
    3cd0:	33 e8       	ldi	r19, 0x83	; 131
wait_avr_ms(unsigned short msec) //millisecond granularity
{
	TCCR0 = 3; //CLKio/64 = 125000Hz 
	//0.008ms per tick
	//125000 ticks 1 second
	while (msec--) {
    3cd2:	07 c0       	rjmp	.+14     	; 0x3ce2 <wait_avr_ms+0x16>
		TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.001); //125 ticks left //1ms per loop
    3cd4:	32 bf       	out	0x32, r19	; 50
		//TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00001); //1 ticks left //0.008msms per loop
		SET_BIT(TIFR, TOV0); //enable overflow
    3cd6:	28 b7       	in	r18, 0x38	; 56
    3cd8:	21 60       	ori	r18, 0x01	; 1
    3cda:	28 bf       	out	0x38, r18	; 56
		//WDR(); //reset watchdog
		while (!GET_BIT(TIFR, TOV0)); //wait till overflow
    3cdc:	08 b6       	in	r0, 0x38	; 56
    3cde:	00 fe       	sbrs	r0, 0
    3ce0:	fd cf       	rjmp	.-6      	; 0x3cdc <wait_avr_ms+0x10>
wait_avr_ms(unsigned short msec) //millisecond granularity
{
	TCCR0 = 3; //CLKio/64 = 125000Hz 
	//0.008ms per tick
	//125000 ticks 1 second
	while (msec--) {
    3ce2:	01 97       	sbiw	r24, 0x01	; 1
    3ce4:	b8 f7       	brcc	.-18     	; 0x3cd4 <wait_avr_ms+0x8>
		//TCNT0 = (unsigned char)(256 - (XTAL_FRQ / 64) * 0.00001); //1 ticks left //0.008msms per loop
		SET_BIT(TIFR, TOV0); //enable overflow
		//WDR(); //reset watchdog
		while (!GET_BIT(TIFR, TOV0)); //wait till overflow
	}
	TCCR0 = 0; //stop timer
    3ce6:	13 be       	out	0x33, r1	; 51
    3ce8:	08 95       	ret

00003cea <ball_setColor>:
}

void ball_getPosition(Ball *ball, char *x, char *y)
{
	*x = ball->x;
	*y = ball->y;
    3cea:	fc 01       	movw	r30, r24
    3cec:	73 83       	std	Z+3, r23	; 0x03
    3cee:	62 83       	std	Z+2, r22	; 0x02
    3cf0:	08 95       	ret

00003cf2 <ball_moveCenter>:
}

//center ball on screen
void ball_moveCenter(Ball *ball)
{
	ball->x = 15;
    3cf2:	2f e0       	ldi	r18, 0x0F	; 15
    3cf4:	fc 01       	movw	r30, r24
    3cf6:	20 83       	st	Z, r18
	ball->y = 7;
    3cf8:	27 e0       	ldi	r18, 0x07	; 7
    3cfa:	21 83       	std	Z+1, r18	; 0x01
    3cfc:	08 95       	ret

00003cfe <ball_randomVelocity>:
}

void ball_randomVelocity(Ball *ball)
{
    3cfe:	1f 93       	push	r17
    3d00:	cf 93       	push	r28
    3d02:	df 93       	push	r29
    3d04:	ec 01       	movw	r28, r24
	ball->speedX = (rand() % 2+1) * (rand() % 2 ? 1 : -1);
    3d06:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <rand>
    3d0a:	81 70       	andi	r24, 0x01	; 1
    3d0c:	90 78       	andi	r25, 0x80	; 128
    3d0e:	99 23       	and	r25, r25
    3d10:	24 f4       	brge	.+8      	; 0x3d1a <ball_randomVelocity+0x1c>
    3d12:	01 97       	sbiw	r24, 0x01	; 1
    3d14:	8e 6f       	ori	r24, 0xFE	; 254
    3d16:	9f 6f       	ori	r25, 0xFF	; 255
    3d18:	01 96       	adiw	r24, 0x01	; 1
    3d1a:	18 2f       	mov	r17, r24
    3d1c:	1f 5f       	subi	r17, 0xFF	; 255
    3d1e:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <rand>
    3d22:	80 ff       	sbrs	r24, 0
    3d24:	02 c0       	rjmp	.+4      	; 0x3d2a <ball_randomVelocity+0x2c>
    3d26:	21 e0       	ldi	r18, 0x01	; 1
    3d28:	01 c0       	rjmp	.+2      	; 0x3d2c <ball_randomVelocity+0x2e>
    3d2a:	2f ef       	ldi	r18, 0xFF	; 255
    3d2c:	21 9f       	mul	r18, r17
    3d2e:	10 2d       	mov	r17, r0
    3d30:	11 24       	eor	r1, r1
    3d32:	1c 83       	std	Y+4, r17	; 0x04
	ball->speedY = (rand() % 2+1) * (rand() % 2 ? 1 : -1);
    3d34:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <rand>
    3d38:	81 70       	andi	r24, 0x01	; 1
    3d3a:	90 78       	andi	r25, 0x80	; 128
    3d3c:	99 23       	and	r25, r25
    3d3e:	24 f4       	brge	.+8      	; 0x3d48 <ball_randomVelocity+0x4a>
    3d40:	01 97       	sbiw	r24, 0x01	; 1
    3d42:	8e 6f       	ori	r24, 0xFE	; 254
    3d44:	9f 6f       	ori	r25, 0xFF	; 255
    3d46:	01 96       	adiw	r24, 0x01	; 1
    3d48:	18 2f       	mov	r17, r24
    3d4a:	1f 5f       	subi	r17, 0xFF	; 255
    3d4c:	0e 94 1a 2f 	call	0x5e34	; 0x5e34 <rand>
    3d50:	80 ff       	sbrs	r24, 0
    3d52:	02 c0       	rjmp	.+4      	; 0x3d58 <ball_randomVelocity+0x5a>
    3d54:	21 e0       	ldi	r18, 0x01	; 1
    3d56:	01 c0       	rjmp	.+2      	; 0x3d5a <ball_randomVelocity+0x5c>
    3d58:	2f ef       	ldi	r18, 0xFF	; 255
    3d5a:	21 9f       	mul	r18, r17
    3d5c:	10 2d       	mov	r17, r0
    3d5e:	11 24       	eor	r1, r1
    3d60:	1d 83       	std	Y+5, r17	; 0x05
}
    3d62:	df 91       	pop	r29
    3d64:	cf 91       	pop	r28
    3d66:	1f 91       	pop	r17
    3d68:	08 95       	ret

00003d6a <ball_step>:

void ball_step(Ball *ball)
{
    3d6a:	fc 01       	movw	r30, r24
	ball->x += ball->speedX;
    3d6c:	90 81       	ld	r25, Z
    3d6e:	84 81       	ldd	r24, Z+4	; 0x04
    3d70:	89 0f       	add	r24, r25
    3d72:	80 83       	st	Z, r24
	ball->y += ball->speedY;
    3d74:	91 81       	ldd	r25, Z+1	; 0x01
    3d76:	85 81       	ldd	r24, Z+5	; 0x05
    3d78:	89 0f       	add	r24, r25
    3d7a:	81 83       	std	Z+1, r24	; 0x01
    3d7c:	08 95       	ret

00003d7e <ball_render>:
}

void ball_render(RGBmatrixPanel *matrix, Ball *ball)
{
    3d7e:	fb 01       	movw	r30, r22
	RGBmatrixPanel_drawPixel(matrix, ball->x, ball->y, ball->color);
    3d80:	22 81       	ldd	r18, Z+2	; 0x02
    3d82:	33 81       	ldd	r19, Z+3	; 0x03
    3d84:	41 81       	ldd	r20, Z+1	; 0x01
    3d86:	55 27       	eor	r21, r21
    3d88:	47 fd       	sbrc	r20, 7
    3d8a:	50 95       	com	r21
    3d8c:	60 81       	ld	r22, Z
    3d8e:	77 27       	eor	r23, r23
    3d90:	67 fd       	sbrc	r22, 7
    3d92:	70 95       	com	r23
    3d94:	3c c7       	rjmp	.+3704   	; 0x4c0e <RGBmatrixPanel_drawPixel>

00003d96 <coin_init>:
//grey = gnd

void coin_init(void)
{
	//DDR
	CLR_BIT(COIN_ACCEPTOR_DDR, COIN_ACCEPTOR_PIN_COIN); //input
    3d96:	ba 98       	cbi	0x17, 2	; 23
	//CLR_BIT(COIN_ACCEPTOR_DDR, COIN_ACCEPTOR_PIN_COUNT); //input
	
	//HARDWARE INTERRUPT ENABLE
	//SET_BIT(MCUCSR, ISC2); //DETECT RISING OR FALLING 0=FALLING 1=RISING
	CLR_BIT(MCUCSR, ISC2); //DETECT RISING OR FALLING 0=FALLING 1=RISING
    3d98:	84 b7       	in	r24, 0x34	; 52
    3d9a:	8f 7b       	andi	r24, 0xBF	; 191
    3d9c:	84 bf       	out	0x34, r24	; 52
	SET_BIT(GICR, 5); //IRQ2
    3d9e:	8b b7       	in	r24, 0x3b	; 59
    3da0:	80 62       	ori	r24, 0x20	; 32
    3da2:	8b bf       	out	0x3b, r24	; 59
	//SET_BIT(GIFR, INTF2); //CLEAR INTERRUPT
	sei();
    3da4:	78 94       	sei
    3da6:	08 95       	ret

00003da8 <ledpong_drawArt>:
	LEDPong* ledpong = (LEDPong*) data;
	ledpong->paddle2.y = ++(ledpong->paddle2.y) < 14 ? ledpong->paddle2.y : 15-16/4;
}

void kp_ledpong_reset_score(void* data)
{
    3da8:	4f 92       	push	r4
    3daa:	5f 92       	push	r5
    3dac:	6f 92       	push	r6
    3dae:	7f 92       	push	r7
    3db0:	8f 92       	push	r8
    3db2:	9f 92       	push	r9
    3db4:	af 92       	push	r10
    3db6:	bf 92       	push	r11
    3db8:	cf 92       	push	r12
    3dba:	df 92       	push	r13
    3dbc:	ef 92       	push	r14
    3dbe:	ff 92       	push	r15
    3dc0:	0f 93       	push	r16
    3dc2:	1f 93       	push	r17
    3dc4:	cf 93       	push	r28
    3dc6:	df 93       	push	r29
    3dc8:	48 2e       	mov	r4, r24
    3dca:	59 2e       	mov	r5, r25
    3dcc:	7b 01       	movw	r14, r22
    3dce:	c1 2c       	mov	r12, r1
    3dd0:	d1 2c       	mov	r13, r1
    3dd2:	81 2c       	mov	r8, r1
    3dd4:	91 2c       	mov	r9, r1
    3dd6:	61 2c       	mov	r6, r1
    3dd8:	71 2c       	mov	r7, r1
    3dda:	2b c0       	rjmp	.+86     	; 0x3e32 <ledpong_drawArt+0x8a>
    3ddc:	9e 01       	movw	r18, r28
    3dde:	fe 01       	movw	r30, r28
    3de0:	36 96       	adiw	r30, 0x06	; 6
    3de2:	ee 0d       	add	r30, r14
    3de4:	ff 1d       	adc	r31, r15
    3de6:	64 91       	lpm	r22, Z
    3de8:	fe 01       	movw	r30, r28
    3dea:	37 96       	adiw	r30, 0x07	; 7
    3dec:	ee 0d       	add	r30, r14
    3dee:	ff 1d       	adc	r31, r15
    3df0:	44 91       	lpm	r20, Z
    3df2:	23 96       	adiw	r28, 0x03	; 3
    3df4:	28 5f       	subi	r18, 0xF8	; 248
    3df6:	3f 4f       	sbci	r19, 0xFF	; 255
    3df8:	f7 01       	movw	r30, r14
    3dfa:	e2 0f       	add	r30, r18
    3dfc:	f3 1f       	adc	r31, r19
    3dfe:	24 91       	lpm	r18, Z
    3e00:	84 2d       	mov	r24, r4
    3e02:	95 2d       	mov	r25, r5
    3e04:	0e 94 49 29 	call	0x5292	; 0x5292 <RGBmatrixPanel_Color888>
    3e08:	9c 01       	movw	r18, r24
    3e0a:	a6 01       	movw	r20, r12
    3e0c:	b8 01       	movw	r22, r16
    3e0e:	84 2d       	mov	r24, r4
    3e10:	95 2d       	mov	r25, r5
    3e12:	fd d6       	rcall	.+3578   	; 0x4c0e <RGBmatrixPanel_drawPixel>
    3e14:	0f 5f       	subi	r16, 0xFF	; 255
    3e16:	1f 4f       	sbci	r17, 0xFF	; 255
    3e18:	ac 16       	cp	r10, r28
    3e1a:	bd 06       	cpc	r11, r29
    3e1c:	f9 f6       	brne	.-66     	; 0x3ddc <ledpong_drawArt+0x34>
    3e1e:	80 e6       	ldi	r24, 0x60	; 96
    3e20:	88 0e       	add	r8, r24
    3e22:	91 1c       	adc	r9, r1
    3e24:	8f ef       	ldi	r24, 0xFF	; 255
    3e26:	c8 1a       	sub	r12, r24
    3e28:	d8 0a       	sbc	r13, r24
    3e2a:	81 14       	cp	r8, r1
    3e2c:	86 e0       	ldi	r24, 0x06	; 6
    3e2e:	98 06       	cpc	r9, r24
    3e30:	39 f0       	breq	.+14     	; 0x3e40 <ledpong_drawArt+0x98>
    3e32:	54 01       	movw	r10, r8
    3e34:	80 e6       	ldi	r24, 0x60	; 96
    3e36:	a8 0e       	add	r10, r24
    3e38:	b1 1c       	adc	r11, r1
    3e3a:	e4 01       	movw	r28, r8
    3e3c:	83 01       	movw	r16, r6
    3e3e:	ce cf       	rjmp	.-100    	; 0x3ddc <ledpong_drawArt+0x34>
    3e40:	df 91       	pop	r29
    3e42:	cf 91       	pop	r28
    3e44:	1f 91       	pop	r17
    3e46:	0f 91       	pop	r16
    3e48:	ff 90       	pop	r15
    3e4a:	ef 90       	pop	r14
    3e4c:	df 90       	pop	r13
    3e4e:	cf 90       	pop	r12
    3e50:	bf 90       	pop	r11
    3e52:	af 90       	pop	r10
    3e54:	9f 90       	pop	r9
    3e56:	8f 90       	pop	r8
    3e58:	7f 90       	pop	r7
    3e5a:	6f 90       	pop	r6
    3e5c:	5f 90       	pop	r5
    3e5e:	4f 90       	pop	r4
    3e60:	08 95       	ret

00003e62 <ledpong_renderScores>:
    3e62:	cf 92       	push	r12
    3e64:	df 92       	push	r13
    3e66:	ef 92       	push	r14
    3e68:	ff 92       	push	r15
    3e6a:	0f 93       	push	r16
    3e6c:	1f 93       	push	r17
    3e6e:	cf 93       	push	r28
    3e70:	df 93       	push	r29
    3e72:	cd b7       	in	r28, 0x3d	; 61
    3e74:	de b7       	in	r29, 0x3e	; 62
    3e76:	c0 55       	subi	r28, 0x50	; 80
    3e78:	d1 09       	sbc	r29, r1
    3e7a:	0f b6       	in	r0, 0x3f	; 63
    3e7c:	f8 94       	cli
    3e7e:	de bf       	out	0x3e, r29	; 62
    3e80:	0f be       	out	0x3f, r0	; 63
    3e82:	cd bf       	out	0x3d, r28	; 61
    3e84:	7c 01       	movw	r14, r24
    3e86:	19 82       	std	Y+1, r1	; 0x01
    3e88:	1a 82       	std	Y+2, r1	; 0x02
    3e8a:	1b 82       	std	Y+3, r1	; 0x03
    3e8c:	1c 82       	std	Y+4, r1	; 0x04
    3e8e:	fe 01       	movw	r30, r28
    3e90:	35 96       	adiw	r30, 0x05	; 5
    3e92:	8c e4       	ldi	r24, 0x4C	; 76
    3e94:	df 01       	movw	r26, r30
    3e96:	1d 92       	st	X+, r1
    3e98:	8a 95       	dec	r24
    3e9a:	e9 f7       	brne	.-6      	; 0x3e96 <ledpong_renderScores+0x34>
    3e9c:	c7 01       	movw	r24, r14
    3e9e:	8e 5a       	subi	r24, 0xAE	; 174
    3ea0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ea2:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <score_getPoints>
    3ea6:	18 2f       	mov	r17, r24
    3ea8:	c7 01       	movw	r24, r14
    3eaa:	8f 5a       	subi	r24, 0xAF	; 175
    3eac:	9f 4f       	sbci	r25, 0xFF	; 255
    3eae:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <score_getPoints>
    3eb2:	1f 92       	push	r1
    3eb4:	1f 93       	push	r17
    3eb6:	1f 92       	push	r1
    3eb8:	8f 93       	push	r24
    3eba:	8c e6       	ldi	r24, 0x6C	; 108
    3ebc:	90 e0       	ldi	r25, 0x00	; 0
    3ebe:	9f 93       	push	r25
    3ec0:	8f 93       	push	r24
    3ec2:	8e 01       	movw	r16, r28
    3ec4:	0f 5f       	subi	r16, 0xFF	; 255
    3ec6:	1f 4f       	sbci	r17, 0xFF	; 255
    3ec8:	1f 93       	push	r17
    3eca:	0f 93       	push	r16
    3ecc:	0e 94 2f 2f 	call	0x5e5e	; 0x5e5e <sprintf>
    3ed0:	40 e0       	ldi	r20, 0x00	; 0
    3ed2:	50 e0       	ldi	r21, 0x00	; 0
    3ed4:	62 e0       	ldi	r22, 0x02	; 2
    3ed6:	70 e0       	ldi	r23, 0x00	; 0
    3ed8:	c7 01       	movw	r24, r14
    3eda:	b7 de       	rcall	.-658    	; 0x3c4a <Adafruit_GFX_setCursor>
    3edc:	ce 2c       	mov	r12, r14
    3ede:	df 2c       	mov	r13, r15
    3ee0:	20 e0       	ldi	r18, 0x00	; 0
    3ee2:	40 e0       	ldi	r20, 0x00	; 0
    3ee4:	61 e0       	ldi	r22, 0x01	; 1
    3ee6:	8e 2d       	mov	r24, r14
    3ee8:	9f 2d       	mov	r25, r15
    3eea:	0e 94 1e 29 	call	0x523c	; 0x523c <RGBmatrixPanel_Color333>
    3eee:	bc 01       	movw	r22, r24
    3ef0:	c7 01       	movw	r24, r14
    3ef2:	b1 de       	rcall	.-670    	; 0x3c56 <Adafruit_GFX_setTextColor>
    3ef4:	7e 01       	movw	r14, r28
    3ef6:	b6 e0       	ldi	r27, 0x06	; 6
    3ef8:	eb 0e       	add	r14, r27
    3efa:	f1 1c       	adc	r15, r1
    3efc:	0f b6       	in	r0, 0x3f	; 63
    3efe:	f8 94       	cli
    3f00:	de bf       	out	0x3e, r29	; 62
    3f02:	0f be       	out	0x3f, r0	; 63
    3f04:	cd bf       	out	0x3d, r28	; 61
    3f06:	d8 01       	movw	r26, r16
    3f08:	6d 91       	ld	r22, X+
    3f0a:	8d 01       	movw	r16, r26
    3f0c:	8c 2d       	mov	r24, r12
    3f0e:	9d 2d       	mov	r25, r13
    3f10:	41 de       	rcall	.-894    	; 0x3b94 <Adafruit_GFX_write>
    3f12:	0e 15       	cp	r16, r14
    3f14:	1f 05       	cpc	r17, r15
    3f16:	b9 f7       	brne	.-18     	; 0x3f06 <ledpong_renderScores+0xa4>
    3f18:	c0 5b       	subi	r28, 0xB0	; 176
    3f1a:	df 4f       	sbci	r29, 0xFF	; 255
    3f1c:	0f b6       	in	r0, 0x3f	; 63
    3f1e:	f8 94       	cli
    3f20:	de bf       	out	0x3e, r29	; 62
    3f22:	0f be       	out	0x3f, r0	; 63
    3f24:	cd bf       	out	0x3d, r28	; 61
    3f26:	df 91       	pop	r29
    3f28:	cf 91       	pop	r28
    3f2a:	1f 91       	pop	r17
    3f2c:	0f 91       	pop	r16
    3f2e:	ff 90       	pop	r15
    3f30:	ef 90       	pop	r14
    3f32:	df 90       	pop	r13
    3f34:	cf 90       	pop	r12
    3f36:	08 95       	ret

00003f38 <ledpong_resetScore>:
    3f38:	fc 01       	movw	r30, r24
    3f3a:	ef 5a       	subi	r30, 0xAF	; 175
    3f3c:	ff 4f       	sbci	r31, 0xFF	; 255
    3f3e:	10 82       	st	Z, r1
    3f40:	fc 01       	movw	r30, r24
    3f42:	ee 5a       	subi	r30, 0xAE	; 174
    3f44:	ff 4f       	sbci	r31, 0xFF	; 255
    3f46:	10 82       	st	Z, r1
    3f48:	08 95       	ret

00003f4a <kp_ledpong_p1_paddle_move_left>:
    3f4a:	20 91 79 00 	lds	r18, 0x0079
    3f4e:	30 91 7a 00 	lds	r19, 0x007A
    3f52:	23 2b       	or	r18, r19
    3f54:	61 f0       	breq	.+24     	; 0x3f6e <kp_ledpong_p1_paddle_move_left+0x24>
    3f56:	fc 01       	movw	r30, r24
    3f58:	ea 57       	subi	r30, 0x7A	; 122
    3f5a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f5c:	20 81       	ld	r18, Z
    3f5e:	21 50       	subi	r18, 0x01	; 1
    3f60:	23 30       	cpi	r18, 0x03	; 3
    3f62:	0c f4       	brge	.+2      	; 0x3f66 <kp_ledpong_p1_paddle_move_left+0x1c>
    3f64:	21 e0       	ldi	r18, 0x01	; 1
    3f66:	fc 01       	movw	r30, r24
    3f68:	ea 57       	subi	r30, 0x7A	; 122
    3f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3f6c:	20 83       	st	Z, r18
    3f6e:	08 95       	ret

00003f70 <kp_ledpong_p1_paddle_move_right>:
    3f70:	20 91 79 00 	lds	r18, 0x0079
    3f74:	30 91 7a 00 	lds	r19, 0x007A
    3f78:	23 2b       	or	r18, r19
    3f7a:	61 f0       	breq	.+24     	; 0x3f94 <kp_ledpong_p1_paddle_move_right+0x24>
    3f7c:	fc 01       	movw	r30, r24
    3f7e:	ea 57       	subi	r30, 0x7A	; 122
    3f80:	ff 4f       	sbci	r31, 0xFF	; 255
    3f82:	20 81       	ld	r18, Z
    3f84:	2f 5f       	subi	r18, 0xFF	; 255
    3f86:	2e 30       	cpi	r18, 0x0E	; 14
    3f88:	0c f0       	brlt	.+2      	; 0x3f8c <kp_ledpong_p1_paddle_move_right+0x1c>
    3f8a:	2b e0       	ldi	r18, 0x0B	; 11
    3f8c:	fc 01       	movw	r30, r24
    3f8e:	ea 57       	subi	r30, 0x7A	; 122
    3f90:	ff 4f       	sbci	r31, 0xFF	; 255
    3f92:	20 83       	st	Z, r18
    3f94:	08 95       	ret

00003f96 <kp_ledpong_p2_paddle_move_left>:
    3f96:	20 91 79 00 	lds	r18, 0x0079
    3f9a:	30 91 7a 00 	lds	r19, 0x007A
    3f9e:	23 2b       	or	r18, r19
    3fa0:	61 f0       	breq	.+24     	; 0x3fba <kp_ledpong_p2_paddle_move_left+0x24>
    3fa2:	fc 01       	movw	r30, r24
    3fa4:	e2 57       	subi	r30, 0x72	; 114
    3fa6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fa8:	20 81       	ld	r18, Z
    3faa:	21 50       	subi	r18, 0x01	; 1
    3fac:	23 30       	cpi	r18, 0x03	; 3
    3fae:	0c f4       	brge	.+2      	; 0x3fb2 <kp_ledpong_p2_paddle_move_left+0x1c>
    3fb0:	21 e0       	ldi	r18, 0x01	; 1
    3fb2:	fc 01       	movw	r30, r24
    3fb4:	e2 57       	subi	r30, 0x72	; 114
    3fb6:	ff 4f       	sbci	r31, 0xFF	; 255
    3fb8:	20 83       	st	Z, r18
    3fba:	08 95       	ret

00003fbc <kp_ledpong_p2_paddle_move_right>:
    3fbc:	20 91 79 00 	lds	r18, 0x0079
    3fc0:	30 91 7a 00 	lds	r19, 0x007A
    3fc4:	23 2b       	or	r18, r19
    3fc6:	61 f0       	breq	.+24     	; 0x3fe0 <kp_ledpong_p2_paddle_move_right+0x24>
    3fc8:	fc 01       	movw	r30, r24
    3fca:	e2 57       	subi	r30, 0x72	; 114
    3fcc:	ff 4f       	sbci	r31, 0xFF	; 255
    3fce:	20 81       	ld	r18, Z
    3fd0:	2f 5f       	subi	r18, 0xFF	; 255
    3fd2:	2e 30       	cpi	r18, 0x0E	; 14
    3fd4:	0c f0       	brlt	.+2      	; 0x3fd8 <kp_ledpong_p2_paddle_move_right+0x1c>
    3fd6:	2b e0       	ldi	r18, 0x0B	; 11
    3fd8:	fc 01       	movw	r30, r24
    3fda:	e2 57       	subi	r30, 0x72	; 114
    3fdc:	ff 4f       	sbci	r31, 0xFF	; 255
    3fde:	20 83       	st	Z, r18
    3fe0:	08 95       	ret

00003fe2 <ledpong_resetPositions>:
	ledpong->had_collision = 0;
	pennies = 50;
}

void ledpong_resetPositions(LEDPong *ledpong)
{
    3fe2:	cf 93       	push	r28
    3fe4:	df 93       	push	r29
    3fe6:	ec 01       	movw	r28, r24
	ball_moveCenter(&ledpong->ball);
    3fe8:	83 58       	subi	r24, 0x83	; 131
    3fea:	9f 4f       	sbci	r25, 0xFF	; 255
    3fec:	82 de       	rcall	.-764    	; 0x3cf2 <ball_moveCenter>
	paddle_setPosition(&ledpong->paddle1, 0, 16/2-1-16/4/2);
    3fee:	45 e0       	ldi	r20, 0x05	; 5
    3ff0:	60 e0       	ldi	r22, 0x00	; 0
    3ff2:	ce 01       	movw	r24, r28
    3ff4:	8b 57       	subi	r24, 0x7B	; 123
    3ff6:	9f 4f       	sbci	r25, 0xFF	; 255
    3ff8:	a5 d5       	rcall	.+2890   	; 0x4b44 <paddle_setPosition>
	paddle_setPosition(&ledpong->paddle2, 31-1, 16/2-1-16/4/2);
    3ffa:	45 e0       	ldi	r20, 0x05	; 5
    3ffc:	6e e1       	ldi	r22, 0x1E	; 30
    3ffe:	ce 01       	movw	r24, r28
    4000:	83 57       	subi	r24, 0x73	; 115
    4002:	9f 4f       	sbci	r25, 0xFF	; 255
    4004:	9f d5       	rcall	.+2878   	; 0x4b44 <paddle_setPosition>
}
    4006:	df 91       	pop	r29
    4008:	cf 91       	pop	r28
    400a:	08 95       	ret

0000400c <ledpong_init>:
	LEDPong* ledpong = (LEDPong*) data;
	//ledpong_resetScore(ledpong);
}
volatile char pennies = 0;
void ledpong_init(LEDPong *ledpong)
{
    400c:	af 92       	push	r10
    400e:	cf 92       	push	r12
    4010:	df 92       	push	r13
    4012:	ef 92       	push	r14
    4014:	ff 92       	push	r15
    4016:	0f 93       	push	r16
    4018:	1f 93       	push	r17
    401a:	cf 93       	push	r28
    401c:	df 93       	push	r29
    401e:	ec 01       	movw	r28, r24
	// *** LED PANEL INIT ***
	RGBmatrixPanel_Constructor_16x32(&ledpong->matrix, A, B, C, CLK, LAT, OE, 0);
    4020:	a1 2c       	mov	r10, r1
    4022:	0f 2e       	mov	r0, r31
    4024:	f3 e1       	ldi	r31, 0x13	; 19
    4026:	cf 2e       	mov	r12, r31
    4028:	f0 2d       	mov	r31, r0
    402a:	0f 2e       	mov	r0, r31
    402c:	f4 e1       	ldi	r31, 0x14	; 20
    402e:	ef 2e       	mov	r14, r31
    4030:	f0 2d       	mov	r31, r0
    4032:	02 e1       	ldi	r16, 0x12	; 18
    4034:	27 e1       	ldi	r18, 0x17	; 23
    4036:	46 e1       	ldi	r20, 0x16	; 22
    4038:	65 e1       	ldi	r22, 0x15	; 21
    403a:	9d 2f       	mov	r25, r29
    403c:	0e 94 7d 28 	call	0x50fa	; 0x50fa <RGBmatrixPanel_Constructor_16x32>
	RGBmatrixPanel_begin(&ledpong->matrix);
    4040:	8c 2f       	mov	r24, r28
    4042:	9d 2f       	mov	r25, r29
    4044:	0e 94 91 28 	call	0x5122	; 0x5122 <RGBmatrixPanel_begin>

	ledpong->_playStates = PS_BOOT;
    4048:	fe 01       	movw	r30, r28
    404a:	e9 56       	subi	r30, 0x69	; 105
    404c:	ff 4f       	sbci	r31, 0xFF	; 255
    404e:	11 82       	std	Z+1, r1	; 0x01
    4050:	10 82       	st	Z, r1

	// *** CONTROLLER INIT ***
	nesctrlr_init();
    4052:	f4 d2       	rcall	.+1512   	; 0x463c <nesctrlr_init>

	// *** MUSIC INIT ***
	music_init(&music);
    4054:	8d e7       	ldi	r24, 0x7D	; 125
    4056:	91 e0       	ldi	r25, 0x01	; 1
    4058:	0e 94 24 2c 	call	0x5848	; 0x5848 <music_init>
	music_playSoundEffectBeep(&music); // MUSIC SOUND CHECK OK
    405c:	8d e7       	ldi	r24, 0x7D	; 125
    405e:	91 e0       	ldi	r25, 0x01	; 1
    4060:	0e 94 d3 2c 	call	0x59a6	; 0x59a6 <music_playSoundEffectBeep>
	music_enable(&music);
    4064:	8d e7       	ldi	r24, 0x7D	; 125
    4066:	91 e0       	ldi	r25, 0x01	; 1
    4068:	0e 94 5c 2b 	call	0x56b8	; 0x56b8 <music_enable>
	
	// *** COIN INIT ***
	coin_init();
    406c:	94 de       	rcall	.-728    	; 0x3d96 <coin_init>
	//ledpong->keypad.pressed5 = &kp_ledpong_p2_paddle_move_right;
	//ledpong->keypad.pressedC = &kp_ledpong_reset_score;
	

	// *** LEDPONG INIT ***
	ledpong_resetScore(ledpong);
    406e:	ce 01       	movw	r24, r28
    4070:	63 df       	rcall	.-314    	; 0x3f38 <ledpong_resetScore>
	ledpong_resetPositions(ledpong);	
    4072:	ce 01       	movw	r24, r28
    4074:	b6 df       	rcall	.-148    	; 0x3fe2 <ledpong_resetPositions>
	ball_setColor(&ledpong->ball, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 1, 0));
    4076:	20 e0       	ldi	r18, 0x00	; 0
    4078:	41 e0       	ldi	r20, 0x01	; 1
    407a:	60 e0       	ldi	r22, 0x00	; 0
    407c:	8c 2f       	mov	r24, r28
    407e:	9d 2f       	mov	r25, r29
    4080:	0e 94 1e 29 	call	0x523c	; 0x523c <RGBmatrixPanel_Color333>
    4084:	8e 01       	movw	r16, r28
    4086:	03 58       	subi	r16, 0x83	; 131
    4088:	1f 4f       	sbci	r17, 0xFF	; 255
    408a:	bc 01       	movw	r22, r24
    408c:	c8 01       	movw	r24, r16
    408e:	2d de       	rcall	.-934    	; 0x3cea <ball_setColor>
	paddle_setExtent(&ledpong->paddle1, 2, 16/4);
    4090:	6e 01       	movw	r12, r28
    4092:	85 e8       	ldi	r24, 0x85	; 133
    4094:	c8 0e       	add	r12, r24
    4096:	d1 1c       	adc	r13, r1
    4098:	44 e0       	ldi	r20, 0x04	; 4
    409a:	62 e0       	ldi	r22, 0x02	; 2
    409c:	c6 01       	movw	r24, r12
    409e:	4e d5       	rcall	.+2716   	; 0x4b3c <paddle_setExtent>
	paddle_setExtent(&ledpong->paddle2, 2, 16/4);
    40a0:	7e 01       	movw	r14, r28
    40a2:	8d e8       	ldi	r24, 0x8D	; 141
    40a4:	e8 0e       	add	r14, r24
    40a6:	f1 1c       	adc	r15, r1
    40a8:	44 e0       	ldi	r20, 0x04	; 4
    40aa:	62 e0       	ldi	r22, 0x02	; 2
    40ac:	c7 01       	movw	r24, r14
    40ae:	46 d5       	rcall	.+2700   	; 0x4b3c <paddle_setExtent>
	paddle_setColor(&ledpong->paddle1, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 7));
    40b0:	27 e0       	ldi	r18, 0x07	; 7
    40b2:	40 e0       	ldi	r20, 0x00	; 0
    40b4:	60 e0       	ldi	r22, 0x00	; 0
    40b6:	8c 2f       	mov	r24, r28
    40b8:	9d 2f       	mov	r25, r29
    40ba:	0e 94 1e 29 	call	0x523c	; 0x523c <RGBmatrixPanel_Color333>
    40be:	bc 01       	movw	r22, r24
    40c0:	c6 01       	movw	r24, r12
    40c2:	38 d5       	rcall	.+2672   	; 0x4b34 <paddle_setColor>
	paddle_setColor(&ledpong->paddle2, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 7));
    40c4:	27 e0       	ldi	r18, 0x07	; 7
    40c6:	40 e0       	ldi	r20, 0x00	; 0
    40c8:	60 e0       	ldi	r22, 0x00	; 0
    40ca:	8c 2f       	mov	r24, r28
    40cc:	9d 2f       	mov	r25, r29
    40ce:	0e 94 1e 29 	call	0x523c	; 0x523c <RGBmatrixPanel_Color333>
    40d2:	bc 01       	movw	r22, r24
    40d4:	c7 01       	movw	r24, r14
    40d6:	2e d5       	rcall	.+2652   	; 0x4b34 <paddle_setColor>
	ball_randomVelocity(&ledpong->ball);
    40d8:	c8 01       	movw	r24, r16
    40da:	11 de       	rcall	.-990    	; 0x3cfe <ball_randomVelocity>
	ledpong->had_collision = 0;
    40dc:	ca 56       	subi	r28, 0x6A	; 106
    40de:	df 4f       	sbci	r29, 0xFF	; 255
    40e0:	18 82       	st	Y, r1
	pennies = 50;
    40e2:	82 e3       	ldi	r24, 0x32	; 50
    40e4:	80 93 78 00 	sts	0x0078, r24
}
    40e8:	df 91       	pop	r29
    40ea:	cf 91       	pop	r28
    40ec:	1f 91       	pop	r17
    40ee:	0f 91       	pop	r16
    40f0:	ff 90       	pop	r15
    40f2:	ef 90       	pop	r14
    40f4:	df 90       	pop	r13
    40f6:	cf 90       	pop	r12
    40f8:	af 90       	pop	r10
    40fa:	08 95       	ret

000040fc <__vector_3>:
	paddle_setPosition(&ledpong->paddle1, 0, 16/2-1-16/4/2);
	paddle_setPosition(&ledpong->paddle2, 31-1, 16/2-1-16/4/2);
}

ISR(INT2_vect)
{
    40fc:	1f 92       	push	r1
    40fe:	0f 92       	push	r0
    4100:	0f b6       	in	r0, 0x3f	; 63
    4102:	0f 92       	push	r0
    4104:	11 24       	eor	r1, r1
    4106:	2f 93       	push	r18
    4108:	3f 93       	push	r19
    410a:	4f 93       	push	r20
    410c:	5f 93       	push	r21
    410e:	6f 93       	push	r22
    4110:	7f 93       	push	r23
    4112:	8f 93       	push	r24
    4114:	9f 93       	push	r25
    4116:	af 93       	push	r26
    4118:	bf 93       	push	r27
    411a:	ef 93       	push	r30
    411c:	ff 93       	push	r31
	pennies++;
    411e:	80 91 78 00 	lds	r24, 0x0078
    4122:	8f 5f       	subi	r24, 0xFF	; 255
    4124:	80 93 78 00 	sts	0x0078, r24
	music_playSoundEffectBeep(&music); // MUSIC SOUND CHECK OK
    4128:	8d e7       	ldi	r24, 0x7D	; 125
    412a:	91 e0       	ldi	r25, 0x01	; 1
    412c:	0e 94 d3 2c 	call	0x59a6	; 0x59a6 <music_playSoundEffectBeep>
}
    4130:	ff 91       	pop	r31
    4132:	ef 91       	pop	r30
    4134:	bf 91       	pop	r27
    4136:	af 91       	pop	r26
    4138:	9f 91       	pop	r25
    413a:	8f 91       	pop	r24
    413c:	7f 91       	pop	r23
    413e:	6f 91       	pop	r22
    4140:	5f 91       	pop	r21
    4142:	4f 91       	pop	r20
    4144:	3f 91       	pop	r19
    4146:	2f 91       	pop	r18
    4148:	0f 90       	pop	r0
    414a:	0f be       	out	0x3f, r0	; 63
    414c:	0f 90       	pop	r0
    414e:	1f 90       	pop	r1
    4150:	18 95       	reti

00004152 <ledpong_step>:


int updateTick = 0;
void ledpong_step(LEDPong *ledpong)
{
    4152:	0f 93       	push	r16
    4154:	1f 93       	push	r17
    4156:	cf 93       	push	r28
    4158:	df 93       	push	r29
    415a:	00 d0       	rcall	.+0      	; 0x415c <ledpong_step+0xa>
    415c:	cd b7       	in	r28, 0x3d	; 61
    415e:	de b7       	in	r29, 0x3e	; 62
    4160:	9a 83       	std	Y+2, r25	; 0x02
    4162:	89 83       	std	Y+1, r24	; 0x01
	//get controller states
	wait_avr_ms(17); //we should call every 16.667ms //keep so ball doesn't move fast
    4164:	81 e1       	ldi	r24, 0x11	; 17
    4166:	90 e0       	ldi	r25, 0x00	; 0
    4168:	b1 dd       	rcall	.-1182   	; 0x3ccc <wait_avr_ms>
	ledpong->gamepad1 = nesctrlr_pollPlayer1();
    416a:	09 81       	ldd	r16, Y+1	; 0x01
    416c:	1a 81       	ldd	r17, Y+2	; 0x02
    416e:	6d d2       	rcall	.+1242   	; 0x464a <nesctrlr_pollPlayer1>
    4170:	f8 01       	movw	r30, r16
    4172:	e5 58       	subi	r30, 0x85	; 133
    4174:	ff 4f       	sbci	r31, 0xFF	; 255
    4176:	80 83       	st	Z, r24
	ledpong->gamepad2 = nesctrlr_pollPlayer2();
    4178:	09 81       	ldd	r16, Y+1	; 0x01
    417a:	1a 81       	ldd	r17, Y+2	; 0x02
    417c:	a2 d3       	rcall	.+1860   	; 0x48c2 <nesctrlr_pollPlayer2>
    417e:	f8 01       	movw	r30, r16
    4180:	e4 58       	subi	r30, 0x84	; 132
    4182:	ff 4f       	sbci	r31, 0xFF	; 255
    4184:	80 83       	st	Z, r24
	//nesctrlr_pollAll(&ledpong->gamepad1, &ledpong->gamepad2);
	//keypad_update(&ledpong->keypad);

	if (pennies >= 25) {
    4186:	80 91 78 00 	lds	r24, 0x0078
    418a:	89 31       	cpi	r24, 0x19	; 25
    418c:	c4 f0       	brlt	.+48     	; 0x41be <ledpong_step+0x6c>
		paidToPlay = 1;
    418e:	81 e0       	ldi	r24, 0x01	; 1
    4190:	90 e0       	ldi	r25, 0x00	; 0
    4192:	90 93 7a 00 	sts	0x007A, r25
    4196:	80 93 79 00 	sts	0x0079, r24
		//RGBmatrixPanel_drawPixel(&ledpong->matrix, 0, 0, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 7));
		pennies = 0;
    419a:	10 92 78 00 	sts	0x0078, r1
		ledpong->_playStates = PS_PLAYING;
    419e:	e9 81       	ldd	r30, Y+1	; 0x01
    41a0:	fa 81       	ldd	r31, Y+2	; 0x02
    41a2:	e9 56       	subi	r30, 0x69	; 105
    41a4:	ff 4f       	sbci	r31, 0xFF	; 255
    41a6:	82 e0       	ldi	r24, 0x02	; 2
    41a8:	90 e0       	ldi	r25, 0x00	; 0
    41aa:	91 83       	std	Z+1, r25	; 0x01
    41ac:	80 83       	st	Z, r24
		ledpong_resetPositions(&ledpong);
    41ae:	ce 01       	movw	r24, r28
    41b0:	01 96       	adiw	r24, 0x01	; 1
    41b2:	17 df       	rcall	.-466    	; 0x3fe2 <ledpong_resetPositions>
		ball_randomVelocity(&ledpong->ball);
    41b4:	89 81       	ldd	r24, Y+1	; 0x01
    41b6:	9a 81       	ldd	r25, Y+2	; 0x02
    41b8:	83 58       	subi	r24, 0x83	; 131
    41ba:	9f 4f       	sbci	r25, 0xFF	; 255
    41bc:	a0 dd       	rcall	.-1216   	; 0x3cfe <ball_randomVelocity>
		//RGBmatrixPanel_drawPixel(&ledpong->matrix, 2, 0, RGBmatrixPanel_Color333(&ledpong->matrix, 7, 0, 0));
	if (ledpong->gamepad1 & NES_BUTTON_P1_START)
		//RGBmatrixPanel_drawPixel(&ledpong->matrix, 3, 0, RGBmatrixPanel_Color333(&ledpong->matrix, 7, 7, 7));
	*/
		
	if (ledpong->gamepad1 & NES_BUTTON_P1_UP)
    41be:	89 81       	ldd	r24, Y+1	; 0x01
    41c0:	9a 81       	ldd	r25, Y+2	; 0x02
    41c2:	fc 01       	movw	r30, r24
    41c4:	e5 58       	subi	r30, 0x85	; 133
    41c6:	ff 4f       	sbci	r31, 0xFF	; 255
    41c8:	20 81       	ld	r18, Z
    41ca:	24 fd       	sbrc	r18, 4
		kp_ledpong_p1_paddle_move_left(ledpong);
    41cc:	be de       	rcall	.-644    	; 0x3f4a <kp_ledpong_p1_paddle_move_left>
	if (ledpong->gamepad1 & NES_BUTTON_P1_DOWN)
    41ce:	89 81       	ldd	r24, Y+1	; 0x01
    41d0:	9a 81       	ldd	r25, Y+2	; 0x02
    41d2:	fc 01       	movw	r30, r24
    41d4:	e5 58       	subi	r30, 0x85	; 133
    41d6:	ff 4f       	sbci	r31, 0xFF	; 255
    41d8:	20 81       	ld	r18, Z
    41da:	25 fd       	sbrc	r18, 5
		kp_ledpong_p1_paddle_move_right(ledpong);
    41dc:	c9 de       	rcall	.-622    	; 0x3f70 <kp_ledpong_p1_paddle_move_right>
	if (ledpong->gamepad1 & NES_BUTTON_P1_LEFT)
    41de:	89 81       	ldd	r24, Y+1	; 0x01
    41e0:	9a 81       	ldd	r25, Y+2	; 0x02
    41e2:	fc 01       	movw	r30, r24
    41e4:	e5 58       	subi	r30, 0x85	; 133
    41e6:	ff 4f       	sbci	r31, 0xFF	; 255
    41e8:	20 81       	ld	r18, Z
    41ea:	26 fd       	sbrc	r18, 6
		kp_ledpong_p1_paddle_move_left(ledpong);
    41ec:	ae de       	rcall	.-676    	; 0x3f4a <kp_ledpong_p1_paddle_move_left>
	if (ledpong->gamepad1 & NES_BUTTON_P1_RIGHT)
    41ee:	89 81       	ldd	r24, Y+1	; 0x01
    41f0:	9a 81       	ldd	r25, Y+2	; 0x02
    41f2:	fc 01       	movw	r30, r24
    41f4:	e5 58       	subi	r30, 0x85	; 133
    41f6:	ff 4f       	sbci	r31, 0xFF	; 255
    41f8:	20 81       	ld	r18, Z
    41fa:	22 23       	and	r18, r18
    41fc:	0c f4       	brge	.+2      	; 0x4200 <ledpong_step+0xae>
		kp_ledpong_p1_paddle_move_right(ledpong);
    41fe:	b8 de       	rcall	.-656    	; 0x3f70 <kp_ledpong_p1_paddle_move_right>

	if (ledpong->gamepad2 & NES_BUTTON_P2_A) //bugged
    4200:	89 81       	ldd	r24, Y+1	; 0x01
    4202:	9a 81       	ldd	r25, Y+2	; 0x02
    4204:	fc 01       	movw	r30, r24
    4206:	e4 58       	subi	r30, 0x84	; 132
    4208:	ff 4f       	sbci	r31, 0xFF	; 255
    420a:	20 81       	ld	r18, Z
    420c:	23 fd       	sbrc	r18, 3
		kp_ledpong_p2_paddle_move_left(ledpong);
    420e:	c3 de       	rcall	.-634    	; 0x3f96 <kp_ledpong_p2_paddle_move_left>
	if (ledpong->gamepad2 & NES_BUTTON_P2_B) //bugged
    4210:	89 81       	ldd	r24, Y+1	; 0x01
    4212:	9a 81       	ldd	r25, Y+2	; 0x02
    4214:	fc 01       	movw	r30, r24
    4216:	e4 58       	subi	r30, 0x84	; 132
    4218:	ff 4f       	sbci	r31, 0xFF	; 255
    421a:	20 81       	ld	r18, Z
    421c:	24 fd       	sbrc	r18, 4
		kp_ledpong_p2_paddle_move_right(ledpong);
    421e:	ce de       	rcall	.-612    	; 0x3fbc <kp_ledpong_p2_paddle_move_right>
	//if (ledpong->gamepad2 & NES_BUTTON_P2_LEFT)
	//	kp_ledpong_p2_paddle_move_left(ledpong);
	//if (ledpong->gamepad2 & NES_BUTTON_P2_RIGHT)
	//	kp_ledpong_p2_paddle_move_right(ledpong);

	if (ledpong->_playStates != PS_PLAYING)
    4220:	89 81       	ldd	r24, Y+1	; 0x01
    4222:	9a 81       	ldd	r25, Y+2	; 0x02
    4224:	fc 01       	movw	r30, r24
    4226:	e9 56       	subi	r30, 0x69	; 105
    4228:	ff 4f       	sbci	r31, 0xFF	; 255
    422a:	20 81       	ld	r18, Z
    422c:	31 81       	ldd	r19, Z+1	; 0x01
    422e:	22 30       	cpi	r18, 0x02	; 2
    4230:	31 05       	cpc	r19, r1
    4232:	09 f0       	breq	.+2      	; 0x4236 <ledpong_step+0xe4>
    4234:	05 c1       	rjmp	.+522    	; 0x4440 <ledpong_step+0x2ee>
		return;
	
	//move ball
//	if (updateTick % 2 == 0)
		ball_step(&ledpong->ball);
    4236:	83 58       	subi	r24, 0x83	; 131
    4238:	9f 4f       	sbci	r25, 0xFF	; 255
    423a:	97 dd       	rcall	.-1234   	; 0x3d6a <ball_step>
//	updateTick++;

	if (ledpong->had_collision)
    423c:	e9 81       	ldd	r30, Y+1	; 0x01
    423e:	fa 81       	ldd	r31, Y+2	; 0x02
    4240:	ea 56       	subi	r30, 0x6A	; 106
    4242:	ff 4f       	sbci	r31, 0xFF	; 255
    4244:	80 81       	ld	r24, Z
    4246:	88 23       	and	r24, r24
    4248:	49 f0       	breq	.+18     	; 0x425c <ledpong_step+0x10a>
	{
		music_playSoundEffectBeep(&music); // hit sound
    424a:	8d e7       	ldi	r24, 0x7D	; 125
    424c:	91 e0       	ldi	r25, 0x01	; 1
    424e:	0e 94 d3 2c 	call	0x59a6	; 0x59a6 <music_playSoundEffectBeep>
		ledpong->had_collision = 0;
    4252:	e9 81       	ldd	r30, Y+1	; 0x01
    4254:	fa 81       	ldd	r31, Y+2	; 0x02
    4256:	ea 56       	subi	r30, 0x6A	; 106
    4258:	ff 4f       	sbci	r31, 0xFF	; 255
    425a:	10 82       	st	Z, r1
	}
	
	//check collisions
	if (ledpong->ball.x < 0) //ball went left out of board and reward point
    425c:	89 81       	ldd	r24, Y+1	; 0x01
    425e:	9a 81       	ldd	r25, Y+2	; 0x02
    4260:	fc 01       	movw	r30, r24
    4262:	e3 58       	subi	r30, 0x83	; 131
    4264:	ff 4f       	sbci	r31, 0xFF	; 255
    4266:	20 81       	ld	r18, Z
    4268:	22 23       	and	r18, r18
    426a:	74 f4       	brge	.+28     	; 0x4288 <ledpong_step+0x136>
	{
		score_awardPoint(&ledpong->score[PLAYER_2]);
    426c:	8e 5a       	subi	r24, 0xAE	; 174
    426e:	9f 4f       	sbci	r25, 0xFF	; 255
    4270:	0e 94 54 2b 	call	0x56a8	; 0x56a8 <score_awardPoint>
		//play again
		ball_moveCenter(&ledpong->ball);
    4274:	89 81       	ldd	r24, Y+1	; 0x01
    4276:	9a 81       	ldd	r25, Y+2	; 0x02
    4278:	83 58       	subi	r24, 0x83	; 131
    427a:	9f 4f       	sbci	r25, 0xFF	; 255
    427c:	3a dd       	rcall	.-1420   	; 0x3cf2 <ball_moveCenter>
		ball_randomVelocity(&ledpong->ball);
    427e:	89 81       	ldd	r24, Y+1	; 0x01
    4280:	9a 81       	ldd	r25, Y+2	; 0x02
    4282:	83 58       	subi	r24, 0x83	; 131
    4284:	9f 4f       	sbci	r25, 0xFF	; 255
    4286:	3b dd       	rcall	.-1418   	; 0x3cfe <ball_randomVelocity>
	}
	
	if (ledpong->ball.x > 31) //ball went right out of board and reward point
    4288:	89 81       	ldd	r24, Y+1	; 0x01
    428a:	9a 81       	ldd	r25, Y+2	; 0x02
    428c:	fc 01       	movw	r30, r24
    428e:	e3 58       	subi	r30, 0x83	; 131
    4290:	ff 4f       	sbci	r31, 0xFF	; 255
    4292:	20 81       	ld	r18, Z
    4294:	20 32       	cpi	r18, 0x20	; 32
    4296:	74 f0       	brlt	.+28     	; 0x42b4 <ledpong_step+0x162>
	{
		score_awardPoint(&ledpong->score[PLAYER_1]);
    4298:	8f 5a       	subi	r24, 0xAF	; 175
    429a:	9f 4f       	sbci	r25, 0xFF	; 255
    429c:	0e 94 54 2b 	call	0x56a8	; 0x56a8 <score_awardPoint>
		//play again
		ball_moveCenter(&ledpong->ball);
    42a0:	89 81       	ldd	r24, Y+1	; 0x01
    42a2:	9a 81       	ldd	r25, Y+2	; 0x02
    42a4:	83 58       	subi	r24, 0x83	; 131
    42a6:	9f 4f       	sbci	r25, 0xFF	; 255
    42a8:	24 dd       	rcall	.-1464   	; 0x3cf2 <ball_moveCenter>
		ball_randomVelocity(&ledpong->ball);
    42aa:	89 81       	ldd	r24, Y+1	; 0x01
    42ac:	9a 81       	ldd	r25, Y+2	; 0x02
    42ae:	83 58       	subi	r24, 0x83	; 131
    42b0:	9f 4f       	sbci	r25, 0xFF	; 255
    42b2:	25 dd       	rcall	.-1462   	; 0x3cfe <ball_randomVelocity>
	}
	
	if (score_getPoints(&ledpong->score[PLAYER_1]) == 10)
    42b4:	89 81       	ldd	r24, Y+1	; 0x01
    42b6:	9a 81       	ldd	r25, Y+2	; 0x02
    42b8:	8f 5a       	subi	r24, 0xAF	; 175
    42ba:	9f 4f       	sbci	r25, 0xFF	; 255
    42bc:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <score_getPoints>
    42c0:	8a 30       	cpi	r24, 0x0A	; 10
    42c2:	41 f4       	brne	.+16     	; 0x42d4 <ledpong_step+0x182>
	{
		ledpong->_playStates = PS_WIN;
    42c4:	e9 81       	ldd	r30, Y+1	; 0x01
    42c6:	fa 81       	ldd	r31, Y+2	; 0x02
    42c8:	e9 56       	subi	r30, 0x69	; 105
    42ca:	ff 4f       	sbci	r31, 0xFF	; 255
    42cc:	83 e0       	ldi	r24, 0x03	; 3
    42ce:	90 e0       	ldi	r25, 0x00	; 0
    42d0:	91 83       	std	Z+1, r25	; 0x01
    42d2:	80 83       	st	Z, r24
	}
	
	if (score_getPoints(&ledpong->score[PLAYER_2]) == 10)
    42d4:	89 81       	ldd	r24, Y+1	; 0x01
    42d6:	9a 81       	ldd	r25, Y+2	; 0x02
    42d8:	8e 5a       	subi	r24, 0xAE	; 174
    42da:	9f 4f       	sbci	r25, 0xFF	; 255
    42dc:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <score_getPoints>
    42e0:	8a 30       	cpi	r24, 0x0A	; 10
    42e2:	41 f4       	brne	.+16     	; 0x42f4 <ledpong_step+0x1a2>
	{
		ledpong->_playStates = PS_WIN;
    42e4:	e9 81       	ldd	r30, Y+1	; 0x01
    42e6:	fa 81       	ldd	r31, Y+2	; 0x02
    42e8:	e9 56       	subi	r30, 0x69	; 105
    42ea:	ff 4f       	sbci	r31, 0xFF	; 255
    42ec:	83 e0       	ldi	r24, 0x03	; 3
    42ee:	90 e0       	ldi	r25, 0x00	; 0
    42f0:	91 83       	std	Z+1, r25	; 0x01
    42f2:	80 83       	st	Z, r24
	}		
	
	//ball hits top
	if (ledpong->ball.y <= 0)
    42f4:	89 81       	ldd	r24, Y+1	; 0x01
    42f6:	9a 81       	ldd	r25, Y+2	; 0x02
    42f8:	fc 01       	movw	r30, r24
    42fa:	e2 58       	subi	r30, 0x82	; 130
    42fc:	ff 4f       	sbci	r31, 0xFF	; 255
    42fe:	20 81       	ld	r18, Z
    4300:	12 16       	cp	r1, r18
    4302:	5c f0       	brlt	.+22     	; 0x431a <ledpong_step+0x1c8>
	{
		ledpong->ball.speedY *= -1;
    4304:	fc 01       	movw	r30, r24
    4306:	ee 57       	subi	r30, 0x7E	; 126
    4308:	ff 4f       	sbci	r31, 0xFF	; 255
    430a:	20 81       	ld	r18, Z
    430c:	21 95       	neg	r18
    430e:	20 83       	st	Z, r18
		ledpong->had_collision = 1;
    4310:	fc 01       	movw	r30, r24
    4312:	ea 56       	subi	r30, 0x6A	; 106
    4314:	ff 4f       	sbci	r31, 0xFF	; 255
    4316:	21 e0       	ldi	r18, 0x01	; 1
    4318:	20 83       	st	Z, r18
	}
	
	//ball hits bottom wall
	if (ledpong->ball.y >= 15)
    431a:	fc 01       	movw	r30, r24
    431c:	e2 58       	subi	r30, 0x82	; 130
    431e:	ff 4f       	sbci	r31, 0xFF	; 255
    4320:	20 81       	ld	r18, Z
    4322:	2f 30       	cpi	r18, 0x0F	; 15
    4324:	5c f0       	brlt	.+22     	; 0x433c <ledpong_step+0x1ea>
	{
		ledpong->ball.speedY *= -1;
    4326:	fc 01       	movw	r30, r24
    4328:	ee 57       	subi	r30, 0x7E	; 126
    432a:	ff 4f       	sbci	r31, 0xFF	; 255
    432c:	20 81       	ld	r18, Z
    432e:	21 95       	neg	r18
    4330:	20 83       	st	Z, r18
		ledpong->had_collision = 1;
    4332:	fc 01       	movw	r30, r24
    4334:	ea 56       	subi	r30, 0x6A	; 106
    4336:	ff 4f       	sbci	r31, 0xFF	; 255
    4338:	21 e0       	ldi	r18, 0x01	; 1
    433a:	20 83       	st	Z, r18
	}
	
	//ball hits left paddle
	if ((ledpong->ball.x >= ledpong->paddle1.x && ledpong->ball.x <= ledpong->paddle1.x + ledpong->paddle1.width ) &&
    433c:	fc 01       	movw	r30, r24
    433e:	e3 58       	subi	r30, 0x83	; 131
    4340:	ff 4f       	sbci	r31, 0xFF	; 255
    4342:	40 81       	ld	r20, Z
    4344:	fc 01       	movw	r30, r24
    4346:	eb 57       	subi	r30, 0x7B	; 123
    4348:	ff 4f       	sbci	r31, 0xFF	; 255
    434a:	60 81       	ld	r22, Z
    434c:	46 17       	cp	r20, r22
    434e:	bc f1       	brlt	.+110    	; 0x43be <ledpong_step+0x26c>
    4350:	55 27       	eor	r21, r21
    4352:	47 fd       	sbrc	r20, 7
    4354:	50 95       	com	r21
    4356:	fc 01       	movw	r30, r24
    4358:	e9 57       	subi	r30, 0x79	; 121
    435a:	ff 4f       	sbci	r31, 0xFF	; 255
    435c:	20 81       	ld	r18, Z
    435e:	33 27       	eor	r19, r19
    4360:	27 fd       	sbrc	r18, 7
    4362:	30 95       	com	r19
    4364:	26 0f       	add	r18, r22
    4366:	31 1d       	adc	r19, r1
    4368:	67 fd       	sbrc	r22, 7
    436a:	3a 95       	dec	r19
    436c:	24 17       	cp	r18, r20
    436e:	35 07       	cpc	r19, r21
    4370:	34 f1       	brlt	.+76     	; 0x43be <ledpong_step+0x26c>
	ledpong->ball.y > ledpong->paddle1.y && ledpong->ball.y < (ledpong->paddle1.y + ledpong->paddle1.height))
    4372:	fc 01       	movw	r30, r24
    4374:	e2 58       	subi	r30, 0x82	; 130
    4376:	ff 4f       	sbci	r31, 0xFF	; 255
    4378:	40 81       	ld	r20, Z
    437a:	fc 01       	movw	r30, r24
    437c:	ea 57       	subi	r30, 0x7A	; 122
    437e:	ff 4f       	sbci	r31, 0xFF	; 255
    4380:	60 81       	ld	r22, Z
		ledpong->ball.speedY *= -1;
		ledpong->had_collision = 1;
	}
	
	//ball hits left paddle
	if ((ledpong->ball.x >= ledpong->paddle1.x && ledpong->ball.x <= ledpong->paddle1.x + ledpong->paddle1.width ) &&
    4382:	64 17       	cp	r22, r20
    4384:	e4 f4       	brge	.+56     	; 0x43be <ledpong_step+0x26c>
	ledpong->ball.y > ledpong->paddle1.y && ledpong->ball.y < (ledpong->paddle1.y + ledpong->paddle1.height))
    4386:	55 27       	eor	r21, r21
    4388:	47 fd       	sbrc	r20, 7
    438a:	50 95       	com	r21
    438c:	fc 01       	movw	r30, r24
    438e:	e8 57       	subi	r30, 0x78	; 120
    4390:	ff 4f       	sbci	r31, 0xFF	; 255
    4392:	20 81       	ld	r18, Z
    4394:	33 27       	eor	r19, r19
    4396:	27 fd       	sbrc	r18, 7
    4398:	30 95       	com	r19
    439a:	26 0f       	add	r18, r22
    439c:	31 1d       	adc	r19, r1
    439e:	67 fd       	sbrc	r22, 7
    43a0:	3a 95       	dec	r19
    43a2:	42 17       	cp	r20, r18
    43a4:	53 07       	cpc	r21, r19
    43a6:	5c f4       	brge	.+22     	; 0x43be <ledpong_step+0x26c>
	{
		ledpong->ball.speedX *= -1;
    43a8:	fc 01       	movw	r30, r24
    43aa:	ef 57       	subi	r30, 0x7F	; 127
    43ac:	ff 4f       	sbci	r31, 0xFF	; 255
    43ae:	20 81       	ld	r18, Z
    43b0:	21 95       	neg	r18
    43b2:	20 83       	st	Z, r18
		ledpong->had_collision = 1;
    43b4:	fc 01       	movw	r30, r24
    43b6:	ea 56       	subi	r30, 0x6A	; 106
    43b8:	ff 4f       	sbci	r31, 0xFF	; 255
    43ba:	21 e0       	ldi	r18, 0x01	; 1
    43bc:	20 83       	st	Z, r18
	}
	
	//ball hits right paddle
	if ((ledpong->ball.x >= ledpong->paddle2.x && ledpong->ball.x <= ledpong->paddle2.x + ledpong->paddle2.width ) &&
    43be:	fc 01       	movw	r30, r24
    43c0:	e3 58       	subi	r30, 0x83	; 131
    43c2:	ff 4f       	sbci	r31, 0xFF	; 255
    43c4:	40 81       	ld	r20, Z
    43c6:	fc 01       	movw	r30, r24
    43c8:	e3 57       	subi	r30, 0x73	; 115
    43ca:	ff 4f       	sbci	r31, 0xFF	; 255
    43cc:	60 81       	ld	r22, Z
    43ce:	46 17       	cp	r20, r22
    43d0:	bc f1       	brlt	.+110    	; 0x4440 <ledpong_step+0x2ee>
    43d2:	55 27       	eor	r21, r21
    43d4:	47 fd       	sbrc	r20, 7
    43d6:	50 95       	com	r21
    43d8:	fc 01       	movw	r30, r24
    43da:	e1 57       	subi	r30, 0x71	; 113
    43dc:	ff 4f       	sbci	r31, 0xFF	; 255
    43de:	20 81       	ld	r18, Z
    43e0:	33 27       	eor	r19, r19
    43e2:	27 fd       	sbrc	r18, 7
    43e4:	30 95       	com	r19
    43e6:	26 0f       	add	r18, r22
    43e8:	31 1d       	adc	r19, r1
    43ea:	67 fd       	sbrc	r22, 7
    43ec:	3a 95       	dec	r19
    43ee:	24 17       	cp	r18, r20
    43f0:	35 07       	cpc	r19, r21
    43f2:	34 f1       	brlt	.+76     	; 0x4440 <ledpong_step+0x2ee>
	ledpong->ball.y > ledpong->paddle2.y && ledpong->ball.y < (ledpong->paddle2.y + ledpong->paddle2.height))
    43f4:	fc 01       	movw	r30, r24
    43f6:	e2 58       	subi	r30, 0x82	; 130
    43f8:	ff 4f       	sbci	r31, 0xFF	; 255
    43fa:	40 81       	ld	r20, Z
    43fc:	fc 01       	movw	r30, r24
    43fe:	e2 57       	subi	r30, 0x72	; 114
    4400:	ff 4f       	sbci	r31, 0xFF	; 255
    4402:	60 81       	ld	r22, Z
		ledpong->ball.speedX *= -1;
		ledpong->had_collision = 1;
	}
	
	//ball hits right paddle
	if ((ledpong->ball.x >= ledpong->paddle2.x && ledpong->ball.x <= ledpong->paddle2.x + ledpong->paddle2.width ) &&
    4404:	64 17       	cp	r22, r20
    4406:	e4 f4       	brge	.+56     	; 0x4440 <ledpong_step+0x2ee>
	ledpong->ball.y > ledpong->paddle2.y && ledpong->ball.y < (ledpong->paddle2.y + ledpong->paddle2.height))
    4408:	55 27       	eor	r21, r21
    440a:	47 fd       	sbrc	r20, 7
    440c:	50 95       	com	r21
    440e:	fc 01       	movw	r30, r24
    4410:	e0 57       	subi	r30, 0x70	; 112
    4412:	ff 4f       	sbci	r31, 0xFF	; 255
    4414:	20 81       	ld	r18, Z
    4416:	33 27       	eor	r19, r19
    4418:	27 fd       	sbrc	r18, 7
    441a:	30 95       	com	r19
    441c:	26 0f       	add	r18, r22
    441e:	31 1d       	adc	r19, r1
    4420:	67 fd       	sbrc	r22, 7
    4422:	3a 95       	dec	r19
    4424:	42 17       	cp	r20, r18
    4426:	53 07       	cpc	r21, r19
    4428:	5c f4       	brge	.+22     	; 0x4440 <ledpong_step+0x2ee>
	{
		ledpong->ball.speedX *= -1;
    442a:	fc 01       	movw	r30, r24
    442c:	ef 57       	subi	r30, 0x7F	; 127
    442e:	ff 4f       	sbci	r31, 0xFF	; 255
    4430:	20 81       	ld	r18, Z
    4432:	21 95       	neg	r18
    4434:	20 83       	st	Z, r18
		ledpong->had_collision = 1;
    4436:	fc 01       	movw	r30, r24
    4438:	ea 56       	subi	r30, 0x6A	; 106
    443a:	ff 4f       	sbci	r31, 0xFF	; 255
    443c:	21 e0       	ldi	r18, 0x01	; 1
    443e:	20 83       	st	Z, r18
	}
}
    4440:	0f 90       	pop	r0
    4442:	0f 90       	pop	r0
    4444:	df 91       	pop	r29
    4446:	cf 91       	pop	r28
    4448:	1f 91       	pop	r17
    444a:	0f 91       	pop	r16
    444c:	08 95       	ret

0000444e <ledpong_render>:

int titleScreenState = 1;
int frames = 0;
void ledpong_render(LEDPong *ledpong)
{
    444e:	cf 93       	push	r28
    4450:	df 93       	push	r29
    4452:	ec 01       	movw	r28, r24
	if (ledpong->_playStates == PS_BOOT)
    4454:	fc 01       	movw	r30, r24
    4456:	e9 56       	subi	r30, 0x69	; 105
    4458:	ff 4f       	sbci	r31, 0xFF	; 255
    445a:	80 81       	ld	r24, Z
    445c:	91 81       	ldd	r25, Z+1	; 0x01
    445e:	00 97       	sbiw	r24, 0x00	; 0
    4460:	c9 f4       	brne	.+50     	; 0x4494 <ledpong_render+0x46>
	{
		RGBmatrixPanel_fillScreen(&ledpong->matrix, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 0));
    4462:	20 e0       	ldi	r18, 0x00	; 0
    4464:	40 e0       	ldi	r20, 0x00	; 0
    4466:	60 e0       	ldi	r22, 0x00	; 0
    4468:	8c 2f       	mov	r24, r28
    446a:	9d 2f       	mov	r25, r29
    446c:	e7 d6       	rcall	.+3534   	; 0x523c <RGBmatrixPanel_Color333>
    446e:	bc 01       	movw	r22, r24
    4470:	8c 2f       	mov	r24, r28
    4472:	9d 2f       	mov	r25, r29
    4474:	0b d5       	rcall	.+2582   	; 0x4e8c <RGBmatrixPanel_fillScreen>
		ledpong_drawArt(&ledpong->matrix, &image_peterAnteater);
    4476:	60 e8       	ldi	r22, 0x80	; 128
    4478:	7f e2       	ldi	r23, 0x2F	; 47
    447a:	ce 01       	movw	r24, r28
    447c:	95 dc       	rcall	.-1750   	; 0x3da8 <ledpong_drawArt>
		wait_avr_ms(2000);
    447e:	80 ed       	ldi	r24, 0xD0	; 208
    4480:	97 e0       	ldi	r25, 0x07	; 7
    4482:	24 dc       	rcall	.-1976   	; 0x3ccc <wait_avr_ms>
		ledpong->_playStates = PS_PAYME;
    4484:	fe 01       	movw	r30, r28
    4486:	e9 56       	subi	r30, 0x69	; 105
    4488:	ff 4f       	sbci	r31, 0xFF	; 255
    448a:	81 e0       	ldi	r24, 0x01	; 1
    448c:	90 e0       	ldi	r25, 0x00	; 0
    448e:	91 83       	std	Z+1, r25	; 0x01
    4490:	80 83       	st	Z, r24
    4492:	04 c0       	rjmp	.+8      	; 0x449c <ledpong_render+0x4e>
	}
	if (ledpong->_playStates == PS_PAYME)
    4494:	81 30       	cpi	r24, 0x01	; 1
    4496:	91 05       	cpc	r25, r1
    4498:	09 f0       	breq	.+2      	; 0x449c <ledpong_render+0x4e>
    449a:	45 c0       	rjmp	.+138    	; 0x4526 <ledpong_render+0xd8>
	{
		//ledpong_drawArt(&ledpong->matrix, &image_peterAnteater);
		if (paidToPlay == 0 && !(frames % 1000))
    449c:	80 91 79 00 	lds	r24, 0x0079
    44a0:	90 91 7a 00 	lds	r25, 0x007A
    44a4:	89 2b       	or	r24, r25
    44a6:	a9 f5       	brne	.+106    	; 0x4512 <ledpong_render+0xc4>
    44a8:	80 91 76 00 	lds	r24, 0x0076
    44ac:	90 91 77 00 	lds	r25, 0x0077
    44b0:	68 ee       	ldi	r22, 0xE8	; 232
    44b2:	73 e0       	ldi	r23, 0x03	; 3
    44b4:	0e 94 e6 2c 	call	0x59cc	; 0x59cc <__divmodhi4>
    44b8:	89 2b       	or	r24, r25
    44ba:	59 f5       	brne	.+86     	; 0x4512 <ledpong_render+0xc4>
		{
			RGBmatrixPanel_fillScreen(&ledpong->matrix, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 0));
    44bc:	20 e0       	ldi	r18, 0x00	; 0
    44be:	40 e0       	ldi	r20, 0x00	; 0
    44c0:	60 e0       	ldi	r22, 0x00	; 0
    44c2:	8c 2f       	mov	r24, r28
    44c4:	9d 2f       	mov	r25, r29
    44c6:	ba d6       	rcall	.+3444   	; 0x523c <RGBmatrixPanel_Color333>
    44c8:	bc 01       	movw	r22, r24
    44ca:	8c 2f       	mov	r24, r28
    44cc:	9d 2f       	mov	r25, r29
    44ce:	de d4       	rcall	.+2492   	; 0x4e8c <RGBmatrixPanel_fillScreen>
			if (titleScreenState)
    44d0:	80 91 6a 00 	lds	r24, 0x006A
    44d4:	90 91 6b 00 	lds	r25, 0x006B
    44d8:	89 2b       	or	r24, r25
    44da:	29 f0       	breq	.+10     	; 0x44e6 <ledpong_render+0x98>
				ledpong_drawArt(&ledpong->matrix, &image_titleScreen);
    44dc:	6f e4       	ldi	r22, 0x4F	; 79
    44de:	75 e0       	ldi	r23, 0x05	; 5
    44e0:	ce 01       	movw	r24, r28
    44e2:	62 dc       	rcall	.-1852   	; 0x3da8 <ledpong_drawArt>
    44e4:	04 c0       	rjmp	.+8      	; 0x44ee <ledpong_render+0xa0>
			else
				ledpong_drawArt(&ledpong->matrix, &image_insertCoin);
    44e6:	69 e7       	ldi	r22, 0x79	; 121
    44e8:	79 e2       	ldi	r23, 0x29	; 41
    44ea:	ce 01       	movw	r24, r28
    44ec:	5d dc       	rcall	.-1862   	; 0x3da8 <ledpong_drawArt>
			titleScreenState = !titleScreenState;
    44ee:	81 e0       	ldi	r24, 0x01	; 1
    44f0:	90 e0       	ldi	r25, 0x00	; 0
    44f2:	20 91 6a 00 	lds	r18, 0x006A
    44f6:	30 91 6b 00 	lds	r19, 0x006B
    44fa:	23 2b       	or	r18, r19
    44fc:	11 f0       	breq	.+4      	; 0x4502 <ledpong_render+0xb4>
    44fe:	80 e0       	ldi	r24, 0x00	; 0
    4500:	90 e0       	ldi	r25, 0x00	; 0
    4502:	90 93 6b 00 	sts	0x006B, r25
    4506:	80 93 6a 00 	sts	0x006A, r24
			wait_avr_ms(1000);
    450a:	88 ee       	ldi	r24, 0xE8	; 232
    450c:	93 e0       	ldi	r25, 0x03	; 3
    450e:	de db       	rcall	.-2116   	; 0x3ccc <wait_avr_ms>
			//music_playNyanCat(&music);
			return;
    4510:	88 c0       	rjmp	.+272    	; 0x4622 <ledpong_render+0x1d4>
		}
		frames++;
    4512:	80 91 76 00 	lds	r24, 0x0076
    4516:	90 91 77 00 	lds	r25, 0x0077
    451a:	01 96       	adiw	r24, 0x01	; 1
    451c:	90 93 77 00 	sts	0x0077, r25
    4520:	80 93 76 00 	sts	0x0076, r24
    4524:	20 c0       	rjmp	.+64     	; 0x4566 <ledpong_render+0x118>
		
	}
	if (ledpong->_playStates == PS_PLAYING)
    4526:	02 97       	sbiw	r24, 0x02	; 2
    4528:	f1 f4       	brne	.+60     	; 0x4566 <ledpong_render+0x118>
	{
		//paint background
		RGBmatrixPanel_fillScreen(&ledpong->matrix, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 0));
    452a:	20 e0       	ldi	r18, 0x00	; 0
    452c:	40 e0       	ldi	r20, 0x00	; 0
    452e:	60 e0       	ldi	r22, 0x00	; 0
    4530:	8c 2f       	mov	r24, r28
    4532:	9d 2f       	mov	r25, r29
    4534:	83 d6       	rcall	.+3334   	; 0x523c <RGBmatrixPanel_Color333>
    4536:	bc 01       	movw	r22, r24
    4538:	8c 2f       	mov	r24, r28
    453a:	9d 2f       	mov	r25, r29
    453c:	a7 d4       	rcall	.+2382   	; 0x4e8c <RGBmatrixPanel_fillScreen>

		//paint score
		ledpong_renderScores(ledpong);
    453e:	ce 01       	movw	r24, r28
    4540:	90 dc       	rcall	.-1760   	; 0x3e62 <ledpong_renderScores>

		//paint paddles
		paddle_render(&ledpong->matrix, &ledpong->paddle1);
    4542:	be 01       	movw	r22, r28
    4544:	6b 57       	subi	r22, 0x7B	; 123
    4546:	7f 4f       	sbci	r23, 0xFF	; 255
    4548:	8c 2f       	mov	r24, r28
    454a:	9d 2f       	mov	r25, r29
    454c:	ff d2       	rcall	.+1534   	; 0x4b4c <paddle_render>
		paddle_render(&ledpong->matrix, &ledpong->paddle2);
    454e:	be 01       	movw	r22, r28
    4550:	63 57       	subi	r22, 0x73	; 115
    4552:	7f 4f       	sbci	r23, 0xFF	; 255
    4554:	8c 2f       	mov	r24, r28
    4556:	9d 2f       	mov	r25, r29
    4558:	f9 d2       	rcall	.+1522   	; 0x4b4c <paddle_render>

		//paint ball
		ball_render(&ledpong->matrix, &ledpong->ball);
    455a:	be 01       	movw	r22, r28
    455c:	63 58       	subi	r22, 0x83	; 131
    455e:	7f 4f       	sbci	r23, 0xFF	; 255
    4560:	8c 2f       	mov	r24, r28
    4562:	9d 2f       	mov	r25, r29
    4564:	0c dc       	rcall	.-2024   	; 0x3d7e <ball_render>
	}
	if (ledpong->_playStates == PS_WIN)
    4566:	fe 01       	movw	r30, r28
    4568:	e9 56       	subi	r30, 0x69	; 105
    456a:	ff 4f       	sbci	r31, 0xFF	; 255
    456c:	80 81       	ld	r24, Z
    456e:	91 81       	ldd	r25, Z+1	; 0x01
    4570:	03 97       	sbiw	r24, 0x03	; 3
    4572:	09 f0       	breq	.+2      	; 0x4576 <ledpong_render+0x128>
    4574:	56 c0       	rjmp	.+172    	; 0x4622 <ledpong_render+0x1d4>
	{
		if (score_getPoints(&ledpong->score[PLAYER_1]) == 10)
    4576:	ce 01       	movw	r24, r28
    4578:	8f 5a       	subi	r24, 0xAF	; 175
    457a:	9f 4f       	sbci	r25, 0xFF	; 255
    457c:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <score_getPoints>
    4580:	8a 30       	cpi	r24, 0x0A	; 10
    4582:	99 f4       	brne	.+38     	; 0x45aa <ledpong_render+0x15c>
		{
			RGBmatrixPanel_fillScreen(&ledpong->matrix, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 0));
    4584:	20 e0       	ldi	r18, 0x00	; 0
    4586:	40 e0       	ldi	r20, 0x00	; 0
    4588:	60 e0       	ldi	r22, 0x00	; 0
    458a:	8c 2f       	mov	r24, r28
    458c:	9d 2f       	mov	r25, r29
    458e:	56 d6       	rcall	.+3244   	; 0x523c <RGBmatrixPanel_Color333>
    4590:	bc 01       	movw	r22, r24
    4592:	8c 2f       	mov	r24, r28
    4594:	9d 2f       	mov	r25, r29
    4596:	7a d4       	rcall	.+2292   	; 0x4e8c <RGBmatrixPanel_fillScreen>
			ledpong_drawArt(&ledpong->matrix, &image_winPlayer1);
    4598:	62 e7       	ldi	r22, 0x72	; 114
    459a:	73 e2       	ldi	r23, 0x23	; 35
    459c:	ce 01       	movw	r24, r28
    459e:	04 dc       	rcall	.-2040   	; 0x3da8 <ledpong_drawArt>
			music_playGreenSleeves(&music); // winning sound
    45a0:	8d e7       	ldi	r24, 0x7D	; 125
    45a2:	91 e0       	ldi	r25, 0x01	; 1
    45a4:	0e 94 2f 2c 	call	0x585e	; 0x585e <music_playGreenSleeves>
    45a8:	19 c0       	rjmp	.+50     	; 0x45dc <ledpong_render+0x18e>

		}
		else if (score_getPoints(&ledpong->score[PLAYER_2]) == 10)
    45aa:	ce 01       	movw	r24, r28
    45ac:	8e 5a       	subi	r24, 0xAE	; 174
    45ae:	9f 4f       	sbci	r25, 0xFF	; 255
    45b0:	0e 94 59 2b 	call	0x56b2	; 0x56b2 <score_getPoints>
    45b4:	8a 30       	cpi	r24, 0x0A	; 10
    45b6:	91 f4       	brne	.+36     	; 0x45dc <ledpong_render+0x18e>
		{
			RGBmatrixPanel_fillScreen(&ledpong->matrix, RGBmatrixPanel_Color333(&ledpong->matrix, 0, 0, 0));
    45b8:	20 e0       	ldi	r18, 0x00	; 0
    45ba:	40 e0       	ldi	r20, 0x00	; 0
    45bc:	60 e0       	ldi	r22, 0x00	; 0
    45be:	8c 2f       	mov	r24, r28
    45c0:	9d 2f       	mov	r25, r29
    45c2:	3c d6       	rcall	.+3192   	; 0x523c <RGBmatrixPanel_Color333>
    45c4:	bc 01       	movw	r22, r24
    45c6:	8c 2f       	mov	r24, r28
    45c8:	9d 2f       	mov	r25, r29
    45ca:	60 d4       	rcall	.+2240   	; 0x4e8c <RGBmatrixPanel_fillScreen>
			ledpong_drawArt(&ledpong->matrix, &image_winPlayer2);
    45cc:	6b e6       	ldi	r22, 0x6B	; 107
    45ce:	7d e1       	ldi	r23, 0x1D	; 29
    45d0:	ce 01       	movw	r24, r28
    45d2:	ea db       	rcall	.-2092   	; 0x3da8 <ledpong_drawArt>
			music_playGreenSleeves(&music); // winning sound
    45d4:	8d e7       	ldi	r24, 0x7D	; 125
    45d6:	91 e0       	ldi	r25, 0x01	; 1
    45d8:	0e 94 2f 2c 	call	0x585e	; 0x585e <music_playGreenSleeves>
		}
		ledpong_drawArt(&ledpong->matrix, &image_credits);
    45dc:	64 e6       	ldi	r22, 0x64	; 100
    45de:	77 e1       	ldi	r23, 0x17	; 23
    45e0:	ce 01       	movw	r24, r28
    45e2:	e2 db       	rcall	.-2108   	; 0x3da8 <ledpong_drawArt>
		wait_avr_ms(2000);
    45e4:	80 ed       	ldi	r24, 0xD0	; 208
    45e6:	97 e0       	ldi	r25, 0x07	; 7
    45e8:	71 db       	rcall	.-2334   	; 0x3ccc <wait_avr_ms>
		ledpong_drawArt(&ledpong->matrix, &image_orson);
    45ea:	6d e5       	ldi	r22, 0x5D	; 93
    45ec:	71 e1       	ldi	r23, 0x11	; 17
    45ee:	ce 01       	movw	r24, r28
    45f0:	db db       	rcall	.-2122   	; 0x3da8 <ledpong_drawArt>
		wait_avr_ms(2000);
    45f2:	80 ed       	ldi	r24, 0xD0	; 208
    45f4:	97 e0       	ldi	r25, 0x07	; 7
    45f6:	6a db       	rcall	.-2348   	; 0x3ccc <wait_avr_ms>
		ledpong_drawArt(&ledpong->matrix, &image_derek);
    45f8:	66 e5       	ldi	r22, 0x56	; 86
    45fa:	7b e0       	ldi	r23, 0x0B	; 11
    45fc:	ce 01       	movw	r24, r28
    45fe:	d4 db       	rcall	.-2136   	; 0x3da8 <ledpong_drawArt>
		wait_avr_ms(2000);
    4600:	80 ed       	ldi	r24, 0xD0	; 208
    4602:	97 e0       	ldi	r25, 0x07	; 7
    4604:	63 db       	rcall	.-2362   	; 0x3ccc <wait_avr_ms>
		paidToPlay = 0;
    4606:	10 92 7a 00 	sts	0x007A, r1
    460a:	10 92 79 00 	sts	0x0079, r1
		pennies = 0;
    460e:	10 92 78 00 	sts	0x0078, r1
		ledpong_resetScore(ledpong);
    4612:	ce 01       	movw	r24, r28
    4614:	91 dc       	rcall	.-1758   	; 0x3f38 <ledpong_resetScore>
		ledpong->_playStates = PS_PAYME;
    4616:	c9 56       	subi	r28, 0x69	; 105
    4618:	df 4f       	sbci	r29, 0xFF	; 255
    461a:	81 e0       	ldi	r24, 0x01	; 1
    461c:	90 e0       	ldi	r25, 0x00	; 0
    461e:	99 83       	std	Y+1, r25	; 0x01
    4620:	88 83       	st	Y, r24
	}
}
    4622:	df 91       	pop	r29
    4624:	cf 91       	pop	r28
    4626:	08 95       	ret

00004628 <main>:
}

int main(void)
{
	// *** TEST LEDPONG ***
	ledpong_init(&ledpong);
    4628:	8b ea       	ldi	r24, 0xAB	; 171
    462a:	91 e0       	ldi	r25, 0x01	; 1
    462c:	ef dc       	rcall	.-1570   	; 0x400c <ledpong_init>
	
	for (;;)
	{
		ledpong_step(&ledpong);
    462e:	8b ea       	ldi	r24, 0xAB	; 171
    4630:	91 e0       	ldi	r25, 0x01	; 1
    4632:	8f dd       	rcall	.-1250   	; 0x4152 <ledpong_step>
		ledpong_render(&ledpong);
    4634:	8b ea       	ldi	r24, 0xAB	; 171
    4636:	91 e0       	ldi	r25, 0x01	; 1
    4638:	0a df       	rcall	.-492    	; 0x444e <ledpong_render>
    463a:	f9 cf       	rjmp	.-14     	; 0x462e <main+0x6>

0000463c <nesctrlr_init>:
		state2 |= b2 << i;
	}

	*player1 = ~state1;
	*player2 = ~state2;
}
    463c:	d2 9a       	sbi	0x1a, 2	; 26
    463e:	d1 9a       	sbi	0x1a, 1	; 26
    4640:	d0 98       	cbi	0x1a, 0	; 26
    4642:	d5 9a       	sbi	0x1a, 5	; 26
    4644:	d4 9a       	sbi	0x1a, 4	; 26
    4646:	d3 98       	cbi	0x1a, 3	; 26
    4648:	08 95       	ret

0000464a <nesctrlr_pollPlayer1>:
//call this every 16.1667ms
NESController nesctrlr_pollPlayer1()
{
	unsigned char state = 0;
	
	CLR_BIT(PORTA, 2);
    464a:	da 98       	cbi	0x1b, 2	; 27
	SET_BIT(PORTA, 1);
    464c:	d9 9a       	sbi	0x1b, 1	; 27
	...
	sleep_12ns();
	CLR_BIT(PORTA, 1);
    470e:	d9 98       	cbi	0x1b, 1	; 27
	
	for (int i=0;i<8;i++)
    4710:	20 e0       	ldi	r18, 0x00	; 0
    4712:	30 e0       	ldi	r19, 0x00	; 0


//call this every 16.1667ms
NESController nesctrlr_pollPlayer1()
{
	unsigned char state = 0;
    4714:	80 e0       	ldi	r24, 0x00	; 0
	sleep_12ns();
	CLR_BIT(PORTA, 1);
	
	for (int i=0;i<8;i++)
	{
		unsigned char b = GET_BIT(PINA, 0);
    4716:	99 b3       	in	r25, 0x19	; 25
	...
		sleep_12ns();
		SET_BIT(PORTA, 2);
    47d8:	da 9a       	sbi	0x1b, 2	; 27
	...
		sleep_12ns();
		CLR_BIT(PORTA, 2);
    489a:	da 98       	cbi	0x1b, 2	; 27
		state |= b << i;
    489c:	49 2f       	mov	r20, r25
    489e:	41 70       	andi	r20, 0x01	; 1
    48a0:	50 e0       	ldi	r21, 0x00	; 0
    48a2:	ba 01       	movw	r22, r20
    48a4:	02 2e       	mov	r0, r18
    48a6:	02 c0       	rjmp	.+4      	; 0x48ac <nesctrlr_pollPlayer1+0x262>
    48a8:	66 0f       	add	r22, r22
    48aa:	77 1f       	adc	r23, r23
    48ac:	0a 94       	dec	r0
    48ae:	e2 f7       	brpl	.-8      	; 0x48a8 <nesctrlr_pollPlayer1+0x25e>
    48b0:	86 2b       	or	r24, r22
	CLR_BIT(PORTA, 2);
	SET_BIT(PORTA, 1);
	sleep_12ns();
	CLR_BIT(PORTA, 1);
	
	for (int i=0;i<8;i++)
    48b2:	2f 5f       	subi	r18, 0xFF	; 255
    48b4:	3f 4f       	sbci	r19, 0xFF	; 255
    48b6:	28 30       	cpi	r18, 0x08	; 8
    48b8:	31 05       	cpc	r19, r1
    48ba:	09 f0       	breq	.+2      	; 0x48be <nesctrlr_pollPlayer1+0x274>
    48bc:	2c cf       	rjmp	.-424    	; 0x4716 <nesctrlr_pollPlayer1+0xcc>
		CLR_BIT(PORTA, 2);
		state |= b << i;
	}

	return ~state;
}
    48be:	80 95       	com	r24
    48c0:	08 95       	ret

000048c2 <nesctrlr_pollPlayer2>:
//call this every 16.1667ms
NESController nesctrlr_pollPlayer2()
{
	unsigned char state = 0;
	
	CLR_BIT(PORTA, 5);
    48c2:	dd 98       	cbi	0x1b, 5	; 27
	SET_BIT(PORTA, 4);
    48c4:	dc 9a       	sbi	0x1b, 4	; 27
	...
	sleep_12ns();
	CLR_BIT(PORTA, 4);
    4986:	dc 98       	cbi	0x1b, 4	; 27
	
	for (int i=0;i<8;i++)
    4988:	20 e0       	ldi	r18, 0x00	; 0
    498a:	30 e0       	ldi	r19, 0x00	; 0
}

//call this every 16.1667ms
NESController nesctrlr_pollPlayer2()
{
	unsigned char state = 0;
    498c:	80 e0       	ldi	r24, 0x00	; 0
	sleep_12ns();
	CLR_BIT(PORTA, 4);
	
	for (int i=0;i<8;i++)
	{
		unsigned char b = GET_BIT(PINA, 3);
    498e:	49 b3       	in	r20, 0x19	; 25
	...
		sleep_12ns();
		SET_BIT(PORTA, 5);
    4a50:	dd 9a       	sbi	0x1b, 5	; 27
	...
		sleep_12ns();
		CLR_BIT(PORTA, 5);
    4b12:	dd 98       	cbi	0x1b, 5	; 27
	sleep_12ns();
	CLR_BIT(PORTA, 4);
	
	for (int i=0;i<8;i++)
	{
		unsigned char b = GET_BIT(PINA, 3);
    4b14:	48 70       	andi	r20, 0x08	; 8
		sleep_12ns();
		SET_BIT(PORTA, 5);
		sleep_12ns();
		CLR_BIT(PORTA, 5);
		state |= b << i;
    4b16:	50 e0       	ldi	r21, 0x00	; 0
    4b18:	02 2e       	mov	r0, r18
    4b1a:	02 c0       	rjmp	.+4      	; 0x4b20 <nesctrlr_pollPlayer2+0x25e>
    4b1c:	44 0f       	add	r20, r20
    4b1e:	55 1f       	adc	r21, r21
    4b20:	0a 94       	dec	r0
    4b22:	e2 f7       	brpl	.-8      	; 0x4b1c <nesctrlr_pollPlayer2+0x25a>
    4b24:	84 2b       	or	r24, r20
	CLR_BIT(PORTA, 5);
	SET_BIT(PORTA, 4);
	sleep_12ns();
	CLR_BIT(PORTA, 4);
	
	for (int i=0;i<8;i++)
    4b26:	2f 5f       	subi	r18, 0xFF	; 255
    4b28:	3f 4f       	sbci	r19, 0xFF	; 255
    4b2a:	28 30       	cpi	r18, 0x08	; 8
    4b2c:	31 05       	cpc	r19, r1
    4b2e:	09 f0       	breq	.+2      	; 0x4b32 <nesctrlr_pollPlayer2+0x270>
    4b30:	2e cf       	rjmp	.-420    	; 0x498e <nesctrlr_pollPlayer2+0xcc>
	//stateB = state;
	//state |= (~stateA) & 0xF8;
	//state |= stateB & 0x07;
	
	return state;
}
    4b32:	08 95       	ret

00004b34 <paddle_setColor>:

char paddle_getPosition(Paddle *paddle, char *x, char *y)
{
	*x = paddle->x;
	*y = paddle->y;
}
    4b34:	fc 01       	movw	r30, r24
    4b36:	75 83       	std	Z+5, r23	; 0x05
    4b38:	64 83       	std	Z+4, r22	; 0x04
    4b3a:	08 95       	ret

00004b3c <paddle_setExtent>:
    4b3c:	fc 01       	movw	r30, r24
    4b3e:	62 83       	std	Z+2, r22	; 0x02
    4b40:	43 83       	std	Z+3, r20	; 0x03
    4b42:	08 95       	ret

00004b44 <paddle_setPosition>:
    4b44:	fc 01       	movw	r30, r24
    4b46:	60 83       	st	Z, r22
    4b48:	41 83       	std	Z+1, r20	; 0x01
    4b4a:	08 95       	ret

00004b4c <paddle_render>:

void paddle_render(RGBmatrixPanel *matrix, Paddle *paddle)
{
    4b4c:	ef 92       	push	r14
    4b4e:	ff 92       	push	r15
    4b50:	0f 93       	push	r16
    4b52:	1f 93       	push	r17
    4b54:	fb 01       	movw	r30, r22
	Adafruit_GFX_drawRect(matrix, paddle->x, paddle->y, paddle->width, paddle->height, paddle->color);
    4b56:	e4 80       	ldd	r14, Z+4	; 0x04
    4b58:	f5 80       	ldd	r15, Z+5	; 0x05
    4b5a:	03 81       	ldd	r16, Z+3	; 0x03
    4b5c:	11 27       	eor	r17, r17
    4b5e:	07 fd       	sbrc	r16, 7
    4b60:	10 95       	com	r17
    4b62:	22 81       	ldd	r18, Z+2	; 0x02
    4b64:	33 27       	eor	r19, r19
    4b66:	27 fd       	sbrc	r18, 7
    4b68:	30 95       	com	r19
    4b6a:	41 81       	ldd	r20, Z+1	; 0x01
    4b6c:	55 27       	eor	r21, r21
    4b6e:	47 fd       	sbrc	r20, 7
    4b70:	50 95       	com	r21
    4b72:	60 81       	ld	r22, Z
    4b74:	77 27       	eor	r23, r23
    4b76:	67 fd       	sbrc	r22, 7
    4b78:	70 95       	com	r23
    4b7a:	0e 94 c7 1b 	call	0x378e	; 0x378e <Adafruit_GFX_drawRect>
}
    4b7e:	1f 91       	pop	r17
    4b80:	0f 91       	pop	r16
    4b82:	ff 90       	pop	r15
    4b84:	ef 90       	pop	r14
    4b86:	08 95       	ret

00004b88 <pinMode>:
	&PORTD
};

//from arduino's wiring_digital.c
void pinMode(uint8_t pin, uint8_t mode)
{
    4b88:	cf 93       	push	r28
    4b8a:	df 93       	push	r29
	uint8_t bit = digitalPinToBitMask(pin);
    4b8c:	90 e0       	ldi	r25, 0x00	; 0
    4b8e:	fc 01       	movw	r30, r24
    4b90:	e5 56       	subi	r30, 0x65	; 101
    4b92:	fa 4c       	sbci	r31, 0xCA	; 202
    4b94:	44 91       	lpm	r20, Z
	uint8_t port = digitalPinToPort(pin);
    4b96:	fc 01       	movw	r30, r24
    4b98:	e5 54       	subi	r30, 0x45	; 69
    4b9a:	fa 4c       	sbci	r31, 0xCA	; 202
    4b9c:	84 91       	lpm	r24, Z
	volatile uint8_t *reg, *out;

	if (port == NOT_A_PIN) return;
    4b9e:	88 23       	and	r24, r24
    4ba0:	91 f1       	breq	.+100    	; 0x4c06 <pinMode+0x7e>

	// JWS: can I let the optimizer do this?
	reg = portModeRegister(port);
    4ba2:	90 e0       	ldi	r25, 0x00	; 0
    4ba4:	88 0f       	add	r24, r24
    4ba6:	99 1f       	adc	r25, r25
    4ba8:	fc 01       	movw	r30, r24
    4baa:	ef 56       	subi	r30, 0x6F	; 111
    4bac:	fa 4c       	sbci	r31, 0xCA	; 202
    4bae:	25 91       	lpm	r18, Z+
    4bb0:	34 91       	lpm	r19, Z
    4bb2:	a2 2f       	mov	r26, r18
    4bb4:	b3 2f       	mov	r27, r19
	out = portOutputRegister(port);
    4bb6:	89 57       	subi	r24, 0x79	; 121
    4bb8:	9a 4c       	sbci	r25, 0xCA	; 202
    4bba:	fc 01       	movw	r30, r24
    4bbc:	85 91       	lpm	r24, Z+
    4bbe:	94 91       	lpm	r25, Z
    4bc0:	c8 2f       	mov	r28, r24
    4bc2:	d9 2f       	mov	r29, r25

	if (mode == INPUT) {
    4bc4:	61 11       	cpse	r22, r1
    4bc6:	0b c0       	rjmp	.+22     	; 0x4bde <pinMode+0x56>
		uint8_t oldSREG = SREG;
    4bc8:	8f b7       	in	r24, 0x3f	; 63
		cli();
    4bca:	f8 94       	cli
		*reg &= ~bit;
    4bcc:	9c 91       	ld	r25, X
    4bce:	40 95       	com	r20
    4bd0:	94 23       	and	r25, r20
    4bd2:	9c 93       	st	X, r25
		*out &= ~bit;
    4bd4:	e8 81       	ld	r30, Y
    4bd6:	4e 23       	and	r20, r30
    4bd8:	48 83       	st	Y, r20
		SREG = oldSREG;
    4bda:	8f bf       	out	0x3f, r24	; 63
    4bdc:	14 c0       	rjmp	.+40     	; 0x4c06 <pinMode+0x7e>
	} else if (mode == INPUT_PULLUP) {
    4bde:	62 30       	cpi	r22, 0x02	; 2
    4be0:	61 f4       	brne	.+24     	; 0x4bfa <pinMode+0x72>
		uint8_t oldSREG = SREG;
    4be2:	8f b7       	in	r24, 0x3f	; 63
		cli();
    4be4:	f8 94       	cli
		*reg &= ~bit;
    4be6:	2c 91       	ld	r18, X
    4be8:	94 2f       	mov	r25, r20
    4bea:	90 95       	com	r25
    4bec:	92 23       	and	r25, r18
    4bee:	9c 93       	st	X, r25
		*out |= bit;
    4bf0:	e8 81       	ld	r30, Y
    4bf2:	4e 2b       	or	r20, r30
    4bf4:	48 83       	st	Y, r20
		SREG = oldSREG;
    4bf6:	8f bf       	out	0x3f, r24	; 63
    4bf8:	06 c0       	rjmp	.+12     	; 0x4c06 <pinMode+0x7e>
	} else {
		uint8_t oldSREG = SREG;
    4bfa:	8f b7       	in	r24, 0x3f	; 63
		cli();
    4bfc:	f8 94       	cli
		*reg |= bit;
    4bfe:	ec 91       	ld	r30, X
    4c00:	4e 2b       	or	r20, r30
    4c02:	4c 93       	st	X, r20
		SREG = oldSREG;
    4c04:	8f bf       	out	0x3f, r24	; 63
	}
    4c06:	df 91       	pop	r29
    4c08:	cf 91       	pop	r28
    4c0a:	08 95       	ret

00004c0c <RGBmatrixPanel_invertDisplay>:
// Dump display contents to the Serial Monitor, adding some formatting to
// simplify copy-and-paste of data as a PROGMEM-embedded image for another
// sketch.  If using multiple dumps this way, you'll need to edit the
// output to change the 'img' name for each.  Data can then be loaded
// back into the display using a pgm_read_byte() loop.
void RGBmatrixPanel_dumpMatrix(RGBmatrixPanel *rgbmp) {
    4c0c:	08 95       	ret

00004c0e <RGBmatrixPanel_drawPixel>:
    4c0e:	8f 92       	push	r8
    4c10:	9f 92       	push	r9
    4c12:	bf 92       	push	r11
    4c14:	cf 92       	push	r12
    4c16:	df 92       	push	r13
    4c18:	ef 92       	push	r14
    4c1a:	ff 92       	push	r15
    4c1c:	0f 93       	push	r16
    4c1e:	1f 93       	push	r17
    4c20:	cf 93       	push	r28
    4c22:	df 93       	push	r29
    4c24:	fc 01       	movw	r30, r24
    4c26:	77 23       	and	r23, r23
    4c28:	0c f4       	brge	.+2      	; 0x4c2c <RGBmatrixPanel_drawPixel+0x1e>
    4c2a:	24 c1       	rjmp	.+584    	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4c2c:	82 85       	ldd	r24, Z+10	; 0x0a
    4c2e:	93 85       	ldd	r25, Z+11	; 0x0b
    4c30:	68 17       	cp	r22, r24
    4c32:	79 07       	cpc	r23, r25
    4c34:	0c f0       	brlt	.+2      	; 0x4c38 <RGBmatrixPanel_drawPixel+0x2a>
    4c36:	1e c1       	rjmp	.+572    	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4c38:	55 23       	and	r21, r21
    4c3a:	0c f4       	brge	.+2      	; 0x4c3e <RGBmatrixPanel_drawPixel+0x30>
    4c3c:	1b c1       	rjmp	.+566    	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4c3e:	84 85       	ldd	r24, Z+12	; 0x0c
    4c40:	95 85       	ldd	r25, Z+13	; 0x0d
    4c42:	48 17       	cp	r20, r24
    4c44:	59 07       	cpc	r21, r25
    4c46:	0c f0       	brlt	.+2      	; 0x4c4a <RGBmatrixPanel_drawPixel+0x3c>
    4c48:	15 c1       	rjmp	.+554    	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4c4a:	87 89       	ldd	r24, Z+23	; 0x17
    4c4c:	82 30       	cpi	r24, 0x02	; 2
    4c4e:	61 f0       	breq	.+24     	; 0x4c68 <RGBmatrixPanel_drawPixel+0x5a>
    4c50:	83 30       	cpi	r24, 0x03	; 3
    4c52:	c9 f0       	breq	.+50     	; 0x4c86 <RGBmatrixPanel_drawPixel+0x78>
    4c54:	81 30       	cpi	r24, 0x01	; 1
    4c56:	f1 f4       	brne	.+60     	; 0x4c94 <RGBmatrixPanel_drawPixel+0x86>
    4c58:	86 81       	ldd	r24, Z+6	; 0x06
    4c5a:	97 81       	ldd	r25, Z+7	; 0x07
    4c5c:	01 97       	sbiw	r24, 0x01	; 1
    4c5e:	84 1b       	sub	r24, r20
    4c60:	95 0b       	sbc	r25, r21
    4c62:	ab 01       	movw	r20, r22
    4c64:	bc 01       	movw	r22, r24
    4c66:	16 c0       	rjmp	.+44     	; 0x4c94 <RGBmatrixPanel_drawPixel+0x86>
    4c68:	86 81       	ldd	r24, Z+6	; 0x06
    4c6a:	97 81       	ldd	r25, Z+7	; 0x07
    4c6c:	01 97       	sbiw	r24, 0x01	; 1
    4c6e:	dc 01       	movw	r26, r24
    4c70:	a6 1b       	sub	r26, r22
    4c72:	b7 0b       	sbc	r27, r23
    4c74:	bd 01       	movw	r22, r26
    4c76:	80 85       	ldd	r24, Z+8	; 0x08
    4c78:	91 85       	ldd	r25, Z+9	; 0x09
    4c7a:	01 97       	sbiw	r24, 0x01	; 1
    4c7c:	ec 01       	movw	r28, r24
    4c7e:	c4 1b       	sub	r28, r20
    4c80:	d5 0b       	sbc	r29, r21
    4c82:	ae 01       	movw	r20, r28
    4c84:	07 c0       	rjmp	.+14     	; 0x4c94 <RGBmatrixPanel_drawPixel+0x86>
    4c86:	80 85       	ldd	r24, Z+8	; 0x08
    4c88:	91 85       	ldd	r25, Z+9	; 0x09
    4c8a:	01 97       	sbiw	r24, 0x01	; 1
    4c8c:	86 1b       	sub	r24, r22
    4c8e:	97 0b       	sbc	r25, r23
    4c90:	ba 01       	movw	r22, r20
    4c92:	ac 01       	movw	r20, r24
    4c94:	b3 2e       	mov	r11, r19
    4c96:	b6 94       	lsr	r11
    4c98:	b6 94       	lsr	r11
    4c9a:	b6 94       	lsr	r11
    4c9c:	b6 94       	lsr	r11
    4c9e:	eb 2c       	mov	r14, r11
    4ca0:	c9 01       	movw	r24, r18
    4ca2:	88 0f       	add	r24, r24
    4ca4:	89 2f       	mov	r24, r25
    4ca6:	88 1f       	adc	r24, r24
    4ca8:	99 0b       	sbc	r25, r25
    4caa:	91 95       	neg	r25
    4cac:	0f 2e       	mov	r0, r31
    4cae:	ff e0       	ldi	r31, 0x0F	; 15
    4cb0:	df 2e       	mov	r13, r31
    4cb2:	f0 2d       	mov	r31, r0
    4cb4:	d8 22       	and	r13, r24
    4cb6:	36 95       	lsr	r19
    4cb8:	27 95       	ror	r18
    4cba:	0f 2e       	mov	r0, r31
    4cbc:	ff e0       	ldi	r31, 0x0F	; 15
    4cbe:	cf 2e       	mov	r12, r31
    4cc0:	f0 2d       	mov	r31, r0
    4cc2:	c2 22       	and	r12, r18
    4cc4:	10 a9       	ldd	r17, Z+48	; 0x30
    4cc6:	c1 2f       	mov	r28, r17
    4cc8:	d0 e0       	ldi	r29, 0x00	; 0
    4cca:	a1 e0       	ldi	r26, 0x01	; 1
    4ccc:	b0 e0       	ldi	r27, 0x00	; 0
    4cce:	fa 2e       	mov	r15, r26
    4cd0:	01 c0       	rjmp	.+2      	; 0x4cd4 <RGBmatrixPanel_drawPixel+0xc6>
    4cd2:	ff 0c       	add	r15, r15
    4cd4:	1a 95       	dec	r17
    4cd6:	ea f7       	brpl	.-6      	; 0x4cd2 <RGBmatrixPanel_drawPixel+0xc4>
    4cd8:	a7 a5       	ldd	r26, Z+47	; 0x2f
    4cda:	b0 e0       	ldi	r27, 0x00	; 0
    4cdc:	4a 17       	cp	r20, r26
    4cde:	5b 07       	cpc	r21, r27
    4ce0:	0c f0       	brlt	.+2      	; 0x4ce4 <RGBmatrixPanel_drawPixel+0xd6>
    4ce2:	6a c0       	rjmp	.+212    	; 0x4db8 <RGBmatrixPanel_drawPixel+0x1aa>
    4ce4:	81 a8       	ldd	r8, Z+49	; 0x31
    4ce6:	91 2c       	mov	r9, r1
    4ce8:	88 0c       	add	r8, r8
    4cea:	99 1c       	adc	r9, r9
    4cec:	8e 0e       	add	r8, r30
    4cee:	9f 1e       	adc	r9, r31
    4cf0:	06 81       	ldd	r16, Z+6	; 0x06
    4cf2:	17 81       	ldd	r17, Z+7	; 0x07
    4cf4:	40 9f       	mul	r20, r16
    4cf6:	d0 01       	movw	r26, r0
    4cf8:	41 9f       	mul	r20, r17
    4cfa:	b0 0d       	add	r27, r0
    4cfc:	50 9f       	mul	r21, r16
    4cfe:	b0 0d       	add	r27, r0
    4d00:	11 24       	eor	r1, r1
    4d02:	21 97       	sbiw	r28, 0x01	; 1
    4d04:	ac 9f       	mul	r26, r28
    4d06:	a0 01       	movw	r20, r0
    4d08:	ad 9f       	mul	r26, r29
    4d0a:	50 0d       	add	r21, r0
    4d0c:	bc 9f       	mul	r27, r28
    4d0e:	50 0d       	add	r21, r0
    4d10:	11 24       	eor	r1, r1
    4d12:	64 0f       	add	r22, r20
    4d14:	75 1f       	adc	r23, r21
    4d16:	e4 01       	movw	r28, r8
    4d18:	ab a5       	ldd	r26, Y+43	; 0x2b
    4d1a:	bc a5       	ldd	r27, Y+44	; 0x2c
    4d1c:	a6 0f       	add	r26, r22
    4d1e:	b7 1f       	adc	r27, r23
    4d20:	ed 01       	movw	r28, r26
    4d22:	c0 5c       	subi	r28, 0xC0	; 192
    4d24:	df 4f       	sbci	r29, 0xFF	; 255
    4d26:	48 81       	ld	r20, Y
    4d28:	4c 7f       	andi	r20, 0xFC	; 252
    4d2a:	b0 fc       	sbrc	r11, 0
    4d2c:	05 c0       	rjmp	.+10     	; 0x4d38 <RGBmatrixPanel_drawPixel+0x12a>
    4d2e:	ed 01       	movw	r28, r26
    4d30:	c0 5c       	subi	r28, 0xC0	; 192
    4d32:	df 4f       	sbci	r29, 0xFF	; 255
    4d34:	48 83       	st	Y, r20
    4d36:	05 c0       	rjmp	.+10     	; 0x4d42 <RGBmatrixPanel_drawPixel+0x134>
    4d38:	ed 01       	movw	r28, r26
    4d3a:	c0 5c       	subi	r28, 0xC0	; 192
    4d3c:	df 4f       	sbci	r29, 0xFF	; 255
    4d3e:	41 60       	ori	r20, 0x01	; 1
    4d40:	48 83       	st	Y, r20
    4d42:	80 ff       	sbrs	r24, 0
    4d44:	06 c0       	rjmp	.+12     	; 0x4d52 <RGBmatrixPanel_drawPixel+0x144>
    4d46:	ed 01       	movw	r28, r26
    4d48:	c0 5c       	subi	r28, 0xC0	; 192
    4d4a:	df 4f       	sbci	r29, 0xFF	; 255
    4d4c:	88 81       	ld	r24, Y
    4d4e:	82 60       	ori	r24, 0x02	; 2
    4d50:	88 83       	st	Y, r24
    4d52:	20 ff       	sbrs	r18, 0
    4d54:	08 c0       	rjmp	.+16     	; 0x4d66 <RGBmatrixPanel_drawPixel+0x158>
    4d56:	90 96       	adiw	r26, 0x20	; 32
    4d58:	8c 91       	ld	r24, X
    4d5a:	90 97       	sbiw	r26, 0x20	; 32
    4d5c:	81 60       	ori	r24, 0x01	; 1
    4d5e:	90 96       	adiw	r26, 0x20	; 32
    4d60:	8c 93       	st	X, r24
    4d62:	90 97       	sbiw	r26, 0x20	; 32
    4d64:	07 c0       	rjmp	.+14     	; 0x4d74 <RGBmatrixPanel_drawPixel+0x166>
    4d66:	90 96       	adiw	r26, 0x20	; 32
    4d68:	8c 91       	ld	r24, X
    4d6a:	90 97       	sbiw	r26, 0x20	; 32
    4d6c:	8e 7f       	andi	r24, 0xFE	; 254
    4d6e:	90 96       	adiw	r26, 0x20	; 32
    4d70:	8c 93       	st	X, r24
    4d72:	90 97       	sbiw	r26, 0x20	; 32
    4d74:	d2 e0       	ldi	r29, 0x02	; 2
    4d76:	df 15       	cp	r29, r15
    4d78:	08 f0       	brcs	.+2      	; 0x4d7c <RGBmatrixPanel_drawPixel+0x16e>
    4d7a:	7c c0       	rjmp	.+248    	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4d7c:	22 e0       	ldi	r18, 0x02	; 2
    4d7e:	8c 91       	ld	r24, X
    4d80:	83 7e       	andi	r24, 0xE3	; 227
    4d82:	92 2f       	mov	r25, r18
    4d84:	9e 21       	and	r25, r14
    4d86:	11 f4       	brne	.+4      	; 0x4d8c <RGBmatrixPanel_drawPixel+0x17e>
    4d88:	8c 93       	st	X, r24
    4d8a:	02 c0       	rjmp	.+4      	; 0x4d90 <RGBmatrixPanel_drawPixel+0x182>
    4d8c:	84 60       	ori	r24, 0x04	; 4
    4d8e:	8c 93       	st	X, r24
    4d90:	82 2f       	mov	r24, r18
    4d92:	8d 21       	and	r24, r13
    4d94:	19 f0       	breq	.+6      	; 0x4d9c <RGBmatrixPanel_drawPixel+0x18e>
    4d96:	8c 91       	ld	r24, X
    4d98:	88 60       	ori	r24, 0x08	; 8
    4d9a:	8c 93       	st	X, r24
    4d9c:	82 2f       	mov	r24, r18
    4d9e:	8c 21       	and	r24, r12
    4da0:	19 f0       	breq	.+6      	; 0x4da8 <RGBmatrixPanel_drawPixel+0x19a>
    4da2:	8c 91       	ld	r24, X
    4da4:	80 61       	ori	r24, 0x10	; 16
    4da6:	8c 93       	st	X, r24
    4da8:	86 81       	ldd	r24, Z+6	; 0x06
    4daa:	97 81       	ldd	r25, Z+7	; 0x07
    4dac:	a8 0f       	add	r26, r24
    4dae:	b9 1f       	adc	r27, r25
    4db0:	22 0f       	add	r18, r18
    4db2:	2f 15       	cp	r18, r15
    4db4:	20 f3       	brcs	.-56     	; 0x4d7e <RGBmatrixPanel_drawPixel+0x170>
    4db6:	5e c0       	rjmp	.+188    	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4db8:	01 a9       	ldd	r16, Z+49	; 0x31
    4dba:	10 e0       	ldi	r17, 0x00	; 0
    4dbc:	00 0f       	add	r16, r16
    4dbe:	11 1f       	adc	r17, r17
    4dc0:	4f 01       	movw	r8, r30
    4dc2:	80 0e       	add	r8, r16
    4dc4:	91 1e       	adc	r9, r17
    4dc6:	4a 1b       	sub	r20, r26
    4dc8:	5b 0b       	sbc	r21, r27
    4dca:	a6 81       	ldd	r26, Z+6	; 0x06
    4dcc:	b7 81       	ldd	r27, Z+7	; 0x07
    4dce:	4a 9f       	mul	r20, r26
    4dd0:	80 01       	movw	r16, r0
    4dd2:	4b 9f       	mul	r20, r27
    4dd4:	10 0d       	add	r17, r0
    4dd6:	5a 9f       	mul	r21, r26
    4dd8:	10 0d       	add	r17, r0
    4dda:	11 24       	eor	r1, r1
    4ddc:	21 97       	sbiw	r28, 0x01	; 1
    4dde:	0c 9f       	mul	r16, r28
    4de0:	a0 01       	movw	r20, r0
    4de2:	0d 9f       	mul	r16, r29
    4de4:	50 0d       	add	r21, r0
    4de6:	1c 9f       	mul	r17, r28
    4de8:	50 0d       	add	r21, r0
    4dea:	11 24       	eor	r1, r1
    4dec:	64 0f       	add	r22, r20
    4dee:	75 1f       	adc	r23, r21
    4df0:	e4 01       	movw	r28, r8
    4df2:	ab a5       	ldd	r26, Y+43	; 0x2b
    4df4:	bc a5       	ldd	r27, Y+44	; 0x2c
    4df6:	a6 0f       	add	r26, r22
    4df8:	b7 1f       	adc	r27, r23
    4dfa:	4c 91       	ld	r20, X
    4dfc:	4c 7f       	andi	r20, 0xFC	; 252
    4dfe:	4c 93       	st	X, r20
    4e00:	b0 fe       	sbrs	r11, 0
    4e02:	08 c0       	rjmp	.+16     	; 0x4e14 <RGBmatrixPanel_drawPixel+0x206>
    4e04:	90 96       	adiw	r26, 0x20	; 32
    4e06:	5c 91       	ld	r21, X
    4e08:	90 97       	sbiw	r26, 0x20	; 32
    4e0a:	52 60       	ori	r21, 0x02	; 2
    4e0c:	90 96       	adiw	r26, 0x20	; 32
    4e0e:	5c 93       	st	X, r21
    4e10:	90 97       	sbiw	r26, 0x20	; 32
    4e12:	07 c0       	rjmp	.+14     	; 0x4e22 <RGBmatrixPanel_drawPixel+0x214>
    4e14:	90 96       	adiw	r26, 0x20	; 32
    4e16:	5c 91       	ld	r21, X
    4e18:	90 97       	sbiw	r26, 0x20	; 32
    4e1a:	5d 7f       	andi	r21, 0xFD	; 253
    4e1c:	90 96       	adiw	r26, 0x20	; 32
    4e1e:	5c 93       	st	X, r21
    4e20:	90 97       	sbiw	r26, 0x20	; 32
    4e22:	80 ff       	sbrs	r24, 0
    4e24:	02 c0       	rjmp	.+4      	; 0x4e2a <RGBmatrixPanel_drawPixel+0x21c>
    4e26:	41 60       	ori	r20, 0x01	; 1
    4e28:	4c 93       	st	X, r20
    4e2a:	20 ff       	sbrs	r18, 0
    4e2c:	03 c0       	rjmp	.+6      	; 0x4e34 <RGBmatrixPanel_drawPixel+0x226>
    4e2e:	8c 91       	ld	r24, X
    4e30:	82 60       	ori	r24, 0x02	; 2
    4e32:	8c 93       	st	X, r24
    4e34:	d2 e0       	ldi	r29, 0x02	; 2
    4e36:	df 15       	cp	r29, r15
    4e38:	e8 f4       	brcc	.+58     	; 0x4e74 <RGBmatrixPanel_drawPixel+0x266>
    4e3a:	22 e0       	ldi	r18, 0x02	; 2
    4e3c:	8c 91       	ld	r24, X
    4e3e:	8f 71       	andi	r24, 0x1F	; 31
    4e40:	92 2f       	mov	r25, r18
    4e42:	9e 21       	and	r25, r14
    4e44:	11 f4       	brne	.+4      	; 0x4e4a <RGBmatrixPanel_drawPixel+0x23c>
    4e46:	8c 93       	st	X, r24
    4e48:	02 c0       	rjmp	.+4      	; 0x4e4e <RGBmatrixPanel_drawPixel+0x240>
    4e4a:	80 62       	ori	r24, 0x20	; 32
    4e4c:	8c 93       	st	X, r24
    4e4e:	82 2f       	mov	r24, r18
    4e50:	8d 21       	and	r24, r13
    4e52:	19 f0       	breq	.+6      	; 0x4e5a <RGBmatrixPanel_drawPixel+0x24c>
    4e54:	8c 91       	ld	r24, X
    4e56:	80 64       	ori	r24, 0x40	; 64
    4e58:	8c 93       	st	X, r24
    4e5a:	82 2f       	mov	r24, r18
    4e5c:	8c 21       	and	r24, r12
    4e5e:	19 f0       	breq	.+6      	; 0x4e66 <RGBmatrixPanel_drawPixel+0x258>
    4e60:	8c 91       	ld	r24, X
    4e62:	80 68       	ori	r24, 0x80	; 128
    4e64:	8c 93       	st	X, r24
    4e66:	86 81       	ldd	r24, Z+6	; 0x06
    4e68:	97 81       	ldd	r25, Z+7	; 0x07
    4e6a:	a8 0f       	add	r26, r24
    4e6c:	b9 1f       	adc	r27, r25
    4e6e:	22 0f       	add	r18, r18
    4e70:	2f 15       	cp	r18, r15
    4e72:	20 f3       	brcs	.-56     	; 0x4e3c <RGBmatrixPanel_drawPixel+0x22e>
    4e74:	df 91       	pop	r29
    4e76:	cf 91       	pop	r28
    4e78:	1f 91       	pop	r17
    4e7a:	0f 91       	pop	r16
    4e7c:	ff 90       	pop	r15
    4e7e:	ef 90       	pop	r14
    4e80:	df 90       	pop	r13
    4e82:	cf 90       	pop	r12
    4e84:	bf 90       	pop	r11
    4e86:	9f 90       	pop	r9
    4e88:	8f 90       	pop	r8
    4e8a:	08 95       	ret

00004e8c <RGBmatrixPanel_fillScreen>:
    4e8c:	9b 01       	movw	r18, r22
    4e8e:	21 50       	subi	r18, 0x01	; 1
    4e90:	31 09       	sbc	r19, r1
    4e92:	2e 3f       	cpi	r18, 0xFE	; 254
    4e94:	3f 4f       	sbci	r19, 0xFF	; 255
    4e96:	80 f0       	brcs	.+32     	; 0x4eb8 <RGBmatrixPanel_fillScreen+0x2c>
    4e98:	fc 01       	movw	r30, r24
    4e9a:	47 a5       	ldd	r20, Z+47	; 0x2f
    4e9c:	f0 e6       	ldi	r31, 0x60	; 96
    4e9e:	4f 9f       	mul	r20, r31
    4ea0:	a0 01       	movw	r20, r0
    4ea2:	11 24       	eor	r1, r1
    4ea4:	fc 01       	movw	r30, r24
    4ea6:	21 a9       	ldd	r18, Z+49	; 0x31
    4ea8:	30 e0       	ldi	r19, 0x00	; 0
    4eaa:	22 0f       	add	r18, r18
    4eac:	33 1f       	adc	r19, r19
    4eae:	e2 0f       	add	r30, r18
    4eb0:	f3 1f       	adc	r31, r19
    4eb2:	83 a5       	ldd	r24, Z+43	; 0x2b
    4eb4:	94 a5       	ldd	r25, Z+44	; 0x2c
    4eb6:	cc c7       	rjmp	.+3992   	; 0x5e50 <memset>
    4eb8:	0c 94 6b 1c 	jmp	0x38d6	; 0x38d6 <Adafruit_GFX_fillScreen>

00004ebc <RGBmatrixPanel_init>:
    4ebc:	4f 92       	push	r4
    4ebe:	5f 92       	push	r5
    4ec0:	6f 92       	push	r6
    4ec2:	7f 92       	push	r7
    4ec4:	8f 92       	push	r8
    4ec6:	af 92       	push	r10
    4ec8:	bf 92       	push	r11
    4eca:	cf 92       	push	r12
    4ecc:	df 92       	push	r13
    4ece:	ef 92       	push	r14
    4ed0:	ff 92       	push	r15
    4ed2:	0f 93       	push	r16
    4ed4:	1f 93       	push	r17
    4ed6:	cf 93       	push	r28
    4ed8:	df 93       	push	r29
    4eda:	cd b7       	in	r28, 0x3d	; 61
    4edc:	de b7       	in	r29, 0x3e	; 62
    4ede:	3c 01       	movw	r6, r24
    4ee0:	f4 2e       	mov	r15, r20
    4ee2:	12 2f       	mov	r17, r18
    4ee4:	dc 01       	movw	r26, r24
    4ee6:	9f 96       	adiw	r26, 0x2f	; 47
    4ee8:	6c 93       	st	X, r22
    4eea:	46 2f       	mov	r20, r22
    4eec:	50 e0       	ldi	r21, 0x00	; 0
    4eee:	44 0f       	add	r20, r20
    4ef0:	55 1f       	adc	r21, r21
    4ef2:	60 e2       	ldi	r22, 0x20	; 32
    4ef4:	70 e0       	ldi	r23, 0x00	; 0
    4ef6:	0e 94 87 1c 	call	0x390e	; 0x390e <Adafruit_GFX_constructor>
    4efa:	87 e0       	ldi	r24, 0x07	; 7
    4efc:	96 e2       	ldi	r25, 0x26	; 38
    4efe:	f3 01       	movw	r30, r6
    4f00:	92 8f       	std	Z+26, r25	; 0x1a
    4f02:	81 8f       	std	Z+25, r24	; 0x19
    4f04:	86 e0       	ldi	r24, 0x06	; 6
    4f06:	96 e2       	ldi	r25, 0x26	; 38
    4f08:	94 8f       	std	Z+28, r25	; 0x1c
    4f0a:	83 8f       	std	Z+27, r24	; 0x1b
    4f0c:	86 e4       	ldi	r24, 0x46	; 70
    4f0e:	97 e2       	ldi	r25, 0x27	; 39
    4f10:	90 a7       	std	Z+40, r25	; 0x28
    4f12:	87 a3       	std	Z+39, r24	; 0x27
    4f14:	47 a4       	ldd	r4, Z+47	; 0x2f
    4f16:	f0 e6       	ldi	r31, 0x60	; 96
    4f18:	4f 9e       	mul	r4, r31
    4f1a:	20 01       	movw	r4, r0
    4f1c:	11 24       	eor	r1, r1
    4f1e:	81 e0       	ldi	r24, 0x01	; 1
    4f20:	88 12       	cpse	r8, r24
    4f22:	04 c0       	rjmp	.+8      	; 0x4f2c <RGBmatrixPanel_init+0x70>
    4f24:	92 01       	movw	r18, r4
    4f26:	22 0f       	add	r18, r18
    4f28:	33 1f       	adc	r19, r19
    4f2a:	01 c0       	rjmp	.+2      	; 0x4f2e <RGBmatrixPanel_init+0x72>
    4f2c:	92 01       	movw	r18, r4
    4f2e:	b2 2e       	mov	r11, r18
    4f30:	d3 2e       	mov	r13, r19
    4f32:	82 2f       	mov	r24, r18
    4f34:	93 2f       	mov	r25, r19
    4f36:	fb d5       	rcall	.+3062   	; 0x5b2e <malloc>
    4f38:	a8 2f       	mov	r26, r24
    4f3a:	b9 2f       	mov	r27, r25
    4f3c:	f3 01       	movw	r30, r6
    4f3e:	b4 a7       	std	Z+44, r27	; 0x2c
    4f40:	a3 a7       	std	Z+43, r26	; 0x2b
    4f42:	10 97       	sbiw	r26, 0x00	; 0
    4f44:	09 f4       	brne	.+2      	; 0x4f48 <RGBmatrixPanel_init+0x8c>
    4f46:	c9 c0       	rjmp	.+402    	; 0x50da <RGBmatrixPanel_init+0x21e>
    4f48:	4b 2d       	mov	r20, r11
    4f4a:	5d 2d       	mov	r21, r13
    4f4c:	60 e0       	ldi	r22, 0x00	; 0
    4f4e:	70 e0       	ldi	r23, 0x00	; 0
    4f50:	7f d7       	rcall	.+3838   	; 0x5e50 <memset>
    4f52:	f1 e0       	ldi	r31, 0x01	; 1
    4f54:	8f 12       	cpse	r8, r31
    4f56:	08 c0       	rjmp	.+16     	; 0x4f68 <RGBmatrixPanel_init+0xac>
    4f58:	d3 01       	movw	r26, r6
    4f5a:	9b 96       	adiw	r26, 0x2b	; 43
    4f5c:	8d 91       	ld	r24, X+
    4f5e:	9c 91       	ld	r25, X
    4f60:	9c 97       	sbiw	r26, 0x2c	; 44
    4f62:	48 0e       	add	r4, r24
    4f64:	59 1e       	adc	r5, r25
    4f66:	03 c0       	rjmp	.+6      	; 0x4f6e <RGBmatrixPanel_init+0xb2>
    4f68:	f3 01       	movw	r30, r6
    4f6a:	43 a4       	ldd	r4, Z+43	; 0x2b
    4f6c:	54 a4       	ldd	r5, Z+44	; 0x2c
    4f6e:	d3 01       	movw	r26, r6
    4f70:	9e 96       	adiw	r26, 0x2e	; 46
    4f72:	5c 92       	st	X, r5
    4f74:	4e 92       	st	-X, r4
    4f76:	9d 97       	sbiw	r26, 0x2d	; 45
    4f78:	f3 01       	movw	r30, r6
    4f7a:	e7 5b       	subi	r30, 0xB7	; 183
    4f7c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f7e:	f0 82       	st	Z, r15
    4f80:	f3 01       	movw	r30, r6
    4f82:	e6 5b       	subi	r30, 0xB6	; 182
    4f84:	ff 4f       	sbci	r31, 0xFF	; 255
    4f86:	10 83       	st	Z, r17
    4f88:	f3 01       	movw	r30, r6
    4f8a:	e5 5b       	subi	r30, 0xB5	; 181
    4f8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f8e:	00 83       	st	Z, r16
    4f90:	f3 01       	movw	r30, r6
    4f92:	ea 5b       	subi	r30, 0xBA	; 186
    4f94:	ff 4f       	sbci	r31, 0xFF	; 255
    4f96:	e0 82       	st	Z, r14
    4f98:	f3 01       	movw	r30, r6
    4f9a:	e9 5b       	subi	r30, 0xB9	; 185
    4f9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4f9e:	c0 82       	st	Z, r12
    4fa0:	f3 01       	movw	r30, r6
    4fa2:	e8 5b       	subi	r30, 0xB8	; 184
    4fa4:	ff 4f       	sbci	r31, 0xFF	; 255
    4fa6:	a0 82       	st	Z, r10
    4fa8:	ee 2d       	mov	r30, r14
    4faa:	f0 e0       	ldi	r31, 0x00	; 0
    4fac:	e5 56       	subi	r30, 0x65	; 101
    4fae:	fa 4c       	sbci	r31, 0xCA	; 202
    4fb0:	e4 91       	lpm	r30, Z
    4fb2:	df 96       	adiw	r26, 0x3f	; 63
    4fb4:	ec 93       	st	X, r30
    4fb6:	df 97       	sbiw	r26, 0x3f	; 63
    4fb8:	8c 2d       	mov	r24, r12
    4fba:	90 e0       	ldi	r25, 0x00	; 0
    4fbc:	fc 01       	movw	r30, r24
    4fbe:	e5 54       	subi	r30, 0x45	; 69
    4fc0:	fa 4c       	sbci	r31, 0xCA	; 202
    4fc2:	e4 91       	lpm	r30, Z
    4fc4:	f0 e0       	ldi	r31, 0x00	; 0
    4fc6:	ee 0f       	add	r30, r30
    4fc8:	ff 1f       	adc	r31, r31
    4fca:	e9 57       	subi	r30, 0x79	; 121
    4fcc:	fa 4c       	sbci	r31, 0xCA	; 202
    4fce:	25 91       	lpm	r18, Z+
    4fd0:	34 91       	lpm	r19, Z
    4fd2:	d3 96       	adiw	r26, 0x33	; 51
    4fd4:	2c 93       	st	X, r18
    4fd6:	d3 97       	sbiw	r26, 0x33	; 51
    4fd8:	d4 96       	adiw	r26, 0x34	; 52
    4fda:	3c 93       	st	X, r19
    4fdc:	d4 97       	sbiw	r26, 0x34	; 52
    4fde:	fc 01       	movw	r30, r24
    4fe0:	e5 56       	subi	r30, 0x65	; 101
    4fe2:	fa 4c       	sbci	r31, 0xCA	; 202
    4fe4:	84 91       	lpm	r24, Z
    4fe6:	a0 5c       	subi	r26, 0xC0	; 192
    4fe8:	bf 4f       	sbci	r27, 0xFF	; 255
    4fea:	8c 93       	st	X, r24
    4fec:	8a 2d       	mov	r24, r10
    4fee:	90 e0       	ldi	r25, 0x00	; 0
    4ff0:	fc 01       	movw	r30, r24
    4ff2:	e5 54       	subi	r30, 0x45	; 69
    4ff4:	fa 4c       	sbci	r31, 0xCA	; 202
    4ff6:	e4 91       	lpm	r30, Z
    4ff8:	f0 e0       	ldi	r31, 0x00	; 0
    4ffa:	ee 0f       	add	r30, r30
    4ffc:	ff 1f       	adc	r31, r31
    4ffe:	e9 57       	subi	r30, 0x79	; 121
    5000:	fa 4c       	sbci	r31, 0xCA	; 202
    5002:	25 91       	lpm	r18, Z+
    5004:	34 91       	lpm	r19, Z
    5006:	f3 01       	movw	r30, r6
    5008:	25 ab       	std	Z+53, r18	; 0x35
    500a:	36 ab       	std	Z+54, r19	; 0x36
    500c:	fc 01       	movw	r30, r24
    500e:	e5 56       	subi	r30, 0x65	; 101
    5010:	fa 4c       	sbci	r31, 0xCA	; 202
    5012:	84 91       	lpm	r24, Z
    5014:	d3 01       	movw	r26, r6
    5016:	af 5b       	subi	r26, 0xBF	; 191
    5018:	bf 4f       	sbci	r27, 0xFF	; 255
    501a:	8c 93       	st	X, r24
    501c:	8f 2d       	mov	r24, r15
    501e:	90 e0       	ldi	r25, 0x00	; 0
    5020:	fc 01       	movw	r30, r24
    5022:	e5 54       	subi	r30, 0x45	; 69
    5024:	fa 4c       	sbci	r31, 0xCA	; 202
    5026:	e4 91       	lpm	r30, Z
    5028:	f0 e0       	ldi	r31, 0x00	; 0
    502a:	ee 0f       	add	r30, r30
    502c:	ff 1f       	adc	r31, r31
    502e:	e9 57       	subi	r30, 0x79	; 121
    5030:	fa 4c       	sbci	r31, 0xCA	; 202
    5032:	25 91       	lpm	r18, Z+
    5034:	34 91       	lpm	r19, Z
    5036:	d3 01       	movw	r26, r6
    5038:	d7 96       	adiw	r26, 0x37	; 55
    503a:	2c 93       	st	X, r18
    503c:	d7 97       	sbiw	r26, 0x37	; 55
    503e:	d8 96       	adiw	r26, 0x38	; 56
    5040:	3c 93       	st	X, r19
    5042:	d8 97       	sbiw	r26, 0x38	; 56
    5044:	fc 01       	movw	r30, r24
    5046:	e5 56       	subi	r30, 0x65	; 101
    5048:	fa 4c       	sbci	r31, 0xCA	; 202
    504a:	84 91       	lpm	r24, Z
    504c:	ae 5b       	subi	r26, 0xBE	; 190
    504e:	bf 4f       	sbci	r27, 0xFF	; 255
    5050:	8c 93       	st	X, r24
    5052:	81 2f       	mov	r24, r17
    5054:	90 e0       	ldi	r25, 0x00	; 0
    5056:	fc 01       	movw	r30, r24
    5058:	e5 54       	subi	r30, 0x45	; 69
    505a:	fa 4c       	sbci	r31, 0xCA	; 202
    505c:	e4 91       	lpm	r30, Z
    505e:	f0 e0       	ldi	r31, 0x00	; 0
    5060:	ee 0f       	add	r30, r30
    5062:	ff 1f       	adc	r31, r31
    5064:	e9 57       	subi	r30, 0x79	; 121
    5066:	fa 4c       	sbci	r31, 0xCA	; 202
    5068:	25 91       	lpm	r18, Z+
    506a:	34 91       	lpm	r19, Z
    506c:	f3 01       	movw	r30, r6
    506e:	21 af       	std	Z+57, r18	; 0x39
    5070:	32 af       	std	Z+58, r19	; 0x3a
    5072:	fc 01       	movw	r30, r24
    5074:	e5 56       	subi	r30, 0x65	; 101
    5076:	fa 4c       	sbci	r31, 0xCA	; 202
    5078:	84 91       	lpm	r24, Z
    507a:	d3 01       	movw	r26, r6
    507c:	ad 5b       	subi	r26, 0xBD	; 189
    507e:	bf 4f       	sbci	r27, 0xFF	; 255
    5080:	8c 93       	st	X, r24
    5082:	10 e0       	ldi	r17, 0x00	; 0
    5084:	f8 01       	movw	r30, r16
    5086:	e5 54       	subi	r30, 0x45	; 69
    5088:	fa 4c       	sbci	r31, 0xCA	; 202
    508a:	e4 91       	lpm	r30, Z
    508c:	f0 e0       	ldi	r31, 0x00	; 0
    508e:	ee 0f       	add	r30, r30
    5090:	ff 1f       	adc	r31, r31
    5092:	e9 57       	subi	r30, 0x79	; 121
    5094:	fa 4c       	sbci	r31, 0xCA	; 202
    5096:	85 91       	lpm	r24, Z+
    5098:	94 91       	lpm	r25, Z
    509a:	d3 01       	movw	r26, r6
    509c:	db 96       	adiw	r26, 0x3b	; 59
    509e:	8c 93       	st	X, r24
    50a0:	db 97       	sbiw	r26, 0x3b	; 59
    50a2:	dc 96       	adiw	r26, 0x3c	; 60
    50a4:	9c 93       	st	X, r25
    50a6:	dc 97       	sbiw	r26, 0x3c	; 60
    50a8:	f8 01       	movw	r30, r16
    50aa:	e5 56       	subi	r30, 0x65	; 101
    50ac:	fa 4c       	sbci	r31, 0xCA	; 202
    50ae:	04 91       	lpm	r16, Z
    50b0:	ac 5b       	subi	r26, 0xBC	; 188
    50b2:	bf 4f       	sbci	r27, 0xFF	; 255
    50b4:	0c 93       	st	X, r16
    50b6:	84 e0       	ldi	r24, 0x04	; 4
    50b8:	f3 01       	movw	r30, r6
    50ba:	80 ab       	std	Z+48, r24	; 0x30
    50bc:	e2 5b       	subi	r30, 0xB2	; 178
    50be:	ff 4f       	sbci	r31, 0xFF	; 255
    50c0:	83 e0       	ldi	r24, 0x03	; 3
    50c2:	80 83       	st	Z, r24
    50c4:	d3 01       	movw	r26, r6
    50c6:	9f 96       	adiw	r26, 0x2f	; 47
    50c8:	8c 91       	ld	r24, X
    50ca:	81 50       	subi	r24, 0x01	; 1
    50cc:	f3 01       	movw	r30, r6
    50ce:	e3 5b       	subi	r30, 0xB3	; 179
    50d0:	ff 4f       	sbci	r31, 0xFF	; 255
    50d2:	80 83       	st	Z, r24
    50d4:	f3 01       	movw	r30, r6
    50d6:	12 aa       	std	Z+50, r1	; 0x32
    50d8:	11 aa       	std	Z+49, r1	; 0x31
    50da:	df 91       	pop	r29
    50dc:	cf 91       	pop	r28
    50de:	1f 91       	pop	r17
    50e0:	0f 91       	pop	r16
    50e2:	ff 90       	pop	r15
    50e4:	ef 90       	pop	r14
    50e6:	df 90       	pop	r13
    50e8:	cf 90       	pop	r12
    50ea:	bf 90       	pop	r11
    50ec:	af 90       	pop	r10
    50ee:	8f 90       	pop	r8
    50f0:	7f 90       	pop	r7
    50f2:	6f 90       	pop	r6
    50f4:	5f 90       	pop	r5
    50f6:	4f 90       	pop	r4
    50f8:	08 95       	ret

000050fa <RGBmatrixPanel_Constructor_16x32>:
    50fa:	8f 92       	push	r8
    50fc:	af 92       	push	r10
    50fe:	cf 92       	push	r12
    5100:	ef 92       	push	r14
    5102:	0f 93       	push	r16
    5104:	8a 2c       	mov	r8, r10
    5106:	ac 2c       	mov	r10, r12
    5108:	ce 2c       	mov	r12, r14
    510a:	e0 2e       	mov	r14, r16
    510c:	02 2f       	mov	r16, r18
    510e:	24 2f       	mov	r18, r20
    5110:	46 2f       	mov	r20, r22
    5112:	68 e0       	ldi	r22, 0x08	; 8
    5114:	d3 de       	rcall	.-602    	; 0x4ebc <RGBmatrixPanel_init>
    5116:	0f 91       	pop	r16
    5118:	ef 90       	pop	r14
    511a:	cf 90       	pop	r12
    511c:	af 90       	pop	r10
    511e:	8f 90       	pop	r8
    5120:	08 95       	ret

00005122 <RGBmatrixPanel_begin>:
    5122:	cf 93       	push	r28
    5124:	df 93       	push	r29
    5126:	ec 01       	movw	r28, r24
    5128:	19 aa       	std	Y+49, r1	; 0x31
    512a:	fc 01       	movw	r30, r24
    512c:	e1 5b       	subi	r30, 0xB1	; 177
    512e:	ff 4f       	sbci	r31, 0xFF	; 255
    5130:	8d a5       	ldd	r24, Y+45	; 0x2d
    5132:	9e a5       	ldd	r25, Y+46	; 0x2e
    5134:	91 83       	std	Z+1, r25	; 0x01
    5136:	80 83       	st	Z, r24
    5138:	d0 93 7c 00 	sts	0x007C, r29
    513c:	c0 93 7b 00 	sts	0x007B, r28
    5140:	fe 01       	movw	r30, r28
    5142:	ea 5b       	subi	r30, 0xBA	; 186
    5144:	ff 4f       	sbci	r31, 0xFF	; 255
    5146:	61 e0       	ldi	r22, 0x01	; 1
    5148:	80 81       	ld	r24, Z
    514a:	1e dd       	rcall	.-1476   	; 0x4b88 <pinMode>
    514c:	95 b3       	in	r25, 0x15	; 21
    514e:	8f ad       	ldd	r24, Y+63	; 0x3f
    5150:	80 95       	com	r24
    5152:	89 23       	and	r24, r25
    5154:	85 bb       	out	0x15, r24	; 21
    5156:	fe 01       	movw	r30, r28
    5158:	e9 5b       	subi	r30, 0xB9	; 185
    515a:	ff 4f       	sbci	r31, 0xFF	; 255
    515c:	61 e0       	ldi	r22, 0x01	; 1
    515e:	80 81       	ld	r24, Z
    5160:	13 dd       	rcall	.-1498   	; 0x4b88 <pinMode>
    5162:	eb a9       	ldd	r30, Y+51	; 0x33
    5164:	fc a9       	ldd	r31, Y+52	; 0x34
    5166:	90 81       	ld	r25, Z
    5168:	de 01       	movw	r26, r28
    516a:	a0 5c       	subi	r26, 0xC0	; 192
    516c:	bf 4f       	sbci	r27, 0xFF	; 255
    516e:	8c 91       	ld	r24, X
    5170:	80 95       	com	r24
    5172:	89 23       	and	r24, r25
    5174:	80 83       	st	Z, r24
    5176:	fe 01       	movw	r30, r28
    5178:	e8 5b       	subi	r30, 0xB8	; 184
    517a:	ff 4f       	sbci	r31, 0xFF	; 255
    517c:	61 e0       	ldi	r22, 0x01	; 1
    517e:	80 81       	ld	r24, Z
    5180:	03 dd       	rcall	.-1530   	; 0x4b88 <pinMode>
    5182:	ed a9       	ldd	r30, Y+53	; 0x35
    5184:	fe a9       	ldd	r31, Y+54	; 0x36
    5186:	90 81       	ld	r25, Z
    5188:	de 01       	movw	r26, r28
    518a:	af 5b       	subi	r26, 0xBF	; 191
    518c:	bf 4f       	sbci	r27, 0xFF	; 255
    518e:	8c 91       	ld	r24, X
    5190:	89 2b       	or	r24, r25
    5192:	80 83       	st	Z, r24
    5194:	fe 01       	movw	r30, r28
    5196:	e7 5b       	subi	r30, 0xB7	; 183
    5198:	ff 4f       	sbci	r31, 0xFF	; 255
    519a:	61 e0       	ldi	r22, 0x01	; 1
    519c:	80 81       	ld	r24, Z
    519e:	f4 dc       	rcall	.-1560   	; 0x4b88 <pinMode>
    51a0:	ef a9       	ldd	r30, Y+55	; 0x37
    51a2:	f8 ad       	ldd	r31, Y+56	; 0x38
    51a4:	90 81       	ld	r25, Z
    51a6:	de 01       	movw	r26, r28
    51a8:	ae 5b       	subi	r26, 0xBE	; 190
    51aa:	bf 4f       	sbci	r27, 0xFF	; 255
    51ac:	8c 91       	ld	r24, X
    51ae:	80 95       	com	r24
    51b0:	89 23       	and	r24, r25
    51b2:	80 83       	st	Z, r24
    51b4:	fe 01       	movw	r30, r28
    51b6:	e6 5b       	subi	r30, 0xB6	; 182
    51b8:	ff 4f       	sbci	r31, 0xFF	; 255
    51ba:	61 e0       	ldi	r22, 0x01	; 1
    51bc:	80 81       	ld	r24, Z
    51be:	e4 dc       	rcall	.-1592   	; 0x4b88 <pinMode>
    51c0:	e9 ad       	ldd	r30, Y+57	; 0x39
    51c2:	fa ad       	ldd	r31, Y+58	; 0x3a
    51c4:	90 81       	ld	r25, Z
    51c6:	de 01       	movw	r26, r28
    51c8:	ad 5b       	subi	r26, 0xBD	; 189
    51ca:	bf 4f       	sbci	r27, 0xFF	; 255
    51cc:	8c 91       	ld	r24, X
    51ce:	80 95       	com	r24
    51d0:	89 23       	and	r24, r25
    51d2:	80 83       	st	Z, r24
    51d4:	fe 01       	movw	r30, r28
    51d6:	e5 5b       	subi	r30, 0xB5	; 181
    51d8:	ff 4f       	sbci	r31, 0xFF	; 255
    51da:	61 e0       	ldi	r22, 0x01	; 1
    51dc:	80 81       	ld	r24, Z
    51de:	d4 dc       	rcall	.-1624   	; 0x4b88 <pinMode>
    51e0:	eb ad       	ldd	r30, Y+59	; 0x3b
    51e2:	fc ad       	ldd	r31, Y+60	; 0x3c
    51e4:	90 81       	ld	r25, Z
    51e6:	de 01       	movw	r26, r28
    51e8:	ac 5b       	subi	r26, 0xBC	; 188
    51ea:	bf 4f       	sbci	r27, 0xFF	; 255
    51ec:	8c 91       	ld	r24, X
    51ee:	80 95       	com	r24
    51f0:	89 23       	and	r24, r25
    51f2:	80 83       	st	Z, r24
    51f4:	8f a5       	ldd	r24, Y+47	; 0x2f
    51f6:	89 30       	cpi	r24, 0x09	; 9
    51f8:	78 f0       	brcs	.+30     	; 0x5218 <RGBmatrixPanel_begin+0xf6>
    51fa:	fe 01       	movw	r30, r28
    51fc:	e4 5b       	subi	r30, 0xB4	; 180
    51fe:	ff 4f       	sbci	r31, 0xFF	; 255
    5200:	61 e0       	ldi	r22, 0x01	; 1
    5202:	80 81       	ld	r24, Z
    5204:	c1 dc       	rcall	.-1662   	; 0x4b88 <pinMode>
    5206:	ed ad       	ldd	r30, Y+61	; 0x3d
    5208:	fe ad       	ldd	r31, Y+62	; 0x3e
    520a:	90 81       	ld	r25, Z
    520c:	cb 5b       	subi	r28, 0xBB	; 187
    520e:	df 4f       	sbci	r29, 0xFF	; 255
    5210:	88 81       	ld	r24, Y
    5212:	80 95       	com	r24
    5214:	89 23       	and	r24, r25
    5216:	80 83       	st	Z, r24
    5218:	8c ef       	ldi	r24, 0xFC	; 252
    521a:	81 bb       	out	0x11, r24	; 17
    521c:	12 ba       	out	0x12, r1	; 18
    521e:	82 e0       	ldi	r24, 0x02	; 2
    5220:	8f bd       	out	0x2f, r24	; 47
    5222:	89 e1       	ldi	r24, 0x19	; 25
    5224:	8e bd       	out	0x2e, r24	; 46
    5226:	84 e6       	ldi	r24, 0x64	; 100
    5228:	90 e0       	ldi	r25, 0x00	; 0
    522a:	97 bd       	out	0x27, r25	; 39
    522c:	86 bd       	out	0x26, r24	; 38
    522e:	89 b7       	in	r24, 0x39	; 57
    5230:	84 60       	ori	r24, 0x04	; 4
    5232:	89 bf       	out	0x39, r24	; 57
    5234:	78 94       	sei
    5236:	df 91       	pop	r29
    5238:	cf 91       	pop	r28
    523a:	08 95       	ret

0000523c <RGBmatrixPanel_Color333>:
    523c:	86 2f       	mov	r24, r22
    523e:	86 70       	andi	r24, 0x06	; 6
    5240:	f8 2f       	mov	r31, r24
    5242:	ff 0f       	add	r31, r31
    5244:	ff 0f       	add	r31, r31
    5246:	e0 e0       	ldi	r30, 0x00	; 0
    5248:	96 2f       	mov	r25, r22
    524a:	92 95       	swap	r25
    524c:	99 0f       	add	r25, r25
    524e:	90 7e       	andi	r25, 0xE0	; 224
    5250:	80 e0       	ldi	r24, 0x00	; 0
    5252:	8e 2b       	or	r24, r30
    5254:	9f 2b       	or	r25, r31
    5256:	74 2f       	mov	r23, r20
    5258:	77 70       	andi	r23, 0x07	; 7
    525a:	60 e0       	ldi	r22, 0x00	; 0
    525c:	68 2b       	or	r22, r24
    525e:	79 2b       	or	r23, r25
    5260:	80 e2       	ldi	r24, 0x20	; 32
    5262:	48 9f       	mul	r20, r24
    5264:	a0 01       	movw	r20, r0
    5266:	11 24       	eor	r1, r1
    5268:	55 27       	eor	r21, r21
    526a:	64 2b       	or	r22, r20
    526c:	75 2b       	or	r23, r21
    526e:	a2 2f       	mov	r26, r18
    5270:	a7 70       	andi	r26, 0x07	; 7
    5272:	b0 e0       	ldi	r27, 0x00	; 0
    5274:	aa 0f       	add	r26, r26
    5276:	bb 1f       	adc	r27, r27
    5278:	aa 0f       	add	r26, r26
    527a:	bb 1f       	adc	r27, r27
    527c:	6a 2b       	or	r22, r26
    527e:	7b 2b       	or	r23, r27
    5280:	26 70       	andi	r18, 0x06	; 6
    5282:	30 e0       	ldi	r19, 0x00	; 0
    5284:	35 95       	asr	r19
    5286:	27 95       	ror	r18
    5288:	62 2b       	or	r22, r18
    528a:	73 2b       	or	r23, r19
    528c:	86 2f       	mov	r24, r22
    528e:	97 2f       	mov	r25, r23
    5290:	08 95       	ret

00005292 <RGBmatrixPanel_Color888>:
    5292:	4c 7f       	andi	r20, 0xFC	; 252
    5294:	30 e2       	ldi	r19, 0x20	; 32
    5296:	43 9f       	mul	r20, r19
    5298:	c0 01       	movw	r24, r0
    529a:	11 24       	eor	r1, r1
    529c:	26 95       	lsr	r18
    529e:	26 95       	lsr	r18
    52a0:	26 95       	lsr	r18
    52a2:	ac 01       	movw	r20, r24
    52a4:	42 2b       	or	r20, r18
    52a6:	9a 01       	movw	r18, r20
    52a8:	68 7f       	andi	r22, 0xF8	; 248
    52aa:	96 2f       	mov	r25, r22
    52ac:	99 0f       	add	r25, r25
    52ae:	99 0f       	add	r25, r25
    52b0:	99 0f       	add	r25, r25
    52b2:	80 e0       	ldi	r24, 0x00	; 0
    52b4:	28 2b       	or	r18, r24
    52b6:	39 2b       	or	r19, r25
    52b8:	82 2f       	mov	r24, r18
    52ba:	93 2f       	mov	r25, r19
    52bc:	08 95       	ret

000052be <RGBmatrixPanel_updateDisplay>:
// being issued to the LED matrix for the *next* bitplane and/or row
// while the *current* plane/row is being shown.  As a result, the
// counter variables change between past/present/future tense in mid-
// function...hopefully tenses are sufficiently commented.

void RGBmatrixPanel_updateDisplay(RGBmatrixPanel *rgbmp) {
    52be:	cf 93       	push	r28
    52c0:	df 93       	push	r29
    52c2:	dc 01       	movw	r26, r24
  uint8_t  i, tick, tock, *ptr;
  uint16_t t, duration;

  *rgbmp->_oeport  |= rgbmp->_oepin;  // Disable LED output during row/plane switchover
    52c4:	d5 96       	adiw	r26, 0x35	; 53
    52c6:	ed 91       	ld	r30, X+
    52c8:	fc 91       	ld	r31, X
    52ca:	d6 97       	sbiw	r26, 0x36	; 54
    52cc:	90 81       	ld	r25, Z
    52ce:	ed 01       	movw	r28, r26
    52d0:	cf 5b       	subi	r28, 0xBF	; 191
    52d2:	df 4f       	sbci	r29, 0xFF	; 255
    52d4:	88 81       	ld	r24, Y
    52d6:	89 2b       	or	r24, r25
    52d8:	80 83       	st	Z, r24
  *rgbmp->_latport |= rgbmp->_latpin; // Latch data loaded during *prior* interrupt
    52da:	d3 96       	adiw	r26, 0x33	; 51
    52dc:	ed 91       	ld	r30, X+
    52de:	fc 91       	ld	r31, X
    52e0:	d4 97       	sbiw	r26, 0x34	; 52
    52e2:	90 81       	ld	r25, Z
    52e4:	ed 01       	movw	r28, r26
    52e6:	c0 5c       	subi	r28, 0xC0	; 192
    52e8:	df 4f       	sbci	r29, 0xFF	; 255
    52ea:	88 81       	ld	r24, Y
    52ec:	89 2b       	or	r24, r25
    52ee:	80 83       	st	Z, r24
  // This is because duration is the display time for the data loaded
  // on the PRIOR interrupt.  CALLOVERHEAD is subtracted from the
  // result because that time is implicit between the timer overflow
  // (interrupt triggered) and the initial LEDs-off line at the start
  // of this method.
  t = (rgbmp->_nRows > 8) ? LOOPTIME : (LOOPTIME * 2);
    52f0:	9f 96       	adiw	r26, 0x2f	; 47
    52f2:	3c 91       	ld	r19, X
    52f4:	9f 97       	sbiw	r26, 0x2f	; 47
    52f6:	39 30       	cpi	r19, 0x09	; 9
    52f8:	18 f0       	brcs	.+6      	; 0x5300 <RGBmatrixPanel_updateDisplay+0x42>
    52fa:	88 ec       	ldi	r24, 0xC8	; 200
    52fc:	90 e0       	ldi	r25, 0x00	; 0
    52fe:	02 c0       	rjmp	.+4      	; 0x5304 <RGBmatrixPanel_updateDisplay+0x46>
    5300:	80 e9       	ldi	r24, 0x90	; 144
    5302:	91 e0       	ldi	r25, 0x01	; 1
  duration = ((t + CALLOVERHEAD * 2) << rgbmp->_plane) - CALLOVERHEAD;
    5304:	fd 01       	movw	r30, r26
    5306:	e2 5b       	subi	r30, 0xB2	; 178
    5308:	ff 4f       	sbci	r31, 0xFF	; 255
    530a:	20 81       	ld	r18, Z
    530c:	88 58       	subi	r24, 0x88	; 136
    530e:	9f 4f       	sbci	r25, 0xFF	; 255
    5310:	02 c0       	rjmp	.+4      	; 0x5316 <RGBmatrixPanel_updateDisplay+0x58>
    5312:	88 0f       	add	r24, r24
    5314:	99 1f       	adc	r25, r25
    5316:	2a 95       	dec	r18
    5318:	e2 f7       	brpl	.-8      	; 0x5312 <RGBmatrixPanel_updateDisplay+0x54>
    531a:	cc 97       	sbiw	r24, 0x3c	; 60
  // advancing to the next line.  While it might seem beneficial to
  // advance lines every time and interleave the planes to reduce
  // vertical scanning artifacts, in practice with this panel it causes
  // a green 'ghosting' effect on black pixels, a much worse artifact.

  if(++rgbmp->_plane >= rgbmp->_nPlanes) {      // Advance plane counter.  Maxed out?
    531c:	20 81       	ld	r18, Z
    531e:	2f 5f       	subi	r18, 0xFF	; 255
    5320:	20 83       	st	Z, r18
    5322:	d0 96       	adiw	r26, 0x30	; 48
    5324:	4c 91       	ld	r20, X
    5326:	d0 97       	sbiw	r26, 0x30	; 48
    5328:	24 17       	cp	r18, r20
    532a:	98 f1       	brcs	.+102    	; 0x5392 <RGBmatrixPanel_updateDisplay+0xd4>
    rgbmp->_plane = 0;                  // Yes, reset to plane 0, and
    532c:	fd 01       	movw	r30, r26
    532e:	e2 5b       	subi	r30, 0xB2	; 178
    5330:	ff 4f       	sbci	r31, 0xFF	; 255
    5332:	10 82       	st	Z, r1
    if(++rgbmp->_row >= rgbmp->_nRows) {        // advance row counter.  Maxed out?
    5334:	fd 01       	movw	r30, r26
    5336:	e3 5b       	subi	r30, 0xB3	; 179
    5338:	ff 4f       	sbci	r31, 0xFF	; 255
    533a:	20 81       	ld	r18, Z
    533c:	2f 5f       	subi	r18, 0xFF	; 255
    533e:	20 83       	st	Z, r18
    5340:	23 17       	cp	r18, r19
    5342:	08 f4       	brcc	.+2      	; 0x5346 <RGBmatrixPanel_updateDisplay+0x88>
    5344:	aa c0       	rjmp	.+340    	; 0x549a <RGBmatrixPanel_updateDisplay+0x1dc>
      rgbmp->_row     = 0;              // Yes, reset row counter, then...
    5346:	fd 01       	movw	r30, r26
    5348:	e3 5b       	subi	r30, 0xB3	; 179
    534a:	ff 4f       	sbci	r31, 0xFF	; 255
    534c:	10 82       	st	Z, r1
      if(rgbmp->_swapflag == 1) {    // Swap front/back buffers if requested
    534e:	d2 96       	adiw	r26, 0x32	; 50
    5350:	2c 91       	ld	r18, X
    5352:	d2 97       	sbiw	r26, 0x32	; 50
    5354:	21 30       	cpi	r18, 0x01	; 1
    5356:	51 f4       	brne	.+20     	; 0x536c <RGBmatrixPanel_updateDisplay+0xae>
        rgbmp->_backindex = 1 - rgbmp->_backindex;
    5358:	d1 96       	adiw	r26, 0x31	; 49
    535a:	3c 91       	ld	r19, X
    535c:	d1 97       	sbiw	r26, 0x31	; 49
    535e:	23 1b       	sub	r18, r19
    5360:	d1 96       	adiw	r26, 0x31	; 49
    5362:	2c 93       	st	X, r18
    5364:	d1 97       	sbiw	r26, 0x31	; 49
        rgbmp->_swapflag  = 0;
    5366:	d2 96       	adiw	r26, 0x32	; 50
    5368:	1c 92       	st	X, r1
    536a:	d2 97       	sbiw	r26, 0x32	; 50
      }
      rgbmp->_buffptr = rgbmp->_matrixbuff[1-rgbmp->_backindex]; // Reset into front buffer
    536c:	fd 01       	movw	r30, r26
    536e:	e1 5b       	subi	r30, 0xB1	; 177
    5370:	ff 4f       	sbci	r31, 0xFF	; 255
    5372:	d1 96       	adiw	r26, 0x31	; 49
    5374:	2c 91       	ld	r18, X
    5376:	d1 97       	sbiw	r26, 0x31	; 49
    5378:	c1 e0       	ldi	r28, 0x01	; 1
    537a:	d0 e0       	ldi	r29, 0x00	; 0
    537c:	c2 1b       	sub	r28, r18
    537e:	d1 09       	sbc	r29, r1
    5380:	cc 0f       	add	r28, r28
    5382:	dd 1f       	adc	r29, r29
    5384:	ca 0f       	add	r28, r26
    5386:	db 1f       	adc	r29, r27
    5388:	2b a5       	ldd	r18, Y+43	; 0x2b
    538a:	3c a5       	ldd	r19, Y+44	; 0x2c
    538c:	31 83       	std	Z+1, r19	; 0x01
    538e:	20 83       	st	Z, r18
    5390:	84 c0       	rjmp	.+264    	; 0x549a <RGBmatrixPanel_updateDisplay+0x1dc>
    }
  } else if(rgbmp->_plane == 1) {
    5392:	fd 01       	movw	r30, r26
    5394:	e2 5b       	subi	r30, 0xB2	; 178
    5396:	ff 4f       	sbci	r31, 0xFF	; 255
    5398:	20 81       	ld	r18, Z
    539a:	21 30       	cpi	r18, 0x01	; 1
    539c:	09 f0       	breq	.+2      	; 0x53a0 <RGBmatrixPanel_updateDisplay+0xe2>
    539e:	7d c0       	rjmp	.+250    	; 0x549a <RGBmatrixPanel_updateDisplay+0x1dc>
    // Plane 0 was loaded on prior interrupt invocation and is about to
    // latch now, so update the row address lines before we do that:
    if(rgbmp->_row & 0x1)   *rgbmp->_addraport |=  rgbmp->_addrapin;
    53a0:	fd 01       	movw	r30, r26
    53a2:	e3 5b       	subi	r30, 0xB3	; 179
    53a4:	ff 4f       	sbci	r31, 0xFF	; 255
    53a6:	20 81       	ld	r18, Z
    53a8:	20 ff       	sbrs	r18, 0
    53aa:	0c c0       	rjmp	.+24     	; 0x53c4 <RGBmatrixPanel_updateDisplay+0x106>
    53ac:	d7 96       	adiw	r26, 0x37	; 55
    53ae:	ed 91       	ld	r30, X+
    53b0:	fc 91       	ld	r31, X
    53b2:	d8 97       	sbiw	r26, 0x38	; 56
    53b4:	30 81       	ld	r19, Z
    53b6:	ed 01       	movw	r28, r26
    53b8:	ce 5b       	subi	r28, 0xBE	; 190
    53ba:	df 4f       	sbci	r29, 0xFF	; 255
    53bc:	28 81       	ld	r18, Y
    53be:	23 2b       	or	r18, r19
    53c0:	20 83       	st	Z, r18
    53c2:	0c c0       	rjmp	.+24     	; 0x53dc <RGBmatrixPanel_updateDisplay+0x11e>
    else            *rgbmp->_addraport &= ~rgbmp->_addrapin;
    53c4:	d7 96       	adiw	r26, 0x37	; 55
    53c6:	ed 91       	ld	r30, X+
    53c8:	fc 91       	ld	r31, X
    53ca:	d8 97       	sbiw	r26, 0x38	; 56
    53cc:	30 81       	ld	r19, Z
    53ce:	ed 01       	movw	r28, r26
    53d0:	ce 5b       	subi	r28, 0xBE	; 190
    53d2:	df 4f       	sbci	r29, 0xFF	; 255
    53d4:	28 81       	ld	r18, Y
    53d6:	20 95       	com	r18
    53d8:	23 23       	and	r18, r19
    53da:	20 83       	st	Z, r18
    if(rgbmp->_row & 0x2)   *rgbmp->_addrbport |=  rgbmp->_addrbpin;
    53dc:	fd 01       	movw	r30, r26
    53de:	e3 5b       	subi	r30, 0xB3	; 179
    53e0:	ff 4f       	sbci	r31, 0xFF	; 255
    53e2:	20 81       	ld	r18, Z
    53e4:	21 ff       	sbrs	r18, 1
    53e6:	0c c0       	rjmp	.+24     	; 0x5400 <RGBmatrixPanel_updateDisplay+0x142>
    53e8:	d9 96       	adiw	r26, 0x39	; 57
    53ea:	ed 91       	ld	r30, X+
    53ec:	fc 91       	ld	r31, X
    53ee:	da 97       	sbiw	r26, 0x3a	; 58
    53f0:	30 81       	ld	r19, Z
    53f2:	ed 01       	movw	r28, r26
    53f4:	cd 5b       	subi	r28, 0xBD	; 189
    53f6:	df 4f       	sbci	r29, 0xFF	; 255
    53f8:	28 81       	ld	r18, Y
    53fa:	23 2b       	or	r18, r19
    53fc:	20 83       	st	Z, r18
    53fe:	0c c0       	rjmp	.+24     	; 0x5418 <RGBmatrixPanel_updateDisplay+0x15a>
    else            *rgbmp->_addrbport &= ~rgbmp->_addrbpin;
    5400:	d9 96       	adiw	r26, 0x39	; 57
    5402:	ed 91       	ld	r30, X+
    5404:	fc 91       	ld	r31, X
    5406:	da 97       	sbiw	r26, 0x3a	; 58
    5408:	30 81       	ld	r19, Z
    540a:	ed 01       	movw	r28, r26
    540c:	cd 5b       	subi	r28, 0xBD	; 189
    540e:	df 4f       	sbci	r29, 0xFF	; 255
    5410:	28 81       	ld	r18, Y
    5412:	20 95       	com	r18
    5414:	23 23       	and	r18, r19
    5416:	20 83       	st	Z, r18
    if(rgbmp->_row & 0x4)   *rgbmp->_addrcport |=  rgbmp->_addrcpin;
    5418:	fd 01       	movw	r30, r26
    541a:	e3 5b       	subi	r30, 0xB3	; 179
    541c:	ff 4f       	sbci	r31, 0xFF	; 255
    541e:	20 81       	ld	r18, Z
    5420:	22 ff       	sbrs	r18, 2
    5422:	0c c0       	rjmp	.+24     	; 0x543c <RGBmatrixPanel_updateDisplay+0x17e>
    5424:	db 96       	adiw	r26, 0x3b	; 59
    5426:	ed 91       	ld	r30, X+
    5428:	fc 91       	ld	r31, X
    542a:	dc 97       	sbiw	r26, 0x3c	; 60
    542c:	30 81       	ld	r19, Z
    542e:	ed 01       	movw	r28, r26
    5430:	cc 5b       	subi	r28, 0xBC	; 188
    5432:	df 4f       	sbci	r29, 0xFF	; 255
    5434:	28 81       	ld	r18, Y
    5436:	23 2b       	or	r18, r19
    5438:	20 83       	st	Z, r18
    543a:	0c c0       	rjmp	.+24     	; 0x5454 <RGBmatrixPanel_updateDisplay+0x196>
    else            *rgbmp->_addrcport &= ~rgbmp->_addrcpin;
    543c:	db 96       	adiw	r26, 0x3b	; 59
    543e:	ed 91       	ld	r30, X+
    5440:	fc 91       	ld	r31, X
    5442:	dc 97       	sbiw	r26, 0x3c	; 60
    5444:	30 81       	ld	r19, Z
    5446:	ed 01       	movw	r28, r26
    5448:	cc 5b       	subi	r28, 0xBC	; 188
    544a:	df 4f       	sbci	r29, 0xFF	; 255
    544c:	28 81       	ld	r18, Y
    544e:	20 95       	com	r18
    5450:	23 23       	and	r18, r19
    5452:	20 83       	st	Z, r18
    if(rgbmp->_nRows > 8) {
    5454:	9f 96       	adiw	r26, 0x2f	; 47
    5456:	2c 91       	ld	r18, X
    5458:	9f 97       	sbiw	r26, 0x2f	; 47
    545a:	29 30       	cpi	r18, 0x09	; 9
    545c:	f0 f0       	brcs	.+60     	; 0x549a <RGBmatrixPanel_updateDisplay+0x1dc>
      if(rgbmp->_row & 0x8) *rgbmp->_addrdport |=  rgbmp->_addrdpin;
    545e:	fd 01       	movw	r30, r26
    5460:	e3 5b       	subi	r30, 0xB3	; 179
    5462:	ff 4f       	sbci	r31, 0xFF	; 255
    5464:	20 81       	ld	r18, Z
    5466:	23 ff       	sbrs	r18, 3
    5468:	0c c0       	rjmp	.+24     	; 0x5482 <RGBmatrixPanel_updateDisplay+0x1c4>
    546a:	dd 96       	adiw	r26, 0x3d	; 61
    546c:	ed 91       	ld	r30, X+
    546e:	fc 91       	ld	r31, X
    5470:	de 97       	sbiw	r26, 0x3e	; 62
    5472:	30 81       	ld	r19, Z
    5474:	ed 01       	movw	r28, r26
    5476:	cb 5b       	subi	r28, 0xBB	; 187
    5478:	df 4f       	sbci	r29, 0xFF	; 255
    547a:	28 81       	ld	r18, Y
    547c:	23 2b       	or	r18, r19
    547e:	20 83       	st	Z, r18
    5480:	0c c0       	rjmp	.+24     	; 0x549a <RGBmatrixPanel_updateDisplay+0x1dc>
      else          *rgbmp->_addrdport &= ~rgbmp->_addrdpin;
    5482:	dd 96       	adiw	r26, 0x3d	; 61
    5484:	ed 91       	ld	r30, X+
    5486:	fc 91       	ld	r31, X
    5488:	de 97       	sbiw	r26, 0x3e	; 62
    548a:	20 81       	ld	r18, Z
    548c:	ed 01       	movw	r28, r26
    548e:	cb 5b       	subi	r28, 0xBB	; 187
    5490:	df 4f       	sbci	r29, 0xFF	; 255
    5492:	38 81       	ld	r19, Y
    5494:	30 95       	com	r19
    5496:	23 23       	and	r18, r19
    5498:	20 83       	st	Z, r18
    }
  }

  // _buffptr, being 'volatile' type, doesn't take well to optimization.
  // A local register copy can speed some things up:
  ptr = (uint8_t *)rgbmp->_buffptr;
    549a:	fd 01       	movw	r30, r26
    549c:	e1 5b       	subi	r30, 0xB1	; 177
    549e:	ff 4f       	sbci	r31, 0xFF	; 255
    54a0:	01 90       	ld	r0, Z+
    54a2:	f0 81       	ld	r31, Z
    54a4:	e0 2d       	mov	r30, r0

  ICR1      = duration; // Set interval for next interrupt
    54a6:	97 bd       	out	0x27, r25	; 39
    54a8:	86 bd       	out	0x26, r24	; 38
  TCNT1     = 0;        // Restart interrupt timer
    54aa:	1d bc       	out	0x2d, r1	; 45
    54ac:	1c bc       	out	0x2c, r1	; 44
  *rgbmp->_oeport  &= ~rgbmp->_oepin;   // Re-enable output
    54ae:	d5 96       	adiw	r26, 0x35	; 53
    54b0:	4d 91       	ld	r20, X+
    54b2:	5c 91       	ld	r21, X
    54b4:	d6 97       	sbiw	r26, 0x36	; 54
    54b6:	ea 01       	movw	r28, r20
    54b8:	28 81       	ld	r18, Y
    54ba:	cd 01       	movw	r24, r26
    54bc:	8f 5b       	subi	r24, 0xBF	; 191
    54be:	9f 4f       	sbci	r25, 0xFF	; 255
    54c0:	ec 01       	movw	r28, r24
    54c2:	88 81       	ld	r24, Y
    54c4:	80 95       	com	r24
    54c6:	82 23       	and	r24, r18
    54c8:	ea 01       	movw	r28, r20
    54ca:	88 83       	st	Y, r24
  *rgbmp->_latport &= ~rgbmp->_latpin;  // Latch down
    54cc:	d3 96       	adiw	r26, 0x33	; 51
    54ce:	4d 91       	ld	r20, X+
    54d0:	5c 91       	ld	r21, X
    54d2:	d4 97       	sbiw	r26, 0x34	; 52
    54d4:	ea 01       	movw	r28, r20
    54d6:	28 81       	ld	r18, Y
    54d8:	cd 01       	movw	r24, r26
    54da:	80 5c       	subi	r24, 0xC0	; 192
    54dc:	9f 4f       	sbci	r25, 0xFF	; 255
    54de:	ec 01       	movw	r28, r24
    54e0:	88 81       	ld	r24, Y
    54e2:	80 95       	com	r24
    54e4:	82 23       	and	r24, r18
    54e6:	ea 01       	movw	r28, r20
    54e8:	88 83       	st	Y, r24
  // not have to load/modify/store bits every single time.  It's a
  // somewhat rude trick that ONLY works because the interrupt
  // handler is set ISR_BLOCK, halting any other interrupts that
  // might otherwise also be twiddling the port at the same time
  // (else this would clobber them).
  tock = SCLKPORT;
    54ea:	65 b3       	in	r22, 0x15	; 21
  tick = tock | rgbmp->_sclkpin;
    54ec:	df 96       	adiw	r26, 0x3f	; 63
    54ee:	7c 91       	ld	r23, X
    54f0:	df 97       	sbiw	r26, 0x3f	; 63
    54f2:	76 2b       	or	r23, r22

  if(rgbmp->_plane > 0) { // 188 ticks from TCNT1=0 (above) to end of function
    54f4:	ed 01       	movw	r28, r26
    54f6:	c2 5b       	subi	r28, 0xB2	; 178
    54f8:	df 4f       	sbci	r29, 0xFF	; 255
    54fa:	88 81       	ld	r24, Y
    54fc:	88 23       	and	r24, r24
    54fe:	09 f4       	brne	.+2      	; 0x5502 <RGBmatrixPanel_updateDisplay+0x244>
    5500:	85 c0       	rjmp	.+266    	; 0x560c <RGBmatrixPanel_updateDisplay+0x34e>
      asm volatile("out %0,__tmp_reg__" :: "I"(_SFR_IO_ADDR(DATAPORT)));  \
      asm volatile("out %0,%1" :: "I"(_SFR_IO_ADDR(SCLKPORT)),"r"(tick)); \
      asm volatile("out %0,%1" :: "I"(_SFR_IO_ADDR(SCLKPORT)),"r"(tock));

    // Loop is unrolled for speed:
    pew pew pew pew pew pew pew pew
    5502:	01 90       	ld	r0, Z+
    5504:	02 ba       	out	0x12, r0	; 18
    5506:	75 bb       	out	0x15, r23	; 21
    5508:	65 bb       	out	0x15, r22	; 21
    550a:	01 90       	ld	r0, Z+
    550c:	02 ba       	out	0x12, r0	; 18
    550e:	75 bb       	out	0x15, r23	; 21
    5510:	65 bb       	out	0x15, r22	; 21
    5512:	01 90       	ld	r0, Z+
    5514:	02 ba       	out	0x12, r0	; 18
    5516:	75 bb       	out	0x15, r23	; 21
    5518:	65 bb       	out	0x15, r22	; 21
    551a:	01 90       	ld	r0, Z+
    551c:	02 ba       	out	0x12, r0	; 18
    551e:	75 bb       	out	0x15, r23	; 21
    5520:	65 bb       	out	0x15, r22	; 21
    5522:	01 90       	ld	r0, Z+
    5524:	02 ba       	out	0x12, r0	; 18
    5526:	75 bb       	out	0x15, r23	; 21
    5528:	65 bb       	out	0x15, r22	; 21
    552a:	01 90       	ld	r0, Z+
    552c:	02 ba       	out	0x12, r0	; 18
    552e:	75 bb       	out	0x15, r23	; 21
    5530:	65 bb       	out	0x15, r22	; 21
    5532:	01 90       	ld	r0, Z+
    5534:	02 ba       	out	0x12, r0	; 18
    5536:	75 bb       	out	0x15, r23	; 21
    5538:	65 bb       	out	0x15, r22	; 21
    553a:	01 90       	ld	r0, Z+
    553c:	02 ba       	out	0x12, r0	; 18
    553e:	75 bb       	out	0x15, r23	; 21
    5540:	65 bb       	out	0x15, r22	; 21
    pew pew pew pew pew pew pew pew
    5542:	01 90       	ld	r0, Z+
    5544:	02 ba       	out	0x12, r0	; 18
    5546:	75 bb       	out	0x15, r23	; 21
    5548:	65 bb       	out	0x15, r22	; 21
    554a:	01 90       	ld	r0, Z+
    554c:	02 ba       	out	0x12, r0	; 18
    554e:	75 bb       	out	0x15, r23	; 21
    5550:	65 bb       	out	0x15, r22	; 21
    5552:	01 90       	ld	r0, Z+
    5554:	02 ba       	out	0x12, r0	; 18
    5556:	75 bb       	out	0x15, r23	; 21
    5558:	65 bb       	out	0x15, r22	; 21
    555a:	01 90       	ld	r0, Z+
    555c:	02 ba       	out	0x12, r0	; 18
    555e:	75 bb       	out	0x15, r23	; 21
    5560:	65 bb       	out	0x15, r22	; 21
    5562:	01 90       	ld	r0, Z+
    5564:	02 ba       	out	0x12, r0	; 18
    5566:	75 bb       	out	0x15, r23	; 21
    5568:	65 bb       	out	0x15, r22	; 21
    556a:	01 90       	ld	r0, Z+
    556c:	02 ba       	out	0x12, r0	; 18
    556e:	75 bb       	out	0x15, r23	; 21
    5570:	65 bb       	out	0x15, r22	; 21
    5572:	01 90       	ld	r0, Z+
    5574:	02 ba       	out	0x12, r0	; 18
    5576:	75 bb       	out	0x15, r23	; 21
    5578:	65 bb       	out	0x15, r22	; 21
    557a:	01 90       	ld	r0, Z+
    557c:	02 ba       	out	0x12, r0	; 18
    557e:	75 bb       	out	0x15, r23	; 21
    5580:	65 bb       	out	0x15, r22	; 21
    pew pew pew pew pew pew pew pew
    5582:	01 90       	ld	r0, Z+
    5584:	02 ba       	out	0x12, r0	; 18
    5586:	75 bb       	out	0x15, r23	; 21
    5588:	65 bb       	out	0x15, r22	; 21
    558a:	01 90       	ld	r0, Z+
    558c:	02 ba       	out	0x12, r0	; 18
    558e:	75 bb       	out	0x15, r23	; 21
    5590:	65 bb       	out	0x15, r22	; 21
    5592:	01 90       	ld	r0, Z+
    5594:	02 ba       	out	0x12, r0	; 18
    5596:	75 bb       	out	0x15, r23	; 21
    5598:	65 bb       	out	0x15, r22	; 21
    559a:	01 90       	ld	r0, Z+
    559c:	02 ba       	out	0x12, r0	; 18
    559e:	75 bb       	out	0x15, r23	; 21
    55a0:	65 bb       	out	0x15, r22	; 21
    55a2:	01 90       	ld	r0, Z+
    55a4:	02 ba       	out	0x12, r0	; 18
    55a6:	75 bb       	out	0x15, r23	; 21
    55a8:	65 bb       	out	0x15, r22	; 21
    55aa:	01 90       	ld	r0, Z+
    55ac:	02 ba       	out	0x12, r0	; 18
    55ae:	75 bb       	out	0x15, r23	; 21
    55b0:	65 bb       	out	0x15, r22	; 21
    55b2:	01 90       	ld	r0, Z+
    55b4:	02 ba       	out	0x12, r0	; 18
    55b6:	75 bb       	out	0x15, r23	; 21
    55b8:	65 bb       	out	0x15, r22	; 21
    55ba:	01 90       	ld	r0, Z+
    55bc:	02 ba       	out	0x12, r0	; 18
    55be:	75 bb       	out	0x15, r23	; 21
    55c0:	65 bb       	out	0x15, r22	; 21
    pew pew pew pew pew pew pew pew
    55c2:	01 90       	ld	r0, Z+
    55c4:	02 ba       	out	0x12, r0	; 18
    55c6:	75 bb       	out	0x15, r23	; 21
    55c8:	65 bb       	out	0x15, r22	; 21
    55ca:	01 90       	ld	r0, Z+
    55cc:	02 ba       	out	0x12, r0	; 18
    55ce:	75 bb       	out	0x15, r23	; 21
    55d0:	65 bb       	out	0x15, r22	; 21
    55d2:	01 90       	ld	r0, Z+
    55d4:	02 ba       	out	0x12, r0	; 18
    55d6:	75 bb       	out	0x15, r23	; 21
    55d8:	65 bb       	out	0x15, r22	; 21
    55da:	01 90       	ld	r0, Z+
    55dc:	02 ba       	out	0x12, r0	; 18
    55de:	75 bb       	out	0x15, r23	; 21
    55e0:	65 bb       	out	0x15, r22	; 21
    55e2:	01 90       	ld	r0, Z+
    55e4:	02 ba       	out	0x12, r0	; 18
    55e6:	75 bb       	out	0x15, r23	; 21
    55e8:	65 bb       	out	0x15, r22	; 21
    55ea:	01 90       	ld	r0, Z+
    55ec:	02 ba       	out	0x12, r0	; 18
    55ee:	75 bb       	out	0x15, r23	; 21
    55f0:	65 bb       	out	0x15, r22	; 21
    55f2:	01 90       	ld	r0, Z+
    55f4:	02 ba       	out	0x12, r0	; 18
    55f6:	75 bb       	out	0x15, r23	; 21
    55f8:	65 bb       	out	0x15, r22	; 21
    55fa:	01 90       	ld	r0, Z+
    55fc:	02 ba       	out	0x12, r0	; 18
    55fe:	75 bb       	out	0x15, r23	; 21
    5600:	65 bb       	out	0x15, r22	; 21

    // From the "Unsolved Mysteries" department: "_buffptr += 32" doesn't
    // work here, scrambles the display.  "_buffptr = ptr" does, even though
    // both should produce the same results.  Couldn't tell you why.
    rgbmp->_buffptr = ptr;
    5602:	a1 5b       	subi	r26, 0xB1	; 177
    5604:	bf 4f       	sbci	r27, 0xFF	; 255
    5606:	ed 93       	st	X+, r30
    5608:	fc 93       	st	X, r31
    560a:	21 c0       	rjmp	.+66     	; 0x564e <RGBmatrixPanel_updateDisplay+0x390>
    560c:	ef 01       	movw	r28, r30
// being issued to the LED matrix for the *next* bitplane and/or row
// while the *current* plane/row is being shown.  As a result, the
// counter variables change between past/present/future tense in mid-
// function...hopefully tenses are sufficiently commented.

void RGBmatrixPanel_updateDisplay(RGBmatrixPanel *rgbmp) {
    560e:	df 01       	movw	r26, r30
    5610:	90 96       	adiw	r26, 0x20	; 32
    5612:	e0 5c       	subi	r30, 0xC0	; 192
    5614:	ff 4f       	sbci	r31, 0xFF	; 255
    5616:	40 e2       	ldi	r20, 0x20	; 32
    // output for plane 0 is handled while plane 3 is being displayed...
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.
    for(i=0; i<32; i++) {
      DATAPORT =
        ( ptr[i]    << 6)         |
    5618:	59 91       	ld	r21, Y+
        ((ptr[i+32] << 4) & 0x30) |
    561a:	8d 91       	ld	r24, X+
        ((ptr[i+64] << 2) & 0x0C);
    561c:	21 91       	ld	r18, Z+
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.
    for(i=0; i<32; i++) {
      DATAPORT =
        ( ptr[i]    << 6)         |
        ((ptr[i+32] << 4) & 0x30) |
    561e:	30 e1       	ldi	r19, 0x10	; 16
    5620:	83 9f       	mul	r24, r19
    5622:	c0 01       	movw	r24, r0
    5624:	11 24       	eor	r1, r1
    // used by the other planes.  This works because the unpacking and
    // output for plane 0 is handled while plane 3 is being displayed...
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.
    for(i=0; i<32; i++) {
      DATAPORT =
    5626:	80 73       	andi	r24, 0x30	; 48
    5628:	99 27       	eor	r25, r25
        ( ptr[i]    << 6)         |
        ((ptr[i+32] << 4) & 0x30) |
        ((ptr[i+64] << 2) & 0x0C);
    562a:	30 e0       	ldi	r19, 0x00	; 0
    562c:	22 0f       	add	r18, r18
    562e:	33 1f       	adc	r19, r19
    5630:	22 0f       	add	r18, r18
    5632:	33 1f       	adc	r19, r19
    // used by the other planes.  This works because the unpacking and
    // output for plane 0 is handled while plane 3 is being displayed...
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.
    for(i=0; i<32; i++) {
      DATAPORT =
    5634:	2c 70       	andi	r18, 0x0C	; 12
    5636:	33 27       	eor	r19, r19
    5638:	28 2b       	or	r18, r24
        ( ptr[i]    << 6)         |
    563a:	30 e4       	ldi	r19, 0x40	; 64
    563c:	53 9f       	mul	r21, r19
    563e:	c0 01       	movw	r24, r0
    5640:	11 24       	eor	r1, r1
    // used by the other planes.  This works because the unpacking and
    // output for plane 0 is handled while plane 3 is being displayed...
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.
    for(i=0; i<32; i++) {
      DATAPORT =
    5642:	82 2b       	or	r24, r18
    5644:	82 bb       	out	0x12, r24	; 18
        ( ptr[i]    << 6)         |
        ((ptr[i+32] << 4) & 0x30) |
        ((ptr[i+64] << 2) & 0x0C);
      SCLKPORT = tick; // Clock lo
    5646:	75 bb       	out	0x15, r23	; 21
      SCLKPORT = tock; // Clock hi
    5648:	65 bb       	out	0x15, r22	; 21
    564a:	41 50       	subi	r20, 0x01	; 1
    // the slack, with all its data packed into the 2 least bits not
    // used by the other planes.  This works because the unpacking and
    // output for plane 0 is handled while plane 3 is being displayed...
    // because binary coded modulation is used (not PWM), that plane
    // has the longest display interval, so the extra work fits.
    for(i=0; i<32; i++) {
    564c:	29 f7       	brne	.-54     	; 0x5618 <RGBmatrixPanel_updateDisplay+0x35a>
        ((ptr[i+64] << 2) & 0x0C);
      SCLKPORT = tick; // Clock lo
      SCLKPORT = tock; // Clock hi
    } 
  }
}
    564e:	df 91       	pop	r29
    5650:	cf 91       	pop	r28
    5652:	08 95       	ret

00005654 <__vector_9>:
  */
}

// -------------------- Interrupt handler stuff --------------------

ISR(TIMER1_OVF_vect, ISR_BLOCK) { // ISR_BLOCK important -- see notes later
    5654:	1f 92       	push	r1
    5656:	0f 92       	push	r0
    5658:	0f b6       	in	r0, 0x3f	; 63
    565a:	0f 92       	push	r0
    565c:	11 24       	eor	r1, r1
    565e:	2f 93       	push	r18
    5660:	3f 93       	push	r19
    5662:	4f 93       	push	r20
    5664:	5f 93       	push	r21
    5666:	6f 93       	push	r22
    5668:	7f 93       	push	r23
    566a:	8f 93       	push	r24
    566c:	9f 93       	push	r25
    566e:	af 93       	push	r26
    5670:	bf 93       	push	r27
    5672:	ef 93       	push	r30
    5674:	ff 93       	push	r31
  RGBmatrixPanel_updateDisplay(activePanel);   // Call refresh func for active display
    5676:	80 91 7b 00 	lds	r24, 0x007B
    567a:	90 91 7c 00 	lds	r25, 0x007C
    567e:	1f de       	rcall	.-962    	; 0x52be <RGBmatrixPanel_updateDisplay>
#if defined(__AVR_ATmega32__)
  TIFR |= TOV1;                  // Clear Timer interrupt flag
    5680:	88 b7       	in	r24, 0x38	; 56
    5682:	82 60       	ori	r24, 0x02	; 2
    5684:	88 bf       	out	0x38, r24	; 56
#else
  TIFR1 |= TOV1;                  // Clear Timer1 interrupt flag
#endif
}
    5686:	ff 91       	pop	r31
    5688:	ef 91       	pop	r30
    568a:	bf 91       	pop	r27
    568c:	af 91       	pop	r26
    568e:	9f 91       	pop	r25
    5690:	8f 91       	pop	r24
    5692:	7f 91       	pop	r23
    5694:	6f 91       	pop	r22
    5696:	5f 91       	pop	r21
    5698:	4f 91       	pop	r20
    569a:	3f 91       	pop	r19
    569c:	2f 91       	pop	r18
    569e:	0f 90       	pop	r0
    56a0:	0f be       	out	0x3f, r0	; 63
    56a2:	0f 90       	pop	r0
    56a4:	1f 90       	pop	r1
    56a6:	18 95       	reti

000056a8 <score_awardPoint>:
	*score = 0;
}

void score_awardPoint(Score *score)
{
	(*score)++;
    56a8:	fc 01       	movw	r30, r24
    56aa:	20 81       	ld	r18, Z
    56ac:	2f 5f       	subi	r18, 0xFF	; 255
    56ae:	20 83       	st	Z, r18
    56b0:	08 95       	ret

000056b2 <score_getPoints>:
}

unsigned char score_getPoints(Score *score)
{
	return *score;
}
    56b2:	fc 01       	movw	r30, r24
    56b4:	80 81       	ld	r24, Z
    56b6:	08 95       	ret

000056b8 <music_enable>:
	//puts_lcd(PSTR("ADJUSTING PERIOD -"));
}

void music_toggle(Music *music)
{
	music->enable = !music->enable;
    56b8:	21 e0       	ldi	r18, 0x01	; 1
    56ba:	fc 01       	movw	r30, r24
    56bc:	20 83       	st	Z, r18
    56be:	08 95       	ret

000056c0 <music_wait2>:
    56c0:	3a e0       	ldi	r19, 0x0A	; 10
    56c2:	06 c0       	rjmp	.+12     	; 0x56d0 <music_wait2+0x10>
    56c4:	23 2f       	mov	r18, r19
    56c6:	00 00       	nop
    56c8:	00 00       	nop
    56ca:	00 00       	nop
    56cc:	21 50       	subi	r18, 0x01	; 1
    56ce:	d9 f7       	brne	.-10     	; 0x56c6 <music_wait2+0x6>
    56d0:	61 50       	subi	r22, 0x01	; 1
    56d2:	71 09       	sbc	r23, r1
    56d4:	81 09       	sbc	r24, r1
    56d6:	91 09       	sbc	r25, r1
    56d8:	a8 f7       	brcc	.-22     	; 0x56c4 <music_wait2+0x4>
    56da:	08 95       	ret

000056dc <music_translatePeriod>:
	}
}

unsigned int music_translatePeriod(Music *music, unsigned int period)
{
	return period * (music->octave_offset);
    56dc:	fc 01       	movw	r30, r24
    56de:	84 81       	ldd	r24, Z+4	; 0x04
    56e0:	95 81       	ldd	r25, Z+5	; 0x05
    56e2:	68 9f       	mul	r22, r24
    56e4:	90 01       	movw	r18, r0
    56e6:	69 9f       	mul	r22, r25
    56e8:	30 0d       	add	r19, r0
    56ea:	78 9f       	mul	r23, r24
    56ec:	30 0d       	add	r19, r0
    56ee:	11 24       	eor	r1, r1
}
    56f0:	82 2f       	mov	r24, r18
    56f2:	93 2f       	mov	r25, r19
    56f4:	08 95       	ret

000056f6 <music_playNote>:
{
	music->enable = !music->enable;
}

void music_playNote(Music *music, Note n)
{
    56f6:	3f 92       	push	r3
    56f8:	4f 92       	push	r4
    56fa:	5f 92       	push	r5
    56fc:	6f 92       	push	r6
    56fe:	7f 92       	push	r7
    5700:	8f 92       	push	r8
    5702:	9f 92       	push	r9
    5704:	af 92       	push	r10
    5706:	bf 92       	push	r11
    5708:	cf 92       	push	r12
    570a:	df 92       	push	r13
    570c:	ef 92       	push	r14
    570e:	ff 92       	push	r15
    5710:	0f 93       	push	r16
    5712:	1f 93       	push	r17
    5714:	cf 93       	push	r28
    5716:	df 93       	push	r29
    5718:	8c 01       	movw	r16, r24
    571a:	c7 2f       	mov	r28, r23
    571c:	36 2e       	mov	r3, r22
	unsigned int period = n.period;
    571e:	e6 2f       	mov	r30, r22
    5720:	f0 e0       	ldi	r31, 0x00	; 0
	
	if (music->octave_offset != 0)
    5722:	dc 01       	movw	r26, r24
    5724:	14 96       	adiw	r26, 0x04	; 4
    5726:	8d 91       	ld	r24, X+
    5728:	9c 91       	ld	r25, X
    572a:	15 97       	sbiw	r26, 0x05	; 5
    572c:	89 2b       	or	r24, r25
    572e:	21 f0       	breq	.+8      	; 0x5738 <music_playNote+0x42>
		period = music_translatePeriod(music, n.period);
    5730:	bf 01       	movw	r22, r30
    5732:	c8 01       	movw	r24, r16
    5734:	d3 df       	rcall	.-90     	; 0x56dc <music_translatePeriod>
    5736:	fc 01       	movw	r30, r24
	
	unsigned int tH = (music->pwm * period) / 100;
    5738:	d8 01       	movw	r26, r16
    573a:	11 96       	adiw	r26, 0x01	; 1
    573c:	8c 91       	ld	r24, X
    573e:	8e 9f       	mul	r24, r30
    5740:	90 01       	movw	r18, r0
    5742:	8f 9f       	mul	r24, r31
    5744:	30 0d       	add	r19, r0
    5746:	11 24       	eor	r1, r1
    5748:	36 95       	lsr	r19
    574a:	27 95       	ror	r18
    574c:	36 95       	lsr	r19
    574e:	27 95       	ror	r18
    5750:	ab e7       	ldi	r26, 0x7B	; 123
    5752:	b4 e1       	ldi	r27, 0x14	; 20
    5754:	8b d1       	rcall	.+790    	; 0x5a6c <__umulhisi3>
    5756:	4c 01       	movw	r8, r24
    5758:	96 94       	lsr	r9
    575a:	87 94       	ror	r8
	unsigned int tL = period - tH;
    575c:	6f 01       	movw	r12, r30
    575e:	c8 18       	sub	r12, r8
    5760:	d9 08       	sbc	r13, r9
	unsigned int count = (100000 * n.dur / period) / music->tempo;
    5762:	ac 2f       	mov	r26, r28
    5764:	b0 e0       	ldi	r27, 0x00	; 0
    5766:	20 ea       	ldi	r18, 0xA0	; 160
    5768:	36 e8       	ldi	r19, 0x86	; 134
    576a:	41 e0       	ldi	r20, 0x01	; 1
    576c:	50 e0       	ldi	r21, 0x00	; 0
    576e:	8a d1       	rcall	.+788    	; 0x5a84 <__muluhisi3>
    5770:	9f 01       	movw	r18, r30
    5772:	40 e0       	ldi	r20, 0x00	; 0
    5774:	50 e0       	ldi	r21, 0x00	; 0
    5776:	5f d1       	rcall	.+702    	; 0x5a36 <__divmodsi4>
    5778:	29 01       	movw	r4, r18
    577a:	3a 01       	movw	r6, r20
    577c:	f8 01       	movw	r30, r16
    577e:	22 81       	ldd	r18, Z+2	; 0x02
    5780:	30 e0       	ldi	r19, 0x00	; 0
    5782:	40 e0       	ldi	r20, 0x00	; 0
    5784:	50 e0       	ldi	r21, 0x00	; 0
    5786:	c3 01       	movw	r24, r6
    5788:	b2 01       	movw	r22, r4
    578a:	55 d1       	rcall	.+682    	; 0x5a36 <__divmodsi4>
    578c:	79 01       	movw	r14, r18
	
	music->_fastForward = 0;
    578e:	d8 01       	movw	r26, r16
    5790:	13 96       	adiw	r26, 0x03	; 3
    5792:	1c 92       	st	X, r1
	for (unsigned int i = 0; i < count && !music->_fastForward; i++)
    5794:	21 15       	cp	r18, r1
    5796:	31 05       	cpc	r19, r1
    5798:	f9 f0       	breq	.+62     	; 0x57d8 <music_playNote+0xe2>
    579a:	c0 e0       	ldi	r28, 0x00	; 0
    579c:	d0 e0       	ldi	r29, 0x00	; 0
	{
		if (n.period == REST)
			SPK_OFF;
		else
			music->enable ? SPK_ON : 0;
		music_wait2(tH);
    579e:	a1 2c       	mov	r10, r1
    57a0:	b1 2c       	mov	r11, r1
		SPK_OFF;
		music_wait2(tL);
    57a2:	26 01       	movw	r4, r12
    57a4:	61 2c       	mov	r6, r1
    57a6:	71 2c       	mov	r7, r1
	unsigned int count = (100000 * n.dur / period) / music->tempo;
	
	music->_fastForward = 0;
	for (unsigned int i = 0; i < count && !music->_fastForward; i++)
	{
		if (n.period == REST)
    57a8:	31 10       	cpse	r3, r1
    57aa:	02 c0       	rjmp	.+4      	; 0x57b0 <music_playNote+0xba>
			SPK_OFF;
    57ac:	c0 98       	cbi	0x18, 0	; 24
    57ae:	04 c0       	rjmp	.+8      	; 0x57b8 <music_playNote+0xc2>
		else
			music->enable ? SPK_ON : 0;
    57b0:	f8 01       	movw	r30, r16
    57b2:	80 81       	ld	r24, Z
    57b4:	81 11       	cpse	r24, r1
    57b6:	c0 9a       	sbi	0x18, 0	; 24
		music_wait2(tH);
    57b8:	c5 01       	movw	r24, r10
    57ba:	b4 01       	movw	r22, r8
    57bc:	81 df       	rcall	.-254    	; 0x56c0 <music_wait2>
		SPK_OFF;
    57be:	c0 98       	cbi	0x18, 0	; 24
		music_wait2(tL);
    57c0:	c3 01       	movw	r24, r6
    57c2:	b2 01       	movw	r22, r4
    57c4:	7d df       	rcall	.-262    	; 0x56c0 <music_wait2>
	unsigned int tH = (music->pwm * period) / 100;
	unsigned int tL = period - tH;
	unsigned int count = (100000 * n.dur / period) / music->tempo;
	
	music->_fastForward = 0;
	for (unsigned int i = 0; i < count && !music->_fastForward; i++)
    57c6:	21 96       	adiw	r28, 0x01	; 1
    57c8:	ce 15       	cp	r28, r14
    57ca:	df 05       	cpc	r29, r15
    57cc:	28 f4       	brcc	.+10     	; 0x57d8 <music_playNote+0xe2>
    57ce:	d8 01       	movw	r26, r16
    57d0:	13 96       	adiw	r26, 0x03	; 3
    57d2:	8c 91       	ld	r24, X
    57d4:	88 23       	and	r24, r24
    57d6:	41 f3       	breq	.-48     	; 0x57a8 <music_playNote+0xb2>
			music->enable ? SPK_ON : 0;
		music_wait2(tH);
		SPK_OFF;
		music_wait2(tL);
	}
}
    57d8:	df 91       	pop	r29
    57da:	cf 91       	pop	r28
    57dc:	1f 91       	pop	r17
    57de:	0f 91       	pop	r16
    57e0:	ff 90       	pop	r15
    57e2:	ef 90       	pop	r14
    57e4:	df 90       	pop	r13
    57e6:	cf 90       	pop	r12
    57e8:	bf 90       	pop	r11
    57ea:	af 90       	pop	r10
    57ec:	9f 90       	pop	r9
    57ee:	8f 90       	pop	r8
    57f0:	7f 90       	pop	r7
    57f2:	6f 90       	pop	r6
    57f4:	5f 90       	pop	r5
    57f6:	4f 90       	pop	r4
    57f8:	3f 90       	pop	r3
    57fa:	08 95       	ret

000057fc <music_playSong>:

void music_playSong(Music *music, Note* song, unsigned char size)
{
    57fc:	cf 92       	push	r12
    57fe:	df 92       	push	r13
    5800:	ef 92       	push	r14
    5802:	ff 92       	push	r15
    5804:	0f 93       	push	r16
    5806:	1f 93       	push	r17
    5808:	cf 93       	push	r28
    580a:	df 93       	push	r29
    580c:	8c 01       	movw	r16, r24
    580e:	7b 01       	movw	r14, r22
	for (int i = 0; i < size; i++)
    5810:	44 23       	and	r20, r20
    5812:	89 f0       	breq	.+34     	; 0x5836 <music_playSong+0x3a>
		SPK_OFF;
		music_wait2(tL);
	}
}

void music_playSong(Music *music, Note* song, unsigned char size)
    5814:	c4 2e       	mov	r12, r20
    5816:	d1 2c       	mov	r13, r1
    5818:	cc 0c       	add	r12, r12
    581a:	dd 1c       	adc	r13, r13
    581c:	c0 e0       	ldi	r28, 0x00	; 0
    581e:	d0 e0       	ldi	r29, 0x00	; 0
{
	for (int i = 0; i < size; i++)
	{
		music_playNote(music, song[i]);
    5820:	f7 01       	movw	r30, r14
    5822:	ec 0f       	add	r30, r28
    5824:	fd 1f       	adc	r31, r29
    5826:	60 81       	ld	r22, Z
    5828:	71 81       	ldd	r23, Z+1	; 0x01
    582a:	c8 01       	movw	r24, r16
    582c:	64 df       	rcall	.-312    	; 0x56f6 <music_playNote>
    582e:	22 96       	adiw	r28, 0x02	; 2
	}
}

void music_playSong(Music *music, Note* song, unsigned char size)
{
	for (int i = 0; i < size; i++)
    5830:	cc 15       	cp	r28, r12
    5832:	dd 05       	cpc	r29, r13
    5834:	a9 f7       	brne	.-22     	; 0x5820 <music_playSong+0x24>
	{
		music_playNote(music, song[i]);
	}
}
    5836:	df 91       	pop	r29
    5838:	cf 91       	pop	r28
    583a:	1f 91       	pop	r17
    583c:	0f 91       	pop	r16
    583e:	ff 90       	pop	r15
    5840:	ef 90       	pop	r14
    5842:	df 90       	pop	r13
    5844:	cf 90       	pop	r12
    5846:	08 95       	ret

00005848 <music_init>:
{
	return period * (music->octave_offset);
}

void music_init(Music *music)
{
    5848:	fc 01       	movw	r30, r24
	music->enable = 1;
    584a:	81 e0       	ldi	r24, 0x01	; 1
    584c:	80 83       	st	Z, r24
	music->pwm = 50;
    584e:	82 e3       	ldi	r24, 0x32	; 50
    5850:	81 83       	std	Z+1, r24	; 0x01
	music->octave_offset = 0;
    5852:	15 82       	std	Z+5, r1	; 0x05
    5854:	14 82       	std	Z+4, r1	; 0x04
	music->tempo = 20;
    5856:	84 e1       	ldi	r24, 0x14	; 20
    5858:	82 83       	std	Z+2, r24	; 0x02
	
	// SPEAKER TO OUTPUT
	SET_BIT(SPEAKER_DDR, SPEAKER_PIN);	
    585a:	b8 9a       	sbi	0x17, 0	; 23
    585c:	08 95       	ret

0000585e <music_playGreenSleeves>:
}

void music_playGreenSleeves(Music *music)
{
    585e:	df 92       	push	r13
    5860:	ef 92       	push	r14
    5862:	ff 92       	push	r15
    5864:	0f 93       	push	r16
    5866:	1f 93       	push	r17
    5868:	cf 93       	push	r28
    586a:	df 93       	push	r29
    586c:	cd b7       	in	r28, 0x3d	; 61
    586e:	de b7       	in	r29, 0x3e	; 62
    5870:	cc 54       	subi	r28, 0x4C	; 76
    5872:	d1 09       	sbc	r29, r1
    5874:	0f b6       	in	r0, 0x3f	; 63
    5876:	f8 94       	cli
    5878:	de bf       	out	0x3e, r29	; 62
    587a:	0f be       	out	0x3f, r0	; 63
    587c:	cd bf       	out	0x3d, r28	; 61
	music->tempo = 20;
    587e:	24 e1       	ldi	r18, 0x14	; 20
    5880:	fc 01       	movw	r30, r24
    5882:	22 83       	std	Z+2, r18	; 0x02

	Note greenSleeves[38] =
    5884:	be 01       	movw	r22, r28
    5886:	6f 5f       	subi	r22, 0xFF	; 255
    5888:	7f 4f       	sbci	r23, 0xFF	; 255
    588a:	2c e4       	ldi	r18, 0x4C	; 76
    588c:	fb 01       	movw	r30, r22
    588e:	11 92       	st	Z+, r1
    5890:	2a 95       	dec	r18
    5892:	e9 f7       	brne	.-6      	; 0x588e <music_playGreenSleeves+0x30>
    5894:	38 e9       	ldi	r19, 0x98	; 152
    5896:	39 83       	std	Y+1, r19	; 0x01
    5898:	25 e0       	ldi	r18, 0x05	; 5
    589a:	2a 83       	std	Y+2, r18	; 0x02
    589c:	b0 e8       	ldi	r27, 0x80	; 128
    589e:	bb 83       	std	Y+3, r27	; 0x03
    58a0:	ea e0       	ldi	r30, 0x0A	; 10
    58a2:	ec 83       	std	Y+4, r30	; 0x04
    58a4:	12 e7       	ldi	r17, 0x72	; 114
    58a6:	1d 83       	std	Y+5, r17	; 0x05
    58a8:	2e 83       	std	Y+6, r18	; 0x06
    58aa:	05 e6       	ldi	r16, 0x65	; 101
    58ac:	0f 83       	std	Y+7, r16	; 0x07
    58ae:	57 e0       	ldi	r21, 0x07	; 7
    58b0:	58 87       	std	Y+8, r21	; 0x08
    58b2:	0f 2e       	mov	r0, r31
    58b4:	f0 e6       	ldi	r31, 0x60	; 96
    58b6:	ef 2e       	mov	r14, r31
    58b8:	f0 2d       	mov	r31, r0
    58ba:	e9 86       	std	Y+9, r14	; 0x09
    58bc:	42 e0       	ldi	r20, 0x02	; 2
    58be:	4a 87       	std	Y+10, r20	; 0x0a
    58c0:	0b 87       	std	Y+11, r16	; 0x0b
    58c2:	2c 87       	std	Y+12, r18	; 0x0c
    58c4:	1d 87       	std	Y+13, r17	; 0x0d
    58c6:	ee 87       	std	Y+14, r30	; 0x0e
    58c8:	ff e8       	ldi	r31, 0x8F	; 143
    58ca:	ff 87       	std	Y+15, r31	; 0x0f
    58cc:	28 8b       	std	Y+16, r18	; 0x10
    58ce:	0f 2e       	mov	r0, r31
    58d0:	fa ea       	ldi	r31, 0xAA	; 170
    58d2:	ff 2e       	mov	r15, r31
    58d4:	f0 2d       	mov	r31, r0
    58d6:	f9 8a       	std	Y+17, r15	; 0x11
    58d8:	5a 8b       	std	Y+18, r21	; 0x12
    58da:	3b 8b       	std	Y+19, r19	; 0x13
    58dc:	4c 8b       	std	Y+20, r20	; 0x14
    58de:	fd 8b       	std	Y+21, r31	; 0x15
    58e0:	2e 8b       	std	Y+22, r18	; 0x16
    58e2:	bf 8b       	std	Y+23, r27	; 0x17
    58e4:	e8 8f       	std	Y+24, r30	; 0x18
    58e6:	39 8f       	std	Y+25, r19	; 0x19
    58e8:	2a 8f       	std	Y+26, r18	; 0x1a
    58ea:	3b 8f       	std	Y+27, r19	; 0x1b
    58ec:	5c 8f       	std	Y+28, r21	; 0x1c
    58ee:	a1 ea       	ldi	r26, 0xA1	; 161
    58f0:	ad 8f       	std	Y+29, r26	; 0x1d
    58f2:	4e 8f       	std	Y+30, r20	; 0x1e
    58f4:	3f 8f       	std	Y+31, r19	; 0x1f
    58f6:	28 a3       	std	Y+32, r18	; 0x20
    58f8:	f9 a3       	std	Y+33, r31	; 0x21
    58fa:	ea a3       	std	Y+34, r30	; 0x22
    58fc:	ab a3       	std	Y+35, r26	; 0x23
    58fe:	2c a3       	std	Y+36, r18	; 0x24
    5900:	0f 2e       	mov	r0, r31
    5902:	fa ec       	ldi	r31, 0xCA	; 202
    5904:	df 2e       	mov	r13, r31
    5906:	f0 2d       	mov	r31, r0
    5908:	dd a2       	std	Y+37, r13	; 0x25
    590a:	ee a3       	std	Y+38, r30	; 0x26
    590c:	3f a3       	std	Y+39, r19	; 0x27
    590e:	28 a7       	std	Y+40, r18	; 0x28
    5910:	b9 a7       	std	Y+41, r27	; 0x29
    5912:	ea a7       	std	Y+42, r30	; 0x2a
    5914:	1b a7       	std	Y+43, r17	; 0x2b
    5916:	2c a7       	std	Y+44, r18	; 0x2c
    5918:	0d a7       	std	Y+45, r16	; 0x2d
    591a:	5e a7       	std	Y+46, r21	; 0x2e
    591c:	ef a6       	std	Y+47, r14	; 0x2f
    591e:	48 ab       	std	Y+48, r20	; 0x30
    5920:	09 ab       	std	Y+49, r16	; 0x31
    5922:	2a ab       	std	Y+50, r18	; 0x32
    5924:	1b ab       	std	Y+51, r17	; 0x33
    5926:	ec ab       	std	Y+52, r30	; 0x34
    5928:	fd ab       	std	Y+53, r31	; 0x35
    592a:	2e ab       	std	Y+54, r18	; 0x36
    592c:	ff aa       	std	Y+55, r15	; 0x37
    592e:	58 af       	std	Y+56, r21	; 0x38
    5930:	39 af       	std	Y+57, r19	; 0x39
    5932:	4a af       	std	Y+58, r20	; 0x3a
    5934:	fb af       	std	Y+59, r31	; 0x3b
    5936:	2c af       	std	Y+60, r18	; 0x3c
    5938:	bd af       	std	Y+61, r27	; 0x3d
    593a:	5e af       	std	Y+62, r21	; 0x3e
    593c:	ff af       	std	Y+63, r31	; 0x3f
    593e:	21 96       	adiw	r28, 0x01	; 1
    5940:	4f af       	std	Y+63, r20	; 0x3f
    5942:	21 97       	sbiw	r28, 0x01	; 1
    5944:	22 96       	adiw	r28, 0x02	; 2
    5946:	3f af       	std	Y+63, r19	; 0x3f
    5948:	22 97       	sbiw	r28, 0x02	; 2
    594a:	23 96       	adiw	r28, 0x03	; 3
    594c:	2f af       	std	Y+63, r18	; 0x3f
    594e:	23 97       	sbiw	r28, 0x03	; 3
    5950:	24 96       	adiw	r28, 0x04	; 4
    5952:	af af       	std	Y+63, r26	; 0x3f
    5954:	24 97       	sbiw	r28, 0x04	; 4
    5956:	25 96       	adiw	r28, 0x05	; 5
    5958:	5f af       	std	Y+63, r21	; 0x3f
    595a:	25 97       	sbiw	r28, 0x05	; 5
    595c:	54 eb       	ldi	r21, 0xB4	; 180
    595e:	26 96       	adiw	r28, 0x06	; 6
    5960:	5f af       	std	Y+63, r21	; 0x3f
    5962:	26 97       	sbiw	r28, 0x06	; 6
    5964:	27 96       	adiw	r28, 0x07	; 7
    5966:	4f af       	std	Y+63, r20	; 0x3f
    5968:	27 97       	sbiw	r28, 0x07	; 7
    596a:	28 96       	adiw	r28, 0x08	; 8
    596c:	af af       	std	Y+63, r26	; 0x3f
    596e:	28 97       	sbiw	r28, 0x08	; 8
    5970:	29 96       	adiw	r28, 0x09	; 9
    5972:	2f af       	std	Y+63, r18	; 0x3f
    5974:	29 97       	sbiw	r28, 0x09	; 9
    5976:	2a 96       	adiw	r28, 0x0a	; 10
    5978:	3f af       	std	Y+63, r19	; 0x3f
    597a:	2a 97       	sbiw	r28, 0x0a	; 10
    597c:	29 e1       	ldi	r18, 0x19	; 25
    597e:	2b 96       	adiw	r28, 0x0b	; 11
    5980:	2f af       	std	Y+63, r18	; 0x3f
    5982:	2b 97       	sbiw	r28, 0x0b	; 11
		{ E5, HALFDOT + HALF }, // TIED
		
		// THIRD SECTION
	}; //20+18=38 total notes

	music_playSong(music, greenSleeves, 38);
    5984:	46 e2       	ldi	r20, 0x26	; 38
    5986:	3a df       	rcall	.-396    	; 0x57fc <music_playSong>
}
    5988:	c4 5b       	subi	r28, 0xB4	; 180
    598a:	df 4f       	sbci	r29, 0xFF	; 255
    598c:	0f b6       	in	r0, 0x3f	; 63
    598e:	f8 94       	cli
    5990:	de bf       	out	0x3e, r29	; 62
    5992:	0f be       	out	0x3f, r0	; 63
    5994:	cd bf       	out	0x3d, r28	; 61
    5996:	df 91       	pop	r29
    5998:	cf 91       	pop	r28
    599a:	1f 91       	pop	r17
    599c:	0f 91       	pop	r16
    599e:	ff 90       	pop	r15
    59a0:	ef 90       	pop	r14
    59a2:	df 90       	pop	r13
    59a4:	08 95       	ret

000059a6 <music_playSoundEffectBeep>:


void music_playSoundEffectBeep(Music *music)
{
    59a6:	cf 93       	push	r28
    59a8:	df 93       	push	r29
    59aa:	00 d0       	rcall	.+0      	; 0x59ac <music_playSoundEffectBeep+0x6>
    59ac:	cd b7       	in	r28, 0x3d	; 61
    59ae:	de b7       	in	r29, 0x3e	; 62
	Note sfx[1] =
    59b0:	28 e9       	ldi	r18, 0x98	; 152
    59b2:	29 83       	std	Y+1, r18	; 0x01
    59b4:	21 e0       	ldi	r18, 0x01	; 1
    59b6:	2a 83       	std	Y+2, r18	; 0x02
	{
		{ E5, SIXTEENTH },
	};

	music_playSong(music, sfx, 1);
    59b8:	41 e0       	ldi	r20, 0x01	; 1
    59ba:	be 01       	movw	r22, r28
    59bc:	6f 5f       	subi	r22, 0xFF	; 255
    59be:	7f 4f       	sbci	r23, 0xFF	; 255
    59c0:	1d df       	rcall	.-454    	; 0x57fc <music_playSong>
}
    59c2:	0f 90       	pop	r0
    59c4:	0f 90       	pop	r0
    59c6:	df 91       	pop	r29
    59c8:	cf 91       	pop	r28
    59ca:	08 95       	ret

000059cc <__divmodhi4>:
    59cc:	97 fb       	bst	r25, 7
    59ce:	07 2e       	mov	r0, r23
    59d0:	16 f4       	brtc	.+4      	; 0x59d6 <__divmodhi4+0xa>
    59d2:	00 94       	com	r0
    59d4:	06 d0       	rcall	.+12     	; 0x59e2 <__divmodhi4_neg1>
    59d6:	77 fd       	sbrc	r23, 7
    59d8:	08 d0       	rcall	.+16     	; 0x59ea <__divmodhi4_neg2>
    59da:	5e d0       	rcall	.+188    	; 0x5a98 <__udivmodhi4>
    59dc:	07 fc       	sbrc	r0, 7
    59de:	05 d0       	rcall	.+10     	; 0x59ea <__divmodhi4_neg2>
    59e0:	3e f4       	brtc	.+14     	; 0x59f0 <__divmodhi4_exit>

000059e2 <__divmodhi4_neg1>:
    59e2:	90 95       	com	r25
    59e4:	81 95       	neg	r24
    59e6:	9f 4f       	sbci	r25, 0xFF	; 255
    59e8:	08 95       	ret

000059ea <__divmodhi4_neg2>:
    59ea:	70 95       	com	r23
    59ec:	61 95       	neg	r22
    59ee:	7f 4f       	sbci	r23, 0xFF	; 255

000059f0 <__divmodhi4_exit>:
    59f0:	08 95       	ret

000059f2 <__udivmodsi4>:
    59f2:	a1 e2       	ldi	r26, 0x21	; 33
    59f4:	1a 2e       	mov	r1, r26
    59f6:	aa 1b       	sub	r26, r26
    59f8:	bb 1b       	sub	r27, r27
    59fa:	fd 01       	movw	r30, r26
    59fc:	0d c0       	rjmp	.+26     	; 0x5a18 <__udivmodsi4_ep>

000059fe <__udivmodsi4_loop>:
    59fe:	aa 1f       	adc	r26, r26
    5a00:	bb 1f       	adc	r27, r27
    5a02:	ee 1f       	adc	r30, r30
    5a04:	ff 1f       	adc	r31, r31
    5a06:	a2 17       	cp	r26, r18
    5a08:	b3 07       	cpc	r27, r19
    5a0a:	e4 07       	cpc	r30, r20
    5a0c:	f5 07       	cpc	r31, r21
    5a0e:	20 f0       	brcs	.+8      	; 0x5a18 <__udivmodsi4_ep>
    5a10:	a2 1b       	sub	r26, r18
    5a12:	b3 0b       	sbc	r27, r19
    5a14:	e4 0b       	sbc	r30, r20
    5a16:	f5 0b       	sbc	r31, r21

00005a18 <__udivmodsi4_ep>:
    5a18:	66 1f       	adc	r22, r22
    5a1a:	77 1f       	adc	r23, r23
    5a1c:	88 1f       	adc	r24, r24
    5a1e:	99 1f       	adc	r25, r25
    5a20:	1a 94       	dec	r1
    5a22:	69 f7       	brne	.-38     	; 0x59fe <__udivmodsi4_loop>
    5a24:	60 95       	com	r22
    5a26:	70 95       	com	r23
    5a28:	80 95       	com	r24
    5a2a:	90 95       	com	r25
    5a2c:	9b 01       	movw	r18, r22
    5a2e:	ac 01       	movw	r20, r24
    5a30:	bd 01       	movw	r22, r26
    5a32:	cf 01       	movw	r24, r30
    5a34:	08 95       	ret

00005a36 <__divmodsi4>:
    5a36:	05 2e       	mov	r0, r21
    5a38:	97 fb       	bst	r25, 7
    5a3a:	16 f4       	brtc	.+4      	; 0x5a40 <__divmodsi4+0xa>
    5a3c:	00 94       	com	r0
    5a3e:	06 d0       	rcall	.+12     	; 0x5a4c <__divmodsi4_neg1>
    5a40:	57 fd       	sbrc	r21, 7
    5a42:	0c d0       	rcall	.+24     	; 0x5a5c <__divmodsi4_neg2>
    5a44:	d6 df       	rcall	.-84     	; 0x59f2 <__udivmodsi4>
    5a46:	07 fc       	sbrc	r0, 7
    5a48:	09 d0       	rcall	.+18     	; 0x5a5c <__divmodsi4_neg2>
    5a4a:	7e f4       	brtc	.+30     	; 0x5a6a <__divmodsi4_exit>

00005a4c <__divmodsi4_neg1>:
    5a4c:	90 95       	com	r25
    5a4e:	80 95       	com	r24
    5a50:	70 95       	com	r23
    5a52:	61 95       	neg	r22
    5a54:	7f 4f       	sbci	r23, 0xFF	; 255
    5a56:	8f 4f       	sbci	r24, 0xFF	; 255
    5a58:	9f 4f       	sbci	r25, 0xFF	; 255
    5a5a:	08 95       	ret

00005a5c <__divmodsi4_neg2>:
    5a5c:	50 95       	com	r21
    5a5e:	40 95       	com	r20
    5a60:	30 95       	com	r19
    5a62:	21 95       	neg	r18
    5a64:	3f 4f       	sbci	r19, 0xFF	; 255
    5a66:	4f 4f       	sbci	r20, 0xFF	; 255
    5a68:	5f 4f       	sbci	r21, 0xFF	; 255

00005a6a <__divmodsi4_exit>:
    5a6a:	08 95       	ret

00005a6c <__umulhisi3>:
    5a6c:	a2 9f       	mul	r26, r18
    5a6e:	b0 01       	movw	r22, r0
    5a70:	b3 9f       	mul	r27, r19
    5a72:	c0 01       	movw	r24, r0
    5a74:	a3 9f       	mul	r26, r19
    5a76:	01 d0       	rcall	.+2      	; 0x5a7a <__umulhisi3+0xe>
    5a78:	b2 9f       	mul	r27, r18
    5a7a:	70 0d       	add	r23, r0
    5a7c:	81 1d       	adc	r24, r1
    5a7e:	11 24       	eor	r1, r1
    5a80:	91 1d       	adc	r25, r1
    5a82:	08 95       	ret

00005a84 <__muluhisi3>:
    5a84:	f3 df       	rcall	.-26     	; 0x5a6c <__umulhisi3>
    5a86:	a5 9f       	mul	r26, r21
    5a88:	90 0d       	add	r25, r0
    5a8a:	b4 9f       	mul	r27, r20
    5a8c:	90 0d       	add	r25, r0
    5a8e:	a4 9f       	mul	r26, r20
    5a90:	80 0d       	add	r24, r0
    5a92:	91 1d       	adc	r25, r1
    5a94:	11 24       	eor	r1, r1
    5a96:	08 95       	ret

00005a98 <__udivmodhi4>:
    5a98:	aa 1b       	sub	r26, r26
    5a9a:	bb 1b       	sub	r27, r27
    5a9c:	51 e1       	ldi	r21, 0x11	; 17
    5a9e:	07 c0       	rjmp	.+14     	; 0x5aae <__udivmodhi4_ep>

00005aa0 <__udivmodhi4_loop>:
    5aa0:	aa 1f       	adc	r26, r26
    5aa2:	bb 1f       	adc	r27, r27
    5aa4:	a6 17       	cp	r26, r22
    5aa6:	b7 07       	cpc	r27, r23
    5aa8:	10 f0       	brcs	.+4      	; 0x5aae <__udivmodhi4_ep>
    5aaa:	a6 1b       	sub	r26, r22
    5aac:	b7 0b       	sbc	r27, r23

00005aae <__udivmodhi4_ep>:
    5aae:	88 1f       	adc	r24, r24
    5ab0:	99 1f       	adc	r25, r25
    5ab2:	5a 95       	dec	r21
    5ab4:	a9 f7       	brne	.-22     	; 0x5aa0 <__udivmodhi4_loop>
    5ab6:	80 95       	com	r24
    5ab8:	90 95       	com	r25
    5aba:	bc 01       	movw	r22, r24
    5abc:	cd 01       	movw	r24, r26
    5abe:	08 95       	ret

00005ac0 <__prologue_saves__>:
    5ac0:	2f 92       	push	r2
    5ac2:	3f 92       	push	r3
    5ac4:	4f 92       	push	r4
    5ac6:	5f 92       	push	r5
    5ac8:	6f 92       	push	r6
    5aca:	7f 92       	push	r7
    5acc:	8f 92       	push	r8
    5ace:	9f 92       	push	r9
    5ad0:	af 92       	push	r10
    5ad2:	bf 92       	push	r11
    5ad4:	cf 92       	push	r12
    5ad6:	df 92       	push	r13
    5ad8:	ef 92       	push	r14
    5ada:	ff 92       	push	r15
    5adc:	0f 93       	push	r16
    5ade:	1f 93       	push	r17
    5ae0:	cf 93       	push	r28
    5ae2:	df 93       	push	r29
    5ae4:	cd b7       	in	r28, 0x3d	; 61
    5ae6:	de b7       	in	r29, 0x3e	; 62
    5ae8:	ca 1b       	sub	r28, r26
    5aea:	db 0b       	sbc	r29, r27
    5aec:	0f b6       	in	r0, 0x3f	; 63
    5aee:	f8 94       	cli
    5af0:	de bf       	out	0x3e, r29	; 62
    5af2:	0f be       	out	0x3f, r0	; 63
    5af4:	cd bf       	out	0x3d, r28	; 61
    5af6:	09 94       	ijmp

00005af8 <__epilogue_restores__>:
    5af8:	2a 88       	ldd	r2, Y+18	; 0x12
    5afa:	39 88       	ldd	r3, Y+17	; 0x11
    5afc:	48 88       	ldd	r4, Y+16	; 0x10
    5afe:	5f 84       	ldd	r5, Y+15	; 0x0f
    5b00:	6e 84       	ldd	r6, Y+14	; 0x0e
    5b02:	7d 84       	ldd	r7, Y+13	; 0x0d
    5b04:	8c 84       	ldd	r8, Y+12	; 0x0c
    5b06:	9b 84       	ldd	r9, Y+11	; 0x0b
    5b08:	aa 84       	ldd	r10, Y+10	; 0x0a
    5b0a:	b9 84       	ldd	r11, Y+9	; 0x09
    5b0c:	c8 84       	ldd	r12, Y+8	; 0x08
    5b0e:	df 80       	ldd	r13, Y+7	; 0x07
    5b10:	ee 80       	ldd	r14, Y+6	; 0x06
    5b12:	fd 80       	ldd	r15, Y+5	; 0x05
    5b14:	0c 81       	ldd	r16, Y+4	; 0x04
    5b16:	1b 81       	ldd	r17, Y+3	; 0x03
    5b18:	aa 81       	ldd	r26, Y+2	; 0x02
    5b1a:	b9 81       	ldd	r27, Y+1	; 0x01
    5b1c:	ce 0f       	add	r28, r30
    5b1e:	d1 1d       	adc	r29, r1
    5b20:	0f b6       	in	r0, 0x3f	; 63
    5b22:	f8 94       	cli
    5b24:	de bf       	out	0x3e, r29	; 62
    5b26:	0f be       	out	0x3f, r0	; 63
    5b28:	cd bf       	out	0x3d, r28	; 61
    5b2a:	ed 01       	movw	r28, r26
    5b2c:	08 95       	ret

00005b2e <malloc>:
    5b2e:	0f 93       	push	r16
    5b30:	1f 93       	push	r17
    5b32:	cf 93       	push	r28
    5b34:	df 93       	push	r29
    5b36:	82 30       	cpi	r24, 0x02	; 2
    5b38:	91 05       	cpc	r25, r1
    5b3a:	10 f4       	brcc	.+4      	; 0x5b40 <malloc+0x12>
    5b3c:	82 e0       	ldi	r24, 0x02	; 2
    5b3e:	90 e0       	ldi	r25, 0x00	; 0
    5b40:	e0 91 46 02 	lds	r30, 0x0246
    5b44:	f0 91 47 02 	lds	r31, 0x0247
    5b48:	20 e0       	ldi	r18, 0x00	; 0
    5b4a:	30 e0       	ldi	r19, 0x00	; 0
    5b4c:	c0 e0       	ldi	r28, 0x00	; 0
    5b4e:	d0 e0       	ldi	r29, 0x00	; 0
    5b50:	23 c0       	rjmp	.+70     	; 0x5b98 <malloc+0x6a>
    5b52:	40 81       	ld	r20, Z
    5b54:	51 81       	ldd	r21, Z+1	; 0x01
    5b56:	48 17       	cp	r20, r24
    5b58:	59 07       	cpc	r21, r25
    5b5a:	a8 f0       	brcs	.+42     	; 0x5b86 <malloc+0x58>
    5b5c:	48 17       	cp	r20, r24
    5b5e:	59 07       	cpc	r21, r25
    5b60:	61 f4       	brne	.+24     	; 0x5b7a <malloc+0x4c>
    5b62:	82 81       	ldd	r24, Z+2	; 0x02
    5b64:	93 81       	ldd	r25, Z+3	; 0x03
    5b66:	20 97       	sbiw	r28, 0x00	; 0
    5b68:	19 f0       	breq	.+6      	; 0x5b70 <malloc+0x42>
    5b6a:	9b 83       	std	Y+3, r25	; 0x03
    5b6c:	8a 83       	std	Y+2, r24	; 0x02
    5b6e:	2e c0       	rjmp	.+92     	; 0x5bcc <malloc+0x9e>
    5b70:	90 93 47 02 	sts	0x0247, r25
    5b74:	80 93 46 02 	sts	0x0246, r24
    5b78:	29 c0       	rjmp	.+82     	; 0x5bcc <malloc+0x9e>
    5b7a:	21 15       	cp	r18, r1
    5b7c:	31 05       	cpc	r19, r1
    5b7e:	29 f0       	breq	.+10     	; 0x5b8a <malloc+0x5c>
    5b80:	42 17       	cp	r20, r18
    5b82:	53 07       	cpc	r21, r19
    5b84:	10 f0       	brcs	.+4      	; 0x5b8a <malloc+0x5c>
    5b86:	a9 01       	movw	r20, r18
    5b88:	02 c0       	rjmp	.+4      	; 0x5b8e <malloc+0x60>
    5b8a:	be 01       	movw	r22, r28
    5b8c:	df 01       	movw	r26, r30
    5b8e:	02 81       	ldd	r16, Z+2	; 0x02
    5b90:	13 81       	ldd	r17, Z+3	; 0x03
    5b92:	ef 01       	movw	r28, r30
    5b94:	9a 01       	movw	r18, r20
    5b96:	f8 01       	movw	r30, r16
    5b98:	30 97       	sbiw	r30, 0x00	; 0
    5b9a:	d9 f6       	brne	.-74     	; 0x5b52 <malloc+0x24>
    5b9c:	21 15       	cp	r18, r1
    5b9e:	31 05       	cpc	r19, r1
    5ba0:	09 f1       	breq	.+66     	; 0x5be4 <malloc+0xb6>
    5ba2:	28 1b       	sub	r18, r24
    5ba4:	39 0b       	sbc	r19, r25
    5ba6:	24 30       	cpi	r18, 0x04	; 4
    5ba8:	31 05       	cpc	r19, r1
    5baa:	90 f4       	brcc	.+36     	; 0x5bd0 <malloc+0xa2>
    5bac:	12 96       	adiw	r26, 0x02	; 2
    5bae:	8d 91       	ld	r24, X+
    5bb0:	9c 91       	ld	r25, X
    5bb2:	13 97       	sbiw	r26, 0x03	; 3
    5bb4:	61 15       	cp	r22, r1
    5bb6:	71 05       	cpc	r23, r1
    5bb8:	21 f0       	breq	.+8      	; 0x5bc2 <malloc+0x94>
    5bba:	fb 01       	movw	r30, r22
    5bbc:	93 83       	std	Z+3, r25	; 0x03
    5bbe:	82 83       	std	Z+2, r24	; 0x02
    5bc0:	04 c0       	rjmp	.+8      	; 0x5bca <malloc+0x9c>
    5bc2:	90 93 47 02 	sts	0x0247, r25
    5bc6:	80 93 46 02 	sts	0x0246, r24
    5bca:	fd 01       	movw	r30, r26
    5bcc:	32 96       	adiw	r30, 0x02	; 2
    5bce:	44 c0       	rjmp	.+136    	; 0x5c58 <malloc+0x12a>
    5bd0:	fd 01       	movw	r30, r26
    5bd2:	e2 0f       	add	r30, r18
    5bd4:	f3 1f       	adc	r31, r19
    5bd6:	81 93       	st	Z+, r24
    5bd8:	91 93       	st	Z+, r25
    5bda:	22 50       	subi	r18, 0x02	; 2
    5bdc:	31 09       	sbc	r19, r1
    5bde:	2d 93       	st	X+, r18
    5be0:	3c 93       	st	X, r19
    5be2:	3a c0       	rjmp	.+116    	; 0x5c58 <malloc+0x12a>
    5be4:	20 91 44 02 	lds	r18, 0x0244
    5be8:	30 91 45 02 	lds	r19, 0x0245
    5bec:	23 2b       	or	r18, r19
    5bee:	41 f4       	brne	.+16     	; 0x5c00 <malloc+0xd2>
    5bf0:	20 91 62 00 	lds	r18, 0x0062
    5bf4:	30 91 63 00 	lds	r19, 0x0063
    5bf8:	30 93 45 02 	sts	0x0245, r19
    5bfc:	20 93 44 02 	sts	0x0244, r18
    5c00:	20 91 60 00 	lds	r18, 0x0060
    5c04:	30 91 61 00 	lds	r19, 0x0061
    5c08:	21 15       	cp	r18, r1
    5c0a:	31 05       	cpc	r19, r1
    5c0c:	41 f4       	brne	.+16     	; 0x5c1e <malloc+0xf0>
    5c0e:	2d b7       	in	r18, 0x3d	; 61
    5c10:	3e b7       	in	r19, 0x3e	; 62
    5c12:	40 91 64 00 	lds	r20, 0x0064
    5c16:	50 91 65 00 	lds	r21, 0x0065
    5c1a:	24 1b       	sub	r18, r20
    5c1c:	35 0b       	sbc	r19, r21
    5c1e:	e0 91 44 02 	lds	r30, 0x0244
    5c22:	f0 91 45 02 	lds	r31, 0x0245
    5c26:	e2 17       	cp	r30, r18
    5c28:	f3 07       	cpc	r31, r19
    5c2a:	a0 f4       	brcc	.+40     	; 0x5c54 <malloc+0x126>
    5c2c:	2e 1b       	sub	r18, r30
    5c2e:	3f 0b       	sbc	r19, r31
    5c30:	28 17       	cp	r18, r24
    5c32:	39 07       	cpc	r19, r25
    5c34:	78 f0       	brcs	.+30     	; 0x5c54 <malloc+0x126>
    5c36:	ac 01       	movw	r20, r24
    5c38:	4e 5f       	subi	r20, 0xFE	; 254
    5c3a:	5f 4f       	sbci	r21, 0xFF	; 255
    5c3c:	24 17       	cp	r18, r20
    5c3e:	35 07       	cpc	r19, r21
    5c40:	48 f0       	brcs	.+18     	; 0x5c54 <malloc+0x126>
    5c42:	4e 0f       	add	r20, r30
    5c44:	5f 1f       	adc	r21, r31
    5c46:	50 93 45 02 	sts	0x0245, r21
    5c4a:	40 93 44 02 	sts	0x0244, r20
    5c4e:	81 93       	st	Z+, r24
    5c50:	91 93       	st	Z+, r25
    5c52:	02 c0       	rjmp	.+4      	; 0x5c58 <malloc+0x12a>
    5c54:	e0 e0       	ldi	r30, 0x00	; 0
    5c56:	f0 e0       	ldi	r31, 0x00	; 0
    5c58:	cf 01       	movw	r24, r30
    5c5a:	df 91       	pop	r29
    5c5c:	cf 91       	pop	r28
    5c5e:	1f 91       	pop	r17
    5c60:	0f 91       	pop	r16
    5c62:	08 95       	ret

00005c64 <free>:
    5c64:	ef 92       	push	r14
    5c66:	ff 92       	push	r15
    5c68:	0f 93       	push	r16
    5c6a:	1f 93       	push	r17
    5c6c:	cf 93       	push	r28
    5c6e:	df 93       	push	r29
    5c70:	00 97       	sbiw	r24, 0x00	; 0
    5c72:	09 f4       	brne	.+2      	; 0x5c76 <free+0x12>
    5c74:	8f c0       	rjmp	.+286    	; 0x5d94 <free+0x130>
    5c76:	dc 01       	movw	r26, r24
    5c78:	12 97       	sbiw	r26, 0x02	; 2
    5c7a:	13 96       	adiw	r26, 0x03	; 3
    5c7c:	1c 92       	st	X, r1
    5c7e:	1e 92       	st	-X, r1
    5c80:	12 97       	sbiw	r26, 0x02	; 2
    5c82:	e0 90 46 02 	lds	r14, 0x0246
    5c86:	f0 90 47 02 	lds	r15, 0x0247
    5c8a:	e1 14       	cp	r14, r1
    5c8c:	f1 04       	cpc	r15, r1
    5c8e:	89 f4       	brne	.+34     	; 0x5cb2 <free+0x4e>
    5c90:	2d 91       	ld	r18, X+
    5c92:	3c 91       	ld	r19, X
    5c94:	11 97       	sbiw	r26, 0x01	; 1
    5c96:	28 0f       	add	r18, r24
    5c98:	39 1f       	adc	r19, r25
    5c9a:	80 91 44 02 	lds	r24, 0x0244
    5c9e:	90 91 45 02 	lds	r25, 0x0245
    5ca2:	82 17       	cp	r24, r18
    5ca4:	93 07       	cpc	r25, r19
    5ca6:	89 f5       	brne	.+98     	; 0x5d0a <free+0xa6>
    5ca8:	b0 93 45 02 	sts	0x0245, r27
    5cac:	a0 93 44 02 	sts	0x0244, r26
    5cb0:	71 c0       	rjmp	.+226    	; 0x5d94 <free+0x130>
    5cb2:	e7 01       	movw	r28, r14
    5cb4:	20 e0       	ldi	r18, 0x00	; 0
    5cb6:	30 e0       	ldi	r19, 0x00	; 0
    5cb8:	01 c0       	rjmp	.+2      	; 0x5cbc <free+0x58>
    5cba:	ea 01       	movw	r28, r20
    5cbc:	ca 17       	cp	r28, r26
    5cbe:	db 07       	cpc	r29, r27
    5cc0:	38 f4       	brcc	.+14     	; 0x5cd0 <free+0x6c>
    5cc2:	4a 81       	ldd	r20, Y+2	; 0x02
    5cc4:	5b 81       	ldd	r21, Y+3	; 0x03
    5cc6:	9e 01       	movw	r18, r28
    5cc8:	41 15       	cp	r20, r1
    5cca:	51 05       	cpc	r21, r1
    5ccc:	b1 f7       	brne	.-20     	; 0x5cba <free+0x56>
    5cce:	22 c0       	rjmp	.+68     	; 0x5d14 <free+0xb0>
    5cd0:	bc 01       	movw	r22, r24
    5cd2:	62 50       	subi	r22, 0x02	; 2
    5cd4:	71 09       	sbc	r23, r1
    5cd6:	fb 01       	movw	r30, r22
    5cd8:	d3 83       	std	Z+3, r29	; 0x03
    5cda:	c2 83       	std	Z+2, r28	; 0x02
    5cdc:	00 81       	ld	r16, Z
    5cde:	11 81       	ldd	r17, Z+1	; 0x01
    5ce0:	ac 01       	movw	r20, r24
    5ce2:	40 0f       	add	r20, r16
    5ce4:	51 1f       	adc	r21, r17
    5ce6:	4c 17       	cp	r20, r28
    5ce8:	5d 07       	cpc	r21, r29
    5cea:	61 f4       	brne	.+24     	; 0x5d04 <free+0xa0>
    5cec:	48 81       	ld	r20, Y
    5cee:	59 81       	ldd	r21, Y+1	; 0x01
    5cf0:	40 0f       	add	r20, r16
    5cf2:	51 1f       	adc	r21, r17
    5cf4:	4e 5f       	subi	r20, 0xFE	; 254
    5cf6:	5f 4f       	sbci	r21, 0xFF	; 255
    5cf8:	51 83       	std	Z+1, r21	; 0x01
    5cfa:	40 83       	st	Z, r20
    5cfc:	4a 81       	ldd	r20, Y+2	; 0x02
    5cfe:	5b 81       	ldd	r21, Y+3	; 0x03
    5d00:	53 83       	std	Z+3, r21	; 0x03
    5d02:	42 83       	std	Z+2, r20	; 0x02
    5d04:	21 15       	cp	r18, r1
    5d06:	31 05       	cpc	r19, r1
    5d08:	29 f4       	brne	.+10     	; 0x5d14 <free+0xb0>
    5d0a:	b0 93 47 02 	sts	0x0247, r27
    5d0e:	a0 93 46 02 	sts	0x0246, r26
    5d12:	40 c0       	rjmp	.+128    	; 0x5d94 <free+0x130>
    5d14:	f9 01       	movw	r30, r18
    5d16:	b3 83       	std	Z+3, r27	; 0x03
    5d18:	a2 83       	std	Z+2, r26	; 0x02
    5d1a:	e9 01       	movw	r28, r18
    5d1c:	69 91       	ld	r22, Y+
    5d1e:	79 91       	ld	r23, Y+
    5d20:	c6 0f       	add	r28, r22
    5d22:	d7 1f       	adc	r29, r23
    5d24:	ac 17       	cp	r26, r28
    5d26:	bd 07       	cpc	r27, r29
    5d28:	79 f4       	brne	.+30     	; 0x5d48 <free+0xe4>
    5d2a:	dc 01       	movw	r26, r24
    5d2c:	5e 91       	ld	r21, -X
    5d2e:	4e 91       	ld	r20, -X
    5d30:	46 0f       	add	r20, r22
    5d32:	57 1f       	adc	r21, r23
    5d34:	4e 5f       	subi	r20, 0xFE	; 254
    5d36:	5f 4f       	sbci	r21, 0xFF	; 255
    5d38:	51 83       	std	Z+1, r21	; 0x01
    5d3a:	40 83       	st	Z, r20
    5d3c:	12 96       	adiw	r26, 0x02	; 2
    5d3e:	8d 91       	ld	r24, X+
    5d40:	9c 91       	ld	r25, X
    5d42:	13 97       	sbiw	r26, 0x03	; 3
    5d44:	93 83       	std	Z+3, r25	; 0x03
    5d46:	82 83       	std	Z+2, r24	; 0x02
    5d48:	a0 e0       	ldi	r26, 0x00	; 0
    5d4a:	b0 e0       	ldi	r27, 0x00	; 0
    5d4c:	02 c0       	rjmp	.+4      	; 0x5d52 <free+0xee>
    5d4e:	d7 01       	movw	r26, r14
    5d50:	7c 01       	movw	r14, r24
    5d52:	f7 01       	movw	r30, r14
    5d54:	82 81       	ldd	r24, Z+2	; 0x02
    5d56:	93 81       	ldd	r25, Z+3	; 0x03
    5d58:	00 97       	sbiw	r24, 0x00	; 0
    5d5a:	c9 f7       	brne	.-14     	; 0x5d4e <free+0xea>
    5d5c:	c7 01       	movw	r24, r14
    5d5e:	02 96       	adiw	r24, 0x02	; 2
    5d60:	20 81       	ld	r18, Z
    5d62:	31 81       	ldd	r19, Z+1	; 0x01
    5d64:	82 0f       	add	r24, r18
    5d66:	93 1f       	adc	r25, r19
    5d68:	20 91 44 02 	lds	r18, 0x0244
    5d6c:	30 91 45 02 	lds	r19, 0x0245
    5d70:	28 17       	cp	r18, r24
    5d72:	39 07       	cpc	r19, r25
    5d74:	79 f4       	brne	.+30     	; 0x5d94 <free+0x130>
    5d76:	10 97       	sbiw	r26, 0x00	; 0
    5d78:	29 f4       	brne	.+10     	; 0x5d84 <free+0x120>
    5d7a:	10 92 47 02 	sts	0x0247, r1
    5d7e:	10 92 46 02 	sts	0x0246, r1
    5d82:	04 c0       	rjmp	.+8      	; 0x5d8c <free+0x128>
    5d84:	13 96       	adiw	r26, 0x03	; 3
    5d86:	1c 92       	st	X, r1
    5d88:	1e 92       	st	-X, r1
    5d8a:	12 97       	sbiw	r26, 0x02	; 2
    5d8c:	f0 92 45 02 	sts	0x0245, r15
    5d90:	e0 92 44 02 	sts	0x0244, r14
    5d94:	cd b7       	in	r28, 0x3d	; 61
    5d96:	de b7       	in	r29, 0x3e	; 62
    5d98:	e6 e0       	ldi	r30, 0x06	; 6
    5d9a:	ba ce       	rjmp	.-652    	; 0x5b10 <__epilogue_restores__+0x18>

00005d9c <do_rand>:
    5d9c:	8f 92       	push	r8
    5d9e:	9f 92       	push	r9
    5da0:	af 92       	push	r10
    5da2:	bf 92       	push	r11
    5da4:	cf 92       	push	r12
    5da6:	df 92       	push	r13
    5da8:	ef 92       	push	r14
    5daa:	ff 92       	push	r15
    5dac:	cf 93       	push	r28
    5dae:	df 93       	push	r29
    5db0:	ec 01       	movw	r28, r24
    5db2:	68 81       	ld	r22, Y
    5db4:	79 81       	ldd	r23, Y+1	; 0x01
    5db6:	8a 81       	ldd	r24, Y+2	; 0x02
    5db8:	9b 81       	ldd	r25, Y+3	; 0x03
    5dba:	61 15       	cp	r22, r1
    5dbc:	71 05       	cpc	r23, r1
    5dbe:	81 05       	cpc	r24, r1
    5dc0:	91 05       	cpc	r25, r1
    5dc2:	21 f4       	brne	.+8      	; 0x5dcc <do_rand+0x30>
    5dc4:	64 e2       	ldi	r22, 0x24	; 36
    5dc6:	79 ed       	ldi	r23, 0xD9	; 217
    5dc8:	8b e5       	ldi	r24, 0x5B	; 91
    5dca:	97 e0       	ldi	r25, 0x07	; 7
    5dcc:	2d e1       	ldi	r18, 0x1D	; 29
    5dce:	33 ef       	ldi	r19, 0xF3	; 243
    5dd0:	41 e0       	ldi	r20, 0x01	; 1
    5dd2:	50 e0       	ldi	r21, 0x00	; 0
    5dd4:	30 de       	rcall	.-928    	; 0x5a36 <__divmodsi4>
    5dd6:	49 01       	movw	r8, r18
    5dd8:	5a 01       	movw	r10, r20
    5dda:	9b 01       	movw	r18, r22
    5ddc:	ac 01       	movw	r20, r24
    5dde:	a7 ea       	ldi	r26, 0xA7	; 167
    5de0:	b1 e4       	ldi	r27, 0x41	; 65
    5de2:	50 de       	rcall	.-864    	; 0x5a84 <__muluhisi3>
    5de4:	6b 01       	movw	r12, r22
    5de6:	7c 01       	movw	r14, r24
    5de8:	ac ee       	ldi	r26, 0xEC	; 236
    5dea:	b4 ef       	ldi	r27, 0xF4	; 244
    5dec:	a5 01       	movw	r20, r10
    5dee:	94 01       	movw	r18, r8
    5df0:	c4 d2       	rcall	.+1416   	; 0x637a <__mulohisi3>
    5df2:	c6 0e       	add	r12, r22
    5df4:	d7 1e       	adc	r13, r23
    5df6:	e8 1e       	adc	r14, r24
    5df8:	f9 1e       	adc	r15, r25
    5dfa:	f7 fe       	sbrs	r15, 7
    5dfc:	06 c0       	rjmp	.+12     	; 0x5e0a <do_rand+0x6e>
    5dfe:	81 e0       	ldi	r24, 0x01	; 1
    5e00:	c8 1a       	sub	r12, r24
    5e02:	d1 08       	sbc	r13, r1
    5e04:	e1 08       	sbc	r14, r1
    5e06:	80 e8       	ldi	r24, 0x80	; 128
    5e08:	f8 0a       	sbc	r15, r24
    5e0a:	c8 82       	st	Y, r12
    5e0c:	d9 82       	std	Y+1, r13	; 0x01
    5e0e:	ea 82       	std	Y+2, r14	; 0x02
    5e10:	fb 82       	std	Y+3, r15	; 0x03
    5e12:	e8 94       	clt
    5e14:	d7 f8       	bld	r13, 7
    5e16:	ee 24       	eor	r14, r14
    5e18:	ff 24       	eor	r15, r15
    5e1a:	c6 01       	movw	r24, r12
    5e1c:	df 91       	pop	r29
    5e1e:	cf 91       	pop	r28
    5e20:	ff 90       	pop	r15
    5e22:	ef 90       	pop	r14
    5e24:	df 90       	pop	r13
    5e26:	cf 90       	pop	r12
    5e28:	bf 90       	pop	r11
    5e2a:	af 90       	pop	r10
    5e2c:	9f 90       	pop	r9
    5e2e:	8f 90       	pop	r8
    5e30:	08 95       	ret

00005e32 <rand_r>:
    5e32:	b4 cf       	rjmp	.-152    	; 0x5d9c <do_rand>

00005e34 <rand>:
    5e34:	86 e6       	ldi	r24, 0x66	; 102
    5e36:	90 e0       	ldi	r25, 0x00	; 0
    5e38:	b1 cf       	rjmp	.-158    	; 0x5d9c <do_rand>

00005e3a <srand>:
    5e3a:	a0 e0       	ldi	r26, 0x00	; 0
    5e3c:	b0 e0       	ldi	r27, 0x00	; 0
    5e3e:	80 93 66 00 	sts	0x0066, r24
    5e42:	90 93 67 00 	sts	0x0067, r25
    5e46:	a0 93 68 00 	sts	0x0068, r26
    5e4a:	b0 93 69 00 	sts	0x0069, r27
    5e4e:	08 95       	ret

00005e50 <memset>:
    5e50:	dc 01       	movw	r26, r24
    5e52:	01 c0       	rjmp	.+2      	; 0x5e56 <memset+0x6>
    5e54:	6d 93       	st	X+, r22
    5e56:	41 50       	subi	r20, 0x01	; 1
    5e58:	50 40       	sbci	r21, 0x00	; 0
    5e5a:	e0 f7       	brcc	.-8      	; 0x5e54 <memset+0x4>
    5e5c:	08 95       	ret

00005e5e <sprintf>:
    5e5e:	ae e0       	ldi	r26, 0x0E	; 14
    5e60:	b0 e0       	ldi	r27, 0x00	; 0
    5e62:	e4 e3       	ldi	r30, 0x34	; 52
    5e64:	ff e2       	ldi	r31, 0x2F	; 47
    5e66:	3a ce       	rjmp	.-908    	; 0x5adc <__prologue_saves__+0x1c>
    5e68:	0d 89       	ldd	r16, Y+21	; 0x15
    5e6a:	1e 89       	ldd	r17, Y+22	; 0x16
    5e6c:	86 e0       	ldi	r24, 0x06	; 6
    5e6e:	8c 83       	std	Y+4, r24	; 0x04
    5e70:	1a 83       	std	Y+2, r17	; 0x02
    5e72:	09 83       	std	Y+1, r16	; 0x01
    5e74:	8f ef       	ldi	r24, 0xFF	; 255
    5e76:	9f e7       	ldi	r25, 0x7F	; 127
    5e78:	9e 83       	std	Y+6, r25	; 0x06
    5e7a:	8d 83       	std	Y+5, r24	; 0x05
    5e7c:	ce 01       	movw	r24, r28
    5e7e:	49 96       	adiw	r24, 0x19	; 25
    5e80:	ac 01       	movw	r20, r24
    5e82:	6f 89       	ldd	r22, Y+23	; 0x17
    5e84:	78 8d       	ldd	r23, Y+24	; 0x18
    5e86:	ce 01       	movw	r24, r28
    5e88:	01 96       	adiw	r24, 0x01	; 1
    5e8a:	08 d0       	rcall	.+16     	; 0x5e9c <vfprintf>
    5e8c:	ef 81       	ldd	r30, Y+7	; 0x07
    5e8e:	f8 85       	ldd	r31, Y+8	; 0x08
    5e90:	e0 0f       	add	r30, r16
    5e92:	f1 1f       	adc	r31, r17
    5e94:	10 82       	st	Z, r1
    5e96:	2e 96       	adiw	r28, 0x0e	; 14
    5e98:	e4 e0       	ldi	r30, 0x04	; 4
    5e9a:	3c ce       	rjmp	.-904    	; 0x5b14 <__epilogue_restores__+0x1c>

00005e9c <vfprintf>:
    5e9c:	ac e0       	ldi	r26, 0x0C	; 12
    5e9e:	b0 e0       	ldi	r27, 0x00	; 0
    5ea0:	e3 e5       	ldi	r30, 0x53	; 83
    5ea2:	ff e2       	ldi	r31, 0x2F	; 47
    5ea4:	0d ce       	rjmp	.-998    	; 0x5ac0 <__prologue_saves__>
    5ea6:	7c 01       	movw	r14, r24
    5ea8:	6b 01       	movw	r12, r22
    5eaa:	8a 01       	movw	r16, r20
    5eac:	fc 01       	movw	r30, r24
    5eae:	17 82       	std	Z+7, r1	; 0x07
    5eb0:	16 82       	std	Z+6, r1	; 0x06
    5eb2:	83 81       	ldd	r24, Z+3	; 0x03
    5eb4:	81 ff       	sbrs	r24, 1
    5eb6:	b9 c1       	rjmp	.+882    	; 0x622a <vfprintf+0x38e>
    5eb8:	88 24       	eor	r8, r8
    5eba:	83 94       	inc	r8
    5ebc:	91 2c       	mov	r9, r1
    5ebe:	8c 0e       	add	r8, r28
    5ec0:	9d 1e       	adc	r9, r29
    5ec2:	f7 01       	movw	r30, r14
    5ec4:	93 81       	ldd	r25, Z+3	; 0x03
    5ec6:	f6 01       	movw	r30, r12
    5ec8:	93 fd       	sbrc	r25, 3
    5eca:	85 91       	lpm	r24, Z+
    5ecc:	93 ff       	sbrs	r25, 3
    5ece:	81 91       	ld	r24, Z+
    5ed0:	6f 01       	movw	r12, r30
    5ed2:	88 23       	and	r24, r24
    5ed4:	09 f4       	brne	.+2      	; 0x5ed8 <vfprintf+0x3c>
    5ed6:	a5 c1       	rjmp	.+842    	; 0x6222 <vfprintf+0x386>
    5ed8:	85 32       	cpi	r24, 0x25	; 37
    5eda:	39 f4       	brne	.+14     	; 0x5eea <vfprintf+0x4e>
    5edc:	93 fd       	sbrc	r25, 3
    5ede:	85 91       	lpm	r24, Z+
    5ee0:	93 ff       	sbrs	r25, 3
    5ee2:	81 91       	ld	r24, Z+
    5ee4:	6f 01       	movw	r12, r30
    5ee6:	85 32       	cpi	r24, 0x25	; 37
    5ee8:	21 f4       	brne	.+8      	; 0x5ef2 <vfprintf+0x56>
    5eea:	b7 01       	movw	r22, r14
    5eec:	90 e0       	ldi	r25, 0x00	; 0
    5eee:	b9 d1       	rcall	.+882    	; 0x6262 <fputc>
    5ef0:	e8 cf       	rjmp	.-48     	; 0x5ec2 <vfprintf+0x26>
    5ef2:	51 2c       	mov	r5, r1
    5ef4:	31 2c       	mov	r3, r1
    5ef6:	20 e0       	ldi	r18, 0x00	; 0
    5ef8:	20 32       	cpi	r18, 0x20	; 32
    5efa:	a8 f4       	brcc	.+42     	; 0x5f26 <vfprintf+0x8a>
    5efc:	8b 32       	cpi	r24, 0x2B	; 43
    5efe:	61 f0       	breq	.+24     	; 0x5f18 <vfprintf+0x7c>
    5f00:	28 f4       	brcc	.+10     	; 0x5f0c <vfprintf+0x70>
    5f02:	80 32       	cpi	r24, 0x20	; 32
    5f04:	51 f0       	breq	.+20     	; 0x5f1a <vfprintf+0x7e>
    5f06:	83 32       	cpi	r24, 0x23	; 35
    5f08:	71 f4       	brne	.+28     	; 0x5f26 <vfprintf+0x8a>
    5f0a:	0b c0       	rjmp	.+22     	; 0x5f22 <vfprintf+0x86>
    5f0c:	8d 32       	cpi	r24, 0x2D	; 45
    5f0e:	39 f0       	breq	.+14     	; 0x5f1e <vfprintf+0x82>
    5f10:	80 33       	cpi	r24, 0x30	; 48
    5f12:	49 f4       	brne	.+18     	; 0x5f26 <vfprintf+0x8a>
    5f14:	21 60       	ori	r18, 0x01	; 1
    5f16:	28 c0       	rjmp	.+80     	; 0x5f68 <vfprintf+0xcc>
    5f18:	22 60       	ori	r18, 0x02	; 2
    5f1a:	24 60       	ori	r18, 0x04	; 4
    5f1c:	25 c0       	rjmp	.+74     	; 0x5f68 <vfprintf+0xcc>
    5f1e:	28 60       	ori	r18, 0x08	; 8
    5f20:	23 c0       	rjmp	.+70     	; 0x5f68 <vfprintf+0xcc>
    5f22:	20 61       	ori	r18, 0x10	; 16
    5f24:	21 c0       	rjmp	.+66     	; 0x5f68 <vfprintf+0xcc>
    5f26:	27 fd       	sbrc	r18, 7
    5f28:	27 c0       	rjmp	.+78     	; 0x5f78 <vfprintf+0xdc>
    5f2a:	38 2f       	mov	r19, r24
    5f2c:	30 53       	subi	r19, 0x30	; 48
    5f2e:	3a 30       	cpi	r19, 0x0A	; 10
    5f30:	78 f4       	brcc	.+30     	; 0x5f50 <vfprintf+0xb4>
    5f32:	26 ff       	sbrs	r18, 6
    5f34:	06 c0       	rjmp	.+12     	; 0x5f42 <vfprintf+0xa6>
    5f36:	fa e0       	ldi	r31, 0x0A	; 10
    5f38:	5f 9e       	mul	r5, r31
    5f3a:	30 0d       	add	r19, r0
    5f3c:	11 24       	eor	r1, r1
    5f3e:	53 2e       	mov	r5, r19
    5f40:	13 c0       	rjmp	.+38     	; 0x5f68 <vfprintf+0xcc>
    5f42:	8a e0       	ldi	r24, 0x0A	; 10
    5f44:	38 9e       	mul	r3, r24
    5f46:	30 0d       	add	r19, r0
    5f48:	11 24       	eor	r1, r1
    5f4a:	33 2e       	mov	r3, r19
    5f4c:	20 62       	ori	r18, 0x20	; 32
    5f4e:	0c c0       	rjmp	.+24     	; 0x5f68 <vfprintf+0xcc>
    5f50:	8e 32       	cpi	r24, 0x2E	; 46
    5f52:	21 f4       	brne	.+8      	; 0x5f5c <vfprintf+0xc0>
    5f54:	26 fd       	sbrc	r18, 6
    5f56:	65 c1       	rjmp	.+714    	; 0x6222 <vfprintf+0x386>
    5f58:	20 64       	ori	r18, 0x40	; 64
    5f5a:	06 c0       	rjmp	.+12     	; 0x5f68 <vfprintf+0xcc>
    5f5c:	8c 36       	cpi	r24, 0x6C	; 108
    5f5e:	11 f4       	brne	.+4      	; 0x5f64 <vfprintf+0xc8>
    5f60:	20 68       	ori	r18, 0x80	; 128
    5f62:	02 c0       	rjmp	.+4      	; 0x5f68 <vfprintf+0xcc>
    5f64:	88 36       	cpi	r24, 0x68	; 104
    5f66:	41 f4       	brne	.+16     	; 0x5f78 <vfprintf+0xdc>
    5f68:	f6 01       	movw	r30, r12
    5f6a:	93 fd       	sbrc	r25, 3
    5f6c:	85 91       	lpm	r24, Z+
    5f6e:	93 ff       	sbrs	r25, 3
    5f70:	81 91       	ld	r24, Z+
    5f72:	6f 01       	movw	r12, r30
    5f74:	81 11       	cpse	r24, r1
    5f76:	c0 cf       	rjmp	.-128    	; 0x5ef8 <vfprintf+0x5c>
    5f78:	98 2f       	mov	r25, r24
    5f7a:	95 54       	subi	r25, 0x45	; 69
    5f7c:	93 30       	cpi	r25, 0x03	; 3
    5f7e:	18 f0       	brcs	.+6      	; 0x5f86 <vfprintf+0xea>
    5f80:	90 52       	subi	r25, 0x20	; 32
    5f82:	93 30       	cpi	r25, 0x03	; 3
    5f84:	28 f4       	brcc	.+10     	; 0x5f90 <vfprintf+0xf4>
    5f86:	0c 5f       	subi	r16, 0xFC	; 252
    5f88:	1f 4f       	sbci	r17, 0xFF	; 255
    5f8a:	ff e3       	ldi	r31, 0x3F	; 63
    5f8c:	f9 83       	std	Y+1, r31	; 0x01
    5f8e:	0d c0       	rjmp	.+26     	; 0x5faa <vfprintf+0x10e>
    5f90:	83 36       	cpi	r24, 0x63	; 99
    5f92:	31 f0       	breq	.+12     	; 0x5fa0 <vfprintf+0x104>
    5f94:	83 37       	cpi	r24, 0x73	; 115
    5f96:	71 f0       	breq	.+28     	; 0x5fb4 <vfprintf+0x118>
    5f98:	83 35       	cpi	r24, 0x53	; 83
    5f9a:	09 f0       	breq	.+2      	; 0x5f9e <vfprintf+0x102>
    5f9c:	5a c0       	rjmp	.+180    	; 0x6052 <vfprintf+0x1b6>
    5f9e:	22 c0       	rjmp	.+68     	; 0x5fe4 <vfprintf+0x148>
    5fa0:	f8 01       	movw	r30, r16
    5fa2:	80 81       	ld	r24, Z
    5fa4:	89 83       	std	Y+1, r24	; 0x01
    5fa6:	0e 5f       	subi	r16, 0xFE	; 254
    5fa8:	1f 4f       	sbci	r17, 0xFF	; 255
    5faa:	44 24       	eor	r4, r4
    5fac:	43 94       	inc	r4
    5fae:	51 2c       	mov	r5, r1
    5fb0:	54 01       	movw	r10, r8
    5fb2:	14 c0       	rjmp	.+40     	; 0x5fdc <vfprintf+0x140>
    5fb4:	38 01       	movw	r6, r16
    5fb6:	f2 e0       	ldi	r31, 0x02	; 2
    5fb8:	6f 0e       	add	r6, r31
    5fba:	71 1c       	adc	r7, r1
    5fbc:	f8 01       	movw	r30, r16
    5fbe:	a0 80       	ld	r10, Z
    5fc0:	b1 80       	ldd	r11, Z+1	; 0x01
    5fc2:	26 ff       	sbrs	r18, 6
    5fc4:	03 c0       	rjmp	.+6      	; 0x5fcc <vfprintf+0x130>
    5fc6:	65 2d       	mov	r22, r5
    5fc8:	70 e0       	ldi	r23, 0x00	; 0
    5fca:	02 c0       	rjmp	.+4      	; 0x5fd0 <vfprintf+0x134>
    5fcc:	6f ef       	ldi	r22, 0xFF	; 255
    5fce:	7f ef       	ldi	r23, 0xFF	; 255
    5fd0:	c5 01       	movw	r24, r10
    5fd2:	2c 87       	std	Y+12, r18	; 0x0c
    5fd4:	3b d1       	rcall	.+630    	; 0x624c <strnlen>
    5fd6:	2c 01       	movw	r4, r24
    5fd8:	83 01       	movw	r16, r6
    5fda:	2c 85       	ldd	r18, Y+12	; 0x0c
    5fdc:	6f e7       	ldi	r22, 0x7F	; 127
    5fde:	26 2e       	mov	r2, r22
    5fe0:	22 22       	and	r2, r18
    5fe2:	17 c0       	rjmp	.+46     	; 0x6012 <vfprintf+0x176>
    5fe4:	38 01       	movw	r6, r16
    5fe6:	f2 e0       	ldi	r31, 0x02	; 2
    5fe8:	6f 0e       	add	r6, r31
    5fea:	71 1c       	adc	r7, r1
    5fec:	f8 01       	movw	r30, r16
    5fee:	a0 80       	ld	r10, Z
    5ff0:	b1 80       	ldd	r11, Z+1	; 0x01
    5ff2:	26 ff       	sbrs	r18, 6
    5ff4:	03 c0       	rjmp	.+6      	; 0x5ffc <vfprintf+0x160>
    5ff6:	65 2d       	mov	r22, r5
    5ff8:	70 e0       	ldi	r23, 0x00	; 0
    5ffa:	02 c0       	rjmp	.+4      	; 0x6000 <vfprintf+0x164>
    5ffc:	6f ef       	ldi	r22, 0xFF	; 255
    5ffe:	7f ef       	ldi	r23, 0xFF	; 255
    6000:	c5 01       	movw	r24, r10
    6002:	2c 87       	std	Y+12, r18	; 0x0c
    6004:	18 d1       	rcall	.+560    	; 0x6236 <strnlen_P>
    6006:	2c 01       	movw	r4, r24
    6008:	2c 85       	ldd	r18, Y+12	; 0x0c
    600a:	50 e8       	ldi	r21, 0x80	; 128
    600c:	25 2e       	mov	r2, r21
    600e:	22 2a       	or	r2, r18
    6010:	83 01       	movw	r16, r6
    6012:	23 fc       	sbrc	r2, 3
    6014:	1a c0       	rjmp	.+52     	; 0x604a <vfprintf+0x1ae>
    6016:	05 c0       	rjmp	.+10     	; 0x6022 <vfprintf+0x186>
    6018:	b7 01       	movw	r22, r14
    601a:	80 e2       	ldi	r24, 0x20	; 32
    601c:	90 e0       	ldi	r25, 0x00	; 0
    601e:	21 d1       	rcall	.+578    	; 0x6262 <fputc>
    6020:	3a 94       	dec	r3
    6022:	83 2d       	mov	r24, r3
    6024:	90 e0       	ldi	r25, 0x00	; 0
    6026:	48 16       	cp	r4, r24
    6028:	59 06       	cpc	r5, r25
    602a:	b0 f3       	brcs	.-20     	; 0x6018 <vfprintf+0x17c>
    602c:	0e c0       	rjmp	.+28     	; 0x604a <vfprintf+0x1ae>
    602e:	f5 01       	movw	r30, r10
    6030:	27 fc       	sbrc	r2, 7
    6032:	85 91       	lpm	r24, Z+
    6034:	27 fe       	sbrs	r2, 7
    6036:	81 91       	ld	r24, Z+
    6038:	5f 01       	movw	r10, r30
    603a:	b7 01       	movw	r22, r14
    603c:	90 e0       	ldi	r25, 0x00	; 0
    603e:	11 d1       	rcall	.+546    	; 0x6262 <fputc>
    6040:	31 10       	cpse	r3, r1
    6042:	3a 94       	dec	r3
    6044:	f1 e0       	ldi	r31, 0x01	; 1
    6046:	4f 1a       	sub	r4, r31
    6048:	51 08       	sbc	r5, r1
    604a:	41 14       	cp	r4, r1
    604c:	51 04       	cpc	r5, r1
    604e:	79 f7       	brne	.-34     	; 0x602e <vfprintf+0x192>
    6050:	e5 c0       	rjmp	.+458    	; 0x621c <vfprintf+0x380>
    6052:	84 36       	cpi	r24, 0x64	; 100
    6054:	11 f0       	breq	.+4      	; 0x605a <vfprintf+0x1be>
    6056:	89 36       	cpi	r24, 0x69	; 105
    6058:	39 f5       	brne	.+78     	; 0x60a8 <vfprintf+0x20c>
    605a:	f8 01       	movw	r30, r16
    605c:	27 ff       	sbrs	r18, 7
    605e:	07 c0       	rjmp	.+14     	; 0x606e <vfprintf+0x1d2>
    6060:	60 81       	ld	r22, Z
    6062:	71 81       	ldd	r23, Z+1	; 0x01
    6064:	82 81       	ldd	r24, Z+2	; 0x02
    6066:	93 81       	ldd	r25, Z+3	; 0x03
    6068:	0c 5f       	subi	r16, 0xFC	; 252
    606a:	1f 4f       	sbci	r17, 0xFF	; 255
    606c:	08 c0       	rjmp	.+16     	; 0x607e <vfprintf+0x1e2>
    606e:	60 81       	ld	r22, Z
    6070:	71 81       	ldd	r23, Z+1	; 0x01
    6072:	88 27       	eor	r24, r24
    6074:	77 fd       	sbrc	r23, 7
    6076:	80 95       	com	r24
    6078:	98 2f       	mov	r25, r24
    607a:	0e 5f       	subi	r16, 0xFE	; 254
    607c:	1f 4f       	sbci	r17, 0xFF	; 255
    607e:	4f e6       	ldi	r20, 0x6F	; 111
    6080:	b4 2e       	mov	r11, r20
    6082:	b2 22       	and	r11, r18
    6084:	97 ff       	sbrs	r25, 7
    6086:	09 c0       	rjmp	.+18     	; 0x609a <vfprintf+0x1fe>
    6088:	90 95       	com	r25
    608a:	80 95       	com	r24
    608c:	70 95       	com	r23
    608e:	61 95       	neg	r22
    6090:	7f 4f       	sbci	r23, 0xFF	; 255
    6092:	8f 4f       	sbci	r24, 0xFF	; 255
    6094:	9f 4f       	sbci	r25, 0xFF	; 255
    6096:	f0 e8       	ldi	r31, 0x80	; 128
    6098:	bf 2a       	or	r11, r31
    609a:	2a e0       	ldi	r18, 0x0A	; 10
    609c:	30 e0       	ldi	r19, 0x00	; 0
    609e:	a4 01       	movw	r20, r8
    60a0:	0c d1       	rcall	.+536    	; 0x62ba <__ultoa_invert>
    60a2:	a8 2e       	mov	r10, r24
    60a4:	a8 18       	sub	r10, r8
    60a6:	42 c0       	rjmp	.+132    	; 0x612c <vfprintf+0x290>
    60a8:	85 37       	cpi	r24, 0x75	; 117
    60aa:	31 f4       	brne	.+12     	; 0x60b8 <vfprintf+0x21c>
    60ac:	3f ee       	ldi	r19, 0xEF	; 239
    60ae:	b3 2e       	mov	r11, r19
    60b0:	b2 22       	and	r11, r18
    60b2:	2a e0       	ldi	r18, 0x0A	; 10
    60b4:	30 e0       	ldi	r19, 0x00	; 0
    60b6:	24 c0       	rjmp	.+72     	; 0x6100 <vfprintf+0x264>
    60b8:	99 ef       	ldi	r25, 0xF9	; 249
    60ba:	b9 2e       	mov	r11, r25
    60bc:	b2 22       	and	r11, r18
    60be:	8f 36       	cpi	r24, 0x6F	; 111
    60c0:	b9 f0       	breq	.+46     	; 0x60f0 <vfprintf+0x254>
    60c2:	20 f4       	brcc	.+8      	; 0x60cc <vfprintf+0x230>
    60c4:	88 35       	cpi	r24, 0x58	; 88
    60c6:	09 f0       	breq	.+2      	; 0x60ca <vfprintf+0x22e>
    60c8:	ac c0       	rjmp	.+344    	; 0x6222 <vfprintf+0x386>
    60ca:	0d c0       	rjmp	.+26     	; 0x60e6 <vfprintf+0x24a>
    60cc:	80 37       	cpi	r24, 0x70	; 112
    60ce:	21 f0       	breq	.+8      	; 0x60d8 <vfprintf+0x23c>
    60d0:	88 37       	cpi	r24, 0x78	; 120
    60d2:	09 f0       	breq	.+2      	; 0x60d6 <vfprintf+0x23a>
    60d4:	a6 c0       	rjmp	.+332    	; 0x6222 <vfprintf+0x386>
    60d6:	02 c0       	rjmp	.+4      	; 0x60dc <vfprintf+0x240>
    60d8:	20 e1       	ldi	r18, 0x10	; 16
    60da:	b2 2a       	or	r11, r18
    60dc:	b4 fe       	sbrs	r11, 4
    60de:	0b c0       	rjmp	.+22     	; 0x60f6 <vfprintf+0x25a>
    60e0:	84 e0       	ldi	r24, 0x04	; 4
    60e2:	b8 2a       	or	r11, r24
    60e4:	08 c0       	rjmp	.+16     	; 0x60f6 <vfprintf+0x25a>
    60e6:	24 ff       	sbrs	r18, 4
    60e8:	09 c0       	rjmp	.+18     	; 0x60fc <vfprintf+0x260>
    60ea:	e6 e0       	ldi	r30, 0x06	; 6
    60ec:	be 2a       	or	r11, r30
    60ee:	06 c0       	rjmp	.+12     	; 0x60fc <vfprintf+0x260>
    60f0:	28 e0       	ldi	r18, 0x08	; 8
    60f2:	30 e0       	ldi	r19, 0x00	; 0
    60f4:	05 c0       	rjmp	.+10     	; 0x6100 <vfprintf+0x264>
    60f6:	20 e1       	ldi	r18, 0x10	; 16
    60f8:	30 e0       	ldi	r19, 0x00	; 0
    60fa:	02 c0       	rjmp	.+4      	; 0x6100 <vfprintf+0x264>
    60fc:	20 e1       	ldi	r18, 0x10	; 16
    60fe:	32 e0       	ldi	r19, 0x02	; 2
    6100:	f8 01       	movw	r30, r16
    6102:	b7 fe       	sbrs	r11, 7
    6104:	07 c0       	rjmp	.+14     	; 0x6114 <vfprintf+0x278>
    6106:	60 81       	ld	r22, Z
    6108:	71 81       	ldd	r23, Z+1	; 0x01
    610a:	82 81       	ldd	r24, Z+2	; 0x02
    610c:	93 81       	ldd	r25, Z+3	; 0x03
    610e:	0c 5f       	subi	r16, 0xFC	; 252
    6110:	1f 4f       	sbci	r17, 0xFF	; 255
    6112:	06 c0       	rjmp	.+12     	; 0x6120 <vfprintf+0x284>
    6114:	60 81       	ld	r22, Z
    6116:	71 81       	ldd	r23, Z+1	; 0x01
    6118:	80 e0       	ldi	r24, 0x00	; 0
    611a:	90 e0       	ldi	r25, 0x00	; 0
    611c:	0e 5f       	subi	r16, 0xFE	; 254
    611e:	1f 4f       	sbci	r17, 0xFF	; 255
    6120:	a4 01       	movw	r20, r8
    6122:	cb d0       	rcall	.+406    	; 0x62ba <__ultoa_invert>
    6124:	a8 2e       	mov	r10, r24
    6126:	a8 18       	sub	r10, r8
    6128:	ff e7       	ldi	r31, 0x7F	; 127
    612a:	bf 22       	and	r11, r31
    612c:	b6 fe       	sbrs	r11, 6
    612e:	0b c0       	rjmp	.+22     	; 0x6146 <vfprintf+0x2aa>
    6130:	2b 2d       	mov	r18, r11
    6132:	2e 7f       	andi	r18, 0xFE	; 254
    6134:	a5 14       	cp	r10, r5
    6136:	50 f4       	brcc	.+20     	; 0x614c <vfprintf+0x2b0>
    6138:	b4 fe       	sbrs	r11, 4
    613a:	0a c0       	rjmp	.+20     	; 0x6150 <vfprintf+0x2b4>
    613c:	b2 fc       	sbrc	r11, 2
    613e:	08 c0       	rjmp	.+16     	; 0x6150 <vfprintf+0x2b4>
    6140:	2b 2d       	mov	r18, r11
    6142:	2e 7e       	andi	r18, 0xEE	; 238
    6144:	05 c0       	rjmp	.+10     	; 0x6150 <vfprintf+0x2b4>
    6146:	7a 2c       	mov	r7, r10
    6148:	2b 2d       	mov	r18, r11
    614a:	03 c0       	rjmp	.+6      	; 0x6152 <vfprintf+0x2b6>
    614c:	7a 2c       	mov	r7, r10
    614e:	01 c0       	rjmp	.+2      	; 0x6152 <vfprintf+0x2b6>
    6150:	75 2c       	mov	r7, r5
    6152:	24 ff       	sbrs	r18, 4
    6154:	0d c0       	rjmp	.+26     	; 0x6170 <vfprintf+0x2d4>
    6156:	fe 01       	movw	r30, r28
    6158:	ea 0d       	add	r30, r10
    615a:	f1 1d       	adc	r31, r1
    615c:	80 81       	ld	r24, Z
    615e:	80 33       	cpi	r24, 0x30	; 48
    6160:	11 f4       	brne	.+4      	; 0x6166 <vfprintf+0x2ca>
    6162:	29 7e       	andi	r18, 0xE9	; 233
    6164:	09 c0       	rjmp	.+18     	; 0x6178 <vfprintf+0x2dc>
    6166:	22 ff       	sbrs	r18, 2
    6168:	06 c0       	rjmp	.+12     	; 0x6176 <vfprintf+0x2da>
    616a:	73 94       	inc	r7
    616c:	73 94       	inc	r7
    616e:	04 c0       	rjmp	.+8      	; 0x6178 <vfprintf+0x2dc>
    6170:	82 2f       	mov	r24, r18
    6172:	86 78       	andi	r24, 0x86	; 134
    6174:	09 f0       	breq	.+2      	; 0x6178 <vfprintf+0x2dc>
    6176:	73 94       	inc	r7
    6178:	23 fd       	sbrc	r18, 3
    617a:	13 c0       	rjmp	.+38     	; 0x61a2 <vfprintf+0x306>
    617c:	20 ff       	sbrs	r18, 0
    617e:	0e c0       	rjmp	.+28     	; 0x619c <vfprintf+0x300>
    6180:	5a 2c       	mov	r5, r10
    6182:	73 14       	cp	r7, r3
    6184:	58 f4       	brcc	.+22     	; 0x619c <vfprintf+0x300>
    6186:	53 0c       	add	r5, r3
    6188:	57 18       	sub	r5, r7
    618a:	73 2c       	mov	r7, r3
    618c:	07 c0       	rjmp	.+14     	; 0x619c <vfprintf+0x300>
    618e:	b7 01       	movw	r22, r14
    6190:	80 e2       	ldi	r24, 0x20	; 32
    6192:	90 e0       	ldi	r25, 0x00	; 0
    6194:	2c 87       	std	Y+12, r18	; 0x0c
    6196:	65 d0       	rcall	.+202    	; 0x6262 <fputc>
    6198:	73 94       	inc	r7
    619a:	2c 85       	ldd	r18, Y+12	; 0x0c
    619c:	73 14       	cp	r7, r3
    619e:	b8 f3       	brcs	.-18     	; 0x618e <vfprintf+0x2f2>
    61a0:	04 c0       	rjmp	.+8      	; 0x61aa <vfprintf+0x30e>
    61a2:	73 14       	cp	r7, r3
    61a4:	10 f4       	brcc	.+4      	; 0x61aa <vfprintf+0x30e>
    61a6:	37 18       	sub	r3, r7
    61a8:	01 c0       	rjmp	.+2      	; 0x61ac <vfprintf+0x310>
    61aa:	31 2c       	mov	r3, r1
    61ac:	24 ff       	sbrs	r18, 4
    61ae:	11 c0       	rjmp	.+34     	; 0x61d2 <vfprintf+0x336>
    61b0:	b7 01       	movw	r22, r14
    61b2:	80 e3       	ldi	r24, 0x30	; 48
    61b4:	90 e0       	ldi	r25, 0x00	; 0
    61b6:	2c 87       	std	Y+12, r18	; 0x0c
    61b8:	54 d0       	rcall	.+168    	; 0x6262 <fputc>
    61ba:	2c 85       	ldd	r18, Y+12	; 0x0c
    61bc:	22 ff       	sbrs	r18, 2
    61be:	1c c0       	rjmp	.+56     	; 0x61f8 <vfprintf+0x35c>
    61c0:	21 ff       	sbrs	r18, 1
    61c2:	03 c0       	rjmp	.+6      	; 0x61ca <vfprintf+0x32e>
    61c4:	88 e5       	ldi	r24, 0x58	; 88
    61c6:	90 e0       	ldi	r25, 0x00	; 0
    61c8:	02 c0       	rjmp	.+4      	; 0x61ce <vfprintf+0x332>
    61ca:	88 e7       	ldi	r24, 0x78	; 120
    61cc:	90 e0       	ldi	r25, 0x00	; 0
    61ce:	b7 01       	movw	r22, r14
    61d0:	0c c0       	rjmp	.+24     	; 0x61ea <vfprintf+0x34e>
    61d2:	82 2f       	mov	r24, r18
    61d4:	86 78       	andi	r24, 0x86	; 134
    61d6:	81 f0       	breq	.+32     	; 0x61f8 <vfprintf+0x35c>
    61d8:	21 fd       	sbrc	r18, 1
    61da:	02 c0       	rjmp	.+4      	; 0x61e0 <vfprintf+0x344>
    61dc:	80 e2       	ldi	r24, 0x20	; 32
    61de:	01 c0       	rjmp	.+2      	; 0x61e2 <vfprintf+0x346>
    61e0:	8b e2       	ldi	r24, 0x2B	; 43
    61e2:	27 fd       	sbrc	r18, 7
    61e4:	8d e2       	ldi	r24, 0x2D	; 45
    61e6:	b7 01       	movw	r22, r14
    61e8:	90 e0       	ldi	r25, 0x00	; 0
    61ea:	3b d0       	rcall	.+118    	; 0x6262 <fputc>
    61ec:	05 c0       	rjmp	.+10     	; 0x61f8 <vfprintf+0x35c>
    61ee:	b7 01       	movw	r22, r14
    61f0:	80 e3       	ldi	r24, 0x30	; 48
    61f2:	90 e0       	ldi	r25, 0x00	; 0
    61f4:	36 d0       	rcall	.+108    	; 0x6262 <fputc>
    61f6:	5a 94       	dec	r5
    61f8:	a5 14       	cp	r10, r5
    61fa:	c8 f3       	brcs	.-14     	; 0x61ee <vfprintf+0x352>
    61fc:	aa 94       	dec	r10
    61fe:	f4 01       	movw	r30, r8
    6200:	ea 0d       	add	r30, r10
    6202:	f1 1d       	adc	r31, r1
    6204:	b7 01       	movw	r22, r14
    6206:	80 81       	ld	r24, Z
    6208:	90 e0       	ldi	r25, 0x00	; 0
    620a:	2b d0       	rcall	.+86     	; 0x6262 <fputc>
    620c:	a1 10       	cpse	r10, r1
    620e:	f6 cf       	rjmp	.-20     	; 0x61fc <vfprintf+0x360>
    6210:	05 c0       	rjmp	.+10     	; 0x621c <vfprintf+0x380>
    6212:	b7 01       	movw	r22, r14
    6214:	80 e2       	ldi	r24, 0x20	; 32
    6216:	90 e0       	ldi	r25, 0x00	; 0
    6218:	24 d0       	rcall	.+72     	; 0x6262 <fputc>
    621a:	3a 94       	dec	r3
    621c:	31 10       	cpse	r3, r1
    621e:	f9 cf       	rjmp	.-14     	; 0x6212 <vfprintf+0x376>
    6220:	50 ce       	rjmp	.-864    	; 0x5ec2 <vfprintf+0x26>
    6222:	f7 01       	movw	r30, r14
    6224:	26 81       	ldd	r18, Z+6	; 0x06
    6226:	37 81       	ldd	r19, Z+7	; 0x07
    6228:	02 c0       	rjmp	.+4      	; 0x622e <vfprintf+0x392>
    622a:	2f ef       	ldi	r18, 0xFF	; 255
    622c:	3f ef       	ldi	r19, 0xFF	; 255
    622e:	c9 01       	movw	r24, r18
    6230:	2c 96       	adiw	r28, 0x0c	; 12
    6232:	e2 e1       	ldi	r30, 0x12	; 18
    6234:	61 cc       	rjmp	.-1854   	; 0x5af8 <__epilogue_restores__>

00006236 <strnlen_P>:
    6236:	fc 01       	movw	r30, r24
    6238:	05 90       	lpm	r0, Z+
    623a:	61 50       	subi	r22, 0x01	; 1
    623c:	70 40       	sbci	r23, 0x00	; 0
    623e:	01 10       	cpse	r0, r1
    6240:	d8 f7       	brcc	.-10     	; 0x6238 <strnlen_P+0x2>
    6242:	80 95       	com	r24
    6244:	90 95       	com	r25
    6246:	8e 0f       	add	r24, r30
    6248:	9f 1f       	adc	r25, r31
    624a:	08 95       	ret

0000624c <strnlen>:
    624c:	fc 01       	movw	r30, r24
    624e:	61 50       	subi	r22, 0x01	; 1
    6250:	70 40       	sbci	r23, 0x00	; 0
    6252:	01 90       	ld	r0, Z+
    6254:	01 10       	cpse	r0, r1
    6256:	d8 f7       	brcc	.-10     	; 0x624e <strnlen+0x2>
    6258:	80 95       	com	r24
    625a:	90 95       	com	r25
    625c:	8e 0f       	add	r24, r30
    625e:	9f 1f       	adc	r25, r31
    6260:	08 95       	ret

00006262 <fputc>:
    6262:	0f 93       	push	r16
    6264:	1f 93       	push	r17
    6266:	cf 93       	push	r28
    6268:	df 93       	push	r29
    626a:	8c 01       	movw	r16, r24
    626c:	eb 01       	movw	r28, r22
    626e:	8b 81       	ldd	r24, Y+3	; 0x03
    6270:	81 fd       	sbrc	r24, 1
    6272:	03 c0       	rjmp	.+6      	; 0x627a <fputc+0x18>
    6274:	0f ef       	ldi	r16, 0xFF	; 255
    6276:	1f ef       	ldi	r17, 0xFF	; 255
    6278:	1a c0       	rjmp	.+52     	; 0x62ae <fputc+0x4c>
    627a:	82 ff       	sbrs	r24, 2
    627c:	0d c0       	rjmp	.+26     	; 0x6298 <fputc+0x36>
    627e:	2e 81       	ldd	r18, Y+6	; 0x06
    6280:	3f 81       	ldd	r19, Y+7	; 0x07
    6282:	8c 81       	ldd	r24, Y+4	; 0x04
    6284:	9d 81       	ldd	r25, Y+5	; 0x05
    6286:	28 17       	cp	r18, r24
    6288:	39 07       	cpc	r19, r25
    628a:	64 f4       	brge	.+24     	; 0x62a4 <fputc+0x42>
    628c:	e8 81       	ld	r30, Y
    628e:	f9 81       	ldd	r31, Y+1	; 0x01
    6290:	01 93       	st	Z+, r16
    6292:	f9 83       	std	Y+1, r31	; 0x01
    6294:	e8 83       	st	Y, r30
    6296:	06 c0       	rjmp	.+12     	; 0x62a4 <fputc+0x42>
    6298:	e8 85       	ldd	r30, Y+8	; 0x08
    629a:	f9 85       	ldd	r31, Y+9	; 0x09
    629c:	80 2f       	mov	r24, r16
    629e:	09 95       	icall
    62a0:	89 2b       	or	r24, r25
    62a2:	41 f7       	brne	.-48     	; 0x6274 <fputc+0x12>
    62a4:	8e 81       	ldd	r24, Y+6	; 0x06
    62a6:	9f 81       	ldd	r25, Y+7	; 0x07
    62a8:	01 96       	adiw	r24, 0x01	; 1
    62aa:	9f 83       	std	Y+7, r25	; 0x07
    62ac:	8e 83       	std	Y+6, r24	; 0x06
    62ae:	c8 01       	movw	r24, r16
    62b0:	df 91       	pop	r29
    62b2:	cf 91       	pop	r28
    62b4:	1f 91       	pop	r17
    62b6:	0f 91       	pop	r16
    62b8:	08 95       	ret

000062ba <__ultoa_invert>:
    62ba:	fa 01       	movw	r30, r20
    62bc:	aa 27       	eor	r26, r26
    62be:	28 30       	cpi	r18, 0x08	; 8
    62c0:	51 f1       	breq	.+84     	; 0x6316 <__ultoa_invert+0x5c>
    62c2:	20 31       	cpi	r18, 0x10	; 16
    62c4:	81 f1       	breq	.+96     	; 0x6326 <__ultoa_invert+0x6c>
    62c6:	e8 94       	clt
    62c8:	6f 93       	push	r22
    62ca:	6e 7f       	andi	r22, 0xFE	; 254
    62cc:	6e 5f       	subi	r22, 0xFE	; 254
    62ce:	7f 4f       	sbci	r23, 0xFF	; 255
    62d0:	8f 4f       	sbci	r24, 0xFF	; 255
    62d2:	9f 4f       	sbci	r25, 0xFF	; 255
    62d4:	af 4f       	sbci	r26, 0xFF	; 255
    62d6:	b1 e0       	ldi	r27, 0x01	; 1
    62d8:	3e d0       	rcall	.+124    	; 0x6356 <__ultoa_invert+0x9c>
    62da:	b4 e0       	ldi	r27, 0x04	; 4
    62dc:	3c d0       	rcall	.+120    	; 0x6356 <__ultoa_invert+0x9c>
    62de:	67 0f       	add	r22, r23
    62e0:	78 1f       	adc	r23, r24
    62e2:	89 1f       	adc	r24, r25
    62e4:	9a 1f       	adc	r25, r26
    62e6:	a1 1d       	adc	r26, r1
    62e8:	68 0f       	add	r22, r24
    62ea:	79 1f       	adc	r23, r25
    62ec:	8a 1f       	adc	r24, r26
    62ee:	91 1d       	adc	r25, r1
    62f0:	a1 1d       	adc	r26, r1
    62f2:	6a 0f       	add	r22, r26
    62f4:	71 1d       	adc	r23, r1
    62f6:	81 1d       	adc	r24, r1
    62f8:	91 1d       	adc	r25, r1
    62fa:	a1 1d       	adc	r26, r1
    62fc:	20 d0       	rcall	.+64     	; 0x633e <__ultoa_invert+0x84>
    62fe:	09 f4       	brne	.+2      	; 0x6302 <__ultoa_invert+0x48>
    6300:	68 94       	set
    6302:	3f 91       	pop	r19
    6304:	2a e0       	ldi	r18, 0x0A	; 10
    6306:	26 9f       	mul	r18, r22
    6308:	11 24       	eor	r1, r1
    630a:	30 19       	sub	r19, r0
    630c:	30 5d       	subi	r19, 0xD0	; 208
    630e:	31 93       	st	Z+, r19
    6310:	de f6       	brtc	.-74     	; 0x62c8 <__ultoa_invert+0xe>
    6312:	cf 01       	movw	r24, r30
    6314:	08 95       	ret
    6316:	46 2f       	mov	r20, r22
    6318:	47 70       	andi	r20, 0x07	; 7
    631a:	40 5d       	subi	r20, 0xD0	; 208
    631c:	41 93       	st	Z+, r20
    631e:	b3 e0       	ldi	r27, 0x03	; 3
    6320:	0f d0       	rcall	.+30     	; 0x6340 <__ultoa_invert+0x86>
    6322:	c9 f7       	brne	.-14     	; 0x6316 <__ultoa_invert+0x5c>
    6324:	f6 cf       	rjmp	.-20     	; 0x6312 <__ultoa_invert+0x58>
    6326:	46 2f       	mov	r20, r22
    6328:	4f 70       	andi	r20, 0x0F	; 15
    632a:	40 5d       	subi	r20, 0xD0	; 208
    632c:	4a 33       	cpi	r20, 0x3A	; 58
    632e:	18 f0       	brcs	.+6      	; 0x6336 <__ultoa_invert+0x7c>
    6330:	49 5d       	subi	r20, 0xD9	; 217
    6332:	31 fd       	sbrc	r19, 1
    6334:	40 52       	subi	r20, 0x20	; 32
    6336:	41 93       	st	Z+, r20
    6338:	02 d0       	rcall	.+4      	; 0x633e <__ultoa_invert+0x84>
    633a:	a9 f7       	brne	.-22     	; 0x6326 <__ultoa_invert+0x6c>
    633c:	ea cf       	rjmp	.-44     	; 0x6312 <__ultoa_invert+0x58>
    633e:	b4 e0       	ldi	r27, 0x04	; 4
    6340:	a6 95       	lsr	r26
    6342:	97 95       	ror	r25
    6344:	87 95       	ror	r24
    6346:	77 95       	ror	r23
    6348:	67 95       	ror	r22
    634a:	ba 95       	dec	r27
    634c:	c9 f7       	brne	.-14     	; 0x6340 <__ultoa_invert+0x86>
    634e:	00 97       	sbiw	r24, 0x00	; 0
    6350:	61 05       	cpc	r22, r1
    6352:	71 05       	cpc	r23, r1
    6354:	08 95       	ret
    6356:	9b 01       	movw	r18, r22
    6358:	ac 01       	movw	r20, r24
    635a:	0a 2e       	mov	r0, r26
    635c:	06 94       	lsr	r0
    635e:	57 95       	ror	r21
    6360:	47 95       	ror	r20
    6362:	37 95       	ror	r19
    6364:	27 95       	ror	r18
    6366:	ba 95       	dec	r27
    6368:	c9 f7       	brne	.-14     	; 0x635c <__ultoa_invert+0xa2>
    636a:	62 0f       	add	r22, r18
    636c:	73 1f       	adc	r23, r19
    636e:	84 1f       	adc	r24, r20
    6370:	95 1f       	adc	r25, r21
    6372:	a0 1d       	adc	r26, r0
    6374:	08 95       	ret

00006376 <__mulshisi3>:
    6376:	b7 ff       	sbrs	r27, 7
    6378:	85 cb       	rjmp	.-2294   	; 0x5a84 <__muluhisi3>

0000637a <__mulohisi3>:
    637a:	84 db       	rcall	.-2296   	; 0x5a84 <__muluhisi3>
    637c:	82 1b       	sub	r24, r18
    637e:	93 0b       	sbc	r25, r19
    6380:	08 95       	ret

00006382 <_exit>:
    6382:	f8 94       	cli

00006384 <__stop_program>:
    6384:	ff cf       	rjmp	.-2      	; 0x6384 <__stop_program>
